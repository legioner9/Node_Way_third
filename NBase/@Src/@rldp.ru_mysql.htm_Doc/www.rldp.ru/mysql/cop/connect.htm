<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=koi8-r">
  <title>Глава 7. Соединения в Connector/Python</title>
  <META NAME="Author" CONTENT="Alexey V. Pautov">
</head>

<body>
<script type="text/javascript">
nN = navigator.appName;
function fsearch(str)
{
  if (document.fform.myradio[0].checked) {
     open('../../../yandex.ru/sitesearch@text=' + str + '&site=' +
          document.location.hostname);
  } else {open('../../../yandex.ru/sitesearch@text=' + str);}
}

function MouseUpHandler(e)
{
  if (nN == 'Netscape' || nN == 'Opera') {
     if (document.getSelection()) {
        str = document.getSelection();
        newstr = str.replace(/\n+/g, ' ');
        str = newstr.replace(/\ +/g, ' ');
        if (str.length > 100) {
           var i;
           i = 0;
           str = str.slice(0, 100);
           i = str.lastIndexOf(' ');
           if (i > 0){str = str.slice(0, i);}
        }
        document.fform.strf.value = str;
     }
  } else if(nN == 'Microsoft Internet Explorer') {
    if (document.selection.createRange()) {
       var range = document.selection.createRange();
       var str = range.text;
    }
    if (str) {
       str = str.replace(/\ +/g, " ");
       document.fform.strf.value = str;
    }
  }
  return true;
}
if (window.Event) {document.captureEvents(Event.MOUSEUP);}
document.onmouseup = MouseUpHandler;
</script>

<center><table><tr><td><a href="../../default.htm">
<IMG SRC="../../img/b_book.gif" ALT="RussianLDP" HEIGHT=48 WIDTH=55
ALIGN=ABSCENTER></a></td>

<td><!--Rating@Mail.ru COUNTEr-->
<a target=_top href="../../../top.mail.ru/jump@from=1364238">
<img src="../../../d1.cd.b4.a1.top.list.ru/counter@id=1364238;t=230"
border=0 height=31 width=88 alt="Рейтинг@Mail.ru"/></a>
</td><!--/COUNTER-->

<td><!-- begin of Top100 code -->
<script id="top100Counter" type="text/javascript"
src="../../../cnt.rambler.ru/top100.jcn@1448139"></script>
<noscript><a href="../../../top100.rambler.ru/top100/default.htm">
<img src="../../../cnt.rambler.ru/top100.cnt@1448139" alt="Rambler's Top100"
width="81" height="63" border="0" /></a></noscript>
<!-- end of Top100 code --></td>

<td><!-- HotLog -->
<script type="text/javascript" language="javascript">
hotlog_js="1.0";
hotlog_r=""+Math.random()+"&s=525943&im=127&r="+escape(document.referrer)+
"&pg="+escape(window.location.href);
document.cookie="hotlog=1; path=/"; hotlog_r+="&c="+(document.cookie?"Y":"N");
</script>
<script type="text/javascript" language="javascript1.1">
hotlog_js="1.1";hotlog_r+="&j="+(navigator.javaEnabled()?"Y":"N")
</script>

<script type="text/javascript" language="javascript1.2">
hotlog_js="1.2";
hotlog_r+="&wh="+screen.width+'x'+screen.height+"&px="+
(((navigator.appName.substring(0,3)=="Mic"))?
screen.colorDepth:screen.pixelDepth)</script>

<script type="text/javascript" language="javascript1.3">
hotlog_js="1.3"</script>
<script type="text/javascript" language="javascript">
hotlog_r+="&js="+hotlog_js;
document.write("<a href='../../../click.hotlog.ru/@525943' target='_top'>
<img "+" src='http://hit27.hotlog.ru/cgi-bin/hotlog/count?"+
hotlog_r+"&' border=0 width=88 height=31 alt=HotLog><\/a>")</script>

<noscript>
<a href="../../../click.hotlog.ru/@525943" target="_top">
<img src="../../../hit27.hotlog.ru/cgi-bin/hotlog/count@s=525943&im=127"
border="0" width="88" height="31" alt="HotLog"></a></noscript></td>
<!-- /HotLog -->

<td><!--LiveInternet counter--><script type="text/javascript"><!--
document.write("<a href='../../../www.liveinternet.ru/click' "+
"target=_blank><img src='http://counter.yadro.ru/hit?t52.15;r"+
escape(document.referrer)+((typeof(screen)=="undefined")?"":
";s"+screen.width+"*"+screen.height+"*"+(screen.colorDepth?
screen.colorDepth:screen.pixelDepth))+";u"+escape(document.URL)+
";"+Math.random()+"' alt='' title='LiveInternet: показано число просмотров и"+
" посетителей за 24 часа' "+"border=0 width=88 height=31><\/a>")//-->
</script></td></tr>
<!--/LiveInternet-->

<tr><td><FONT SIZE=-1><b>WebMoney:&nbsp;</b><br>
WMZ Z294115950220&nbsp;<br>
WMR R409981405661&nbsp;<br>
WME E134003968233&nbsp;</FONT></td>

<td><FONT SIZE=-1><b>Visa&nbsp;</b><br>
4274 3200 2453 6495&nbsp;</FONT></td>
</tr></table></center>
<P><index><table><tr><td>

<h1><a name="connector-python-connecting"></a>
Глава 7. Соединения в Connector/Python</h1>
<p>Connector/Python обеспечивает вызов <code class="literal">connect()
</code>, чтобы установить связь с сервером MySQL. Следующие разделы описывают
разрешенные аргументы в <code class="literal">connect()</code> и описывает,
как использовать файлы опций, которые поставляют дополнительные аргументы.</p>

<h2><a name="connector-python-connectargs"></a>
7.1. Параметры связи Connector/Python</h2>
<p>Связь с сервером MySQL может быть установлена, используя функцию
<code class="literal">mysql.connector.connect()</code> или класс
<code class="literal">mysql.connector.MySQLConnection()</code>:</p>

<pre class="programlisting">
cnx = mysql.connector.connect(user='joe', database='test')
cnx = MySQLConnection(user='joe', database='test')
</pre>

<p>Следующая таблица описывает аргументы, которые могут использоваться, чтобы
начать связь. Звездочка (*) после аргумента указывает на синонимичное имя
аргумента, доступное только для совместимости с другими драйверами Python
MySQL. Oracle рекомендует не использовать эти альтернативные имена.</p>

<a name="connector-python-connectargs-listing"></a>
<p><b>Таблица 7.1. Аргументы соединения для Connector/Python</b></p>
<table><thead><tr>
<th scope="col">Имя аргумента</th>
<th scope="col">Значение по умолчанию</th>
<th scope="col">Описание</th></tr></thead>
<tbody><tr><td scope="row"><code class="literal">user</code>
(<code class="literal">username</code>*)</td><td></td>
<td>Имя пользователя для сервера MySQL.</td></tr>
<tr><td scope="row"><code class="literal">password</code>
(<code class="literal">passwd</code>*)</td>
<td></td><td>Пароль пользователя для сервера MySQL.</td></tr>
<tr><td scope="row"><code class="literal">database</code>
(<code class="literal">db</code>*)</td><td></td><td>Имя базы данных, чтобы
использовать, соединяясь с сервером MySQL.</td></tr>
<tr><td scope="row"><code class="literal">host</code></td>
<td>127.0.0.1</td>
<td>Имя хоста или IP-адрес сервера MySQL.</td></tr>
<tr><td scope="row"><code class="literal">port</code></td>
<td>3306</td>
<td>Порт TCP/IP сервера MySQL. Должно быть целое число.</td></tr>
<tr><td scope="row"><code class="literal">unix_socket</code></td><td></td>
<td>Местоположение файла сокета Unix.</td></tr>
<tr><td scope="row"><code class="literal">auth_plugin</code></td>
<td></td><td>Плагин идентификации, добавлено в 1.2.1.</td></tr>
<tr><td scope="row"><code class="literal">use_unicode</code></td>
<td><code class="literal">True</code></td>
<td>Использовать ли Unicode.</td></tr>
<tr><td scope="row"><code class="literal">charset</code></td>
<td><code class="literal">utf8</code></td>
<td>Какой набор символов MySQL использовать.</td></tr>
<tr><td scope="row"><code class="literal">collation</code></td>
<td><code class="literal">utf8mb4_general_ai_ci</code> (это
<code class="literal">utf8_general_ci</code> в 2.x</td>
<td>Какое сопоставление MySQL использовать. Значения по умолчанию в 8.x
произведены от значений по умолчанию последнего MySQL Server 8.0.</td></tr>
<tr><td scope="row"><code class="literal">autocommit</code></td>
<td><code class="literal">False</code></td>
<td>Включен ли <a href="../../../https@dev.mysql.com/doc/refman/8.0/en/glossary.html#glos_autocommit"
target="_top">autocommit</a>.</td></tr>
<tr><td scope="row"><code class="literal">time_zone</code></td>
<td></td><td>Установить переменную сеанса
<code class="literal">time_zone</code> во время связи.</td></tr>
<tr><td scope="row"><code class="literal">sql_mode</code></td><td></td>
<td>Установить переменную сеанса <code class="literal">sql_mode</code>
во время связи.</td></tr>
<tr><td scope="row"><code class="literal">get_warnings</code></td>
<td><code class="literal">False</code></td>
<td>Получать ли предупреждения.</td></tr>
<tr><td scope="row"><code class="literal">raise_on_warnings</code></td>
<td><code class="literal">False</code></td>
<td>Поднять ли исключение на предупреждениях.</td></tr>
<tr><td scope="row"><code class="literal">connection_timeout</code>
(<code class="literal">connect_timeout</code>*)</td>
<td></td><td>Тайм-аут для TCP и сокетных соединений Unix.</td></tr>
<tr><td scope="row"><code class="literal">client_flags</code></td>
<td></td><td>Флаги клиента MySQL.</td></tr>
<tr><td scope="row"><code class="literal">buffered</code></td>
<td><code class="literal">False</code></td>
<td>Приносят ли объекты курсора немедленно результаты
после выполнения запросов.</td></tr>
<tr><td scope="row"><code class="literal">raw</code></td>
<td><code class="literal">False</code></td>
<td>Возвращены ли результаты MySQL как есть, а
не преобразованы в типы Python.</td></tr>
<tr><td scope="row"><code class="literal">consume_results</code></td>
<td>False</td>
<td>Прочитать ли автоматически наборы результатов.</td></tr>
<tr><td scope="row"><code class="literal">ssl_ca</code></td>
<td></td><td>Файл, содержащий сертификат SSL авторизации.</td></tr>
<tr><td scope="row"><code class="literal">ssl_cert</code></td>
<td></td><td>Файл, содержащий сертификат SSL.</td></tr>
<tr><td scope="row"><code class="literal">ssl_disabled</code></td>
<td><code class="literal">False</code></td>
<td><code class="literal">True</code> выключает SSL/TLS,
добавлено в Connector/Python 2.1.7.</td></tr>
<tr><td scope="row"><code class="literal">ssl_key</code></td>
<td></td><td>Файл, содержащий ключ SSL.</td></tr>
<tr><td scope="row"><code class="literal">ssl_verify_cert</code></td>
<td><code class="literal">False</code></td>
<td>Когда установлено в <code class="literal">True</code>, проверяет
сертификат сервера с файлом сертификата, определенным опцией
<code class="literal">ssl_ca</code>. Любое несоответствие вызывает исключение
<code class="literal">ValueError</code>.</td></tr>
<tr><td scope="row"><code class="literal">ssl_verify_identity</code></td>
<td><code class="literal">False</code></td>
<td>Когда установлено в <code class="literal">True</code>,
дополнительно выполните проверку идентичности имени хоста, проверив имя
хоста, которое клиент использует для соединения с сервером по сертификату,
который сервер посылает клиенту.
Добавлено в Connector/Python 8.0.14.</td></tr>
<tr><td scope="row"><code class="literal">force_ipv6</code></td>
<td><code class="literal">False</code></td>
<td>Когда установлено в <code class="literal">True</code>, применяет IPv6,
когда адрес разрешается в IPv4 и IPv6. По умолчанию IPv4
используется в таких случаях.</td></tr>
<tr><td scope="row"><code class="literal">dsn</code></td><td></td>
<td>Не поддержано (поднимает исключение
<code class="literal">NotSupportedError</code>, когда используется).</td></tr>
<tr><td scope="row"><code class="literal">pool_name</code></td><td></td>
<td>Название пула связи. Ограничивается алфавитно-цифровыми символами и
специальными символами <code class="literal">.</code>,
<code class="literal">_</code>, <code class="literal">*</code>,
<code class="literal">$</code> и <code class="literal">#</code>.
Название пула должно быть не больше
<code class="literal">pooling.CNX_POOL_MAXNAMESIZE</code>
символов (по умолчанию 64).</td></tr>
<tr><td scope="row"><code class="literal">pool_size</code></td>
<td>5</td><td>Размер пула связи должен быть больше 0 и меньше или равным
<code class="literal">pooling.CNX_POOL_MAXSIZE</code>
(по умолчанию 32).</td></tr>
<tr><td scope="row"><code class="literal">pool_reset_session</code></td>
<td><code class="literal">True</code></td><td>Перезагрузить ли переменные
сеанса, когда связь возвращена в пул.</td></tr>
<tr><td scope="row"><code class="literal">compress</code></td>
<td><code class="literal">False</code></td>
<td>Использовать ли сжатый протокол клиент-сервер.</td></tr>
<tr><td scope="row"><code class="literal">converter_class</code></td>
<td></td><td>Класс конвертера, чтобы использовать.</td></tr>
<tr><td scope="row"><code class="literal">failover</code></td>
<td></td><td>Последовательность отказоустойчивости сервера.</td></tr>
<tr><td scope="row"><code class="literal">option_files</code></td>
<td></td><td>Какие файлы опций прочитать. Добавлено в 2.0.0.</td></tr>
<tr><td scope="row"><code class="literal">option_groups</code></td>
<td><code class="literal">['client', 'connector_python']</code></td>
<td>Какие группы прочитать из файлов опций. Добавлено в 2.0.0.</td></tr>
<tr><td scope="row"><code class="literal">allow_local_infile</code></td>
<td><code class="literal">True</code></td>
<td>Позволить ли <a href="../../../https@dev.mysql.com/doc/refman/8.0/en/load-data.html"
target="_top"><code class="literal">LOAD DATA LOCAL INFILE</code></a>.
Добавлено в 2.0.0.</td></tr>
<tr><td scope="row"><code class="literal">use_pure</code></td>
<td><code class="literal">False</code> в 8.0.11 и
<code class="literal">True</code> более ранних версиях. Если только одна
реализация (C или Python) доступна, то значение по умолчанию собирается
позволить доступную реализацию.</td>
<td>Использовать ли чистый Python или расширение C. Если
<code class="literal">use_pure=False</code> и C расширение недоступно,
Connector/Python автоматически отступит к чистому Python.
Может быть установлено с
<span class="emphasis"><em>mysql.connector.connect()</em></span>, но не с
<span class="emphasis"><em>MySQLConnection.connect()</em></span>.
Добавлено в 2.1.1.</td></tr></tbody></table><br class="table-break">

<h3><a name="idm45244849303072"></a>Опции авторизации MySQL</h3>
<p>Идентификация с использованием MySQL
<code class="literal">username</code> и
<code class="literal">password</code>.</p>

<p>MySQL Connector/Python не поддерживает старые протоколы MySQL до 4.1.</p>
<p>Когда аргумент <code class="literal">database</code> дан, текущая база
данных установлена в данное значение. Чтобы изменить текущую базу данных
позже, выполните SQL-запрос <code class="literal">USE</code> или установите
свойство <code class="literal">database</code> экземпляра
<code class="literal">MySQLConnection</code>.</p>

<p>По умолчанию Connector/Python пытается соединиться с сервером MySQL,
работающим на местном хосте, использующем TCP/IP.
<code class="literal">host</code> по умолчанию установлен к IP-адресу
127.0.0.1 и <code class="literal">port</code> к 3306.
Unix сокеты поддерживаются, устанавливая
<code class="literal">unix_socket</code>.
Именованные каналы на платформе Windows не поддерживаются.</p>

<p>Connector/Python 1.2.1 и выше понимает
плагины идентификации, доступные с MySQL 5.6. Это включает
<code class="literal">mysql_clear_password</code> и
<code class="literal">sha256_password</code>,
оба из которых требуют связи SSL.
Плагин <code class="literal">sha256_password</code>
не работает по не-SSL связи, потому что Connector/Python
не поддерживает шифрование RSA.</p>

<p>Метод <code class="literal">connect()</code> понимает параметр
<code class="literal">auth_plugin</code>, который может использоваться, чтобы
вызвать использование конкретного плагина. Например, если сервер формируется,
чтобы использовать <code class="literal">sha256_password</code> по умолчанию
и вы хотите соединиться с учетной записью, которая подтверждает подлинность
использованием <code class="literal">mysql_native_password</code>,
соединитесь с использованием SSL или определите
<code class="literal">auth_plugin='mysql_native_password'</code>.</p>

<h3><a name="idm45244849288048"></a>Кодировка символов</h3>
<p>По умолчанию последовательности, прибывающие из MySQL, возвращены как
литералы Unicode. Чтобы изменить это поведение, установите
<code class="literal">use_unicode</code> = <code class="literal">False</code>.
Можно изменить настройки для связи клиента через параметр
<code class="literal">charset</code>. Чтобы изменить набор символов после
соединения с MySQL, установите свойство <code class="literal">charset</code>
экземпляра <code class="literal">MySQLConnection</code>.
Эта техника предпочтительней использования SQL-запроса
<code class="literal">SET NAMES</code> напрямую.
Подобно свойству <code class="literal">charset</code> можно установить
<code class="literal">collation</code> для текущей сессии MySQL.</p>

<h3><a name="idm45244849281616"></a>Транзакции</h3>
<p>Значение <code class="literal">autocommit</code> по умолчанию
<code class="literal">False</code>, таким образом, транзакции
автоматически не передаются. Вызовите метод
<code class="literal">commit()</code> экземпляра
<code class="literal">MySQLConnection</code>
в рамках вашего приложения после выполнения ряда связанных действий.
Для непротиворечивости данных и высокой пропускной способности для операций
записи лучше оставить параметр конфигурации
<code class="literal">autocommit</code> выключенным, используя
<code class="literal">InnoDB</code> или другие транзакционные таблицы.</p>

<h3><a name="idm45244849276560"></a>Часовые пояса</h3>
<p>Часовой пояс может быть установлен для каждого подключения параметром
<code class="literal">time_zone</code>.
Это полезно, например, если сервер MySQL установлен в UTC и значения
<code class="literal">TIMESTAMP</code> должны быть возвращены MySQL,
преобразованными в часовой пояс <code class="literal">PST</code>.</p>

<h3><a name="idm45244849273408"></a>Режимы SQL</h3>
<p>MySQL поддерживает так называемые режимы SQL, которые изменяют поведение
сервера глобально или для каждого подключения. Например, чтобы поднять
предупреждения как ошибки, установите <code class="literal">sql_mode</code> =
<code class="literal">TRADITIONAL</code>.
Для получения дополнительной информации посмотрите
<a href="../../../https@dev.mysql.com/doc/refman/8.0/en/sql-mode.html"
target="_top">Server SQL Modes</a>.</p>

<h3><a name="idm45244849270336"></a>Поиск неисправностей и обработка ошибок
</h3>
<p>Предупреждения, произведенные запросами, получены автоматически, когда
<code class="literal">get_warnings</code> = <code class="literal">True</code>.
Можно также немедленно поднять исключение, установив
<code class="literal">raise_on_warnings</code> =
<code class="literal">True</code>. Рассмотрите использование
<a href="../../../https@dev.mysql.com/doc/refman/8.0/en/sql-mode.html"
target="_top">sql_mode</a> для того, чтобы
превратить предупреждения в ошибки.</p>
<p>Чтобы установить значение тайм-аута для связей, надо использовать
<code class="literal">connection_timeout</code>.</p>

<h3><a name="idm45244849264944"></a>
Управление возможностями, используя флаги клиента</h3>
<p>MySQL применяет <a href="../../../https@dev.mysql.com/doc/refman/8.0/en/mysql-real-connect.html"
target="_top">флаги клиента</a>, чтобы позволить или отключить опции.
Используя параметр <code class="literal">client_flags</code>, вы имеете
контроль над тем, что установлено. Чтобы узнать, какие флаги
доступны, используйте следующее:</p>

<pre class="programlisting">
from mysql.connector.constants import ClientFlag
print '\n'.join(ClientFlag.get_full_info())
</pre>

<p>Если <code class="literal">client_flags</code>
не определяется (то есть, это ноль), умолчания
используются для MySQL 4.1 и выше. Если вы определяете целое число больше
<code class="literal">0</code>, удостоверьтесь, что все флаги установлены
правильно. Лучший способ установить и сбросить флаги индивидуально состоит в
том, чтобы использовать список. Например, чтобы установить
<code class="literal">FOUND_ROWS</code>, но отключить умолчание
<code class="literal">LONG_FLAG</code>:</p>

<pre class="programlisting">
flags = [ClientFlag.FOUND_ROWS, -ClientFlag.LONG_FLAG]
mysql.connector.connect(client_flags=flags)
</pre>

<h3><a name="idm45244849257328"></a>Обработка набора результатов</h3>
<p>По умолчанию MySQL Connector/Python не буферизует или предварительно
получает результаты. Это означает, что после того, как запрос выполняется,
ваша программа ответственна за получение данных. Это избегает чрезмерного
использования памяти, когда запросы возвращают большие наборы результатов.
Если вы знаете, что набор результатов достаточно небольшой, чтобы
обработать его сразу, можно немедленно забрать результаты, установив
<code class="literal">buffered</code> = <code class="literal">True</code>.
Также возможно установить это на курсор (см.
<a href="refer.htm#connector-python-api-mysqlconnection-cursor">раздел
10.2.6</a>).</p>

<p>Результаты, произведенные запросами, обычно не читаются, пока программа
клиента не забирает их. Чтобы автоматически потреблять и отказаться от
наборов результатов, установите опцию
<code class="literal">consume_results</code> =
<code class="literal">True</code>. Результат состоит в том, что все
результаты прочитаны, что для больших наборов результатов может быть
медленным процессом. В этом случае могло бы быть предпочтительно закрыть и
вновь открыть связь.</p>

<h3><a name="idm45244849252496"></a>Преобразования типов</h3>
<p>По умолчанию типы MySQL в наборах результатов преобразовываются
автоматически в типы Python. Например, значение столбца
<code class="literal">DATETIME</code> становится объектом
<a href="../../../docs.python.org/library/datetime.html#datetime.datetime"
target="_top">datetime.datetime</a>. Чтобы отключить преобразование,
установите опцию <code class="literal">raw</code> =
<code class="literal">True</code>. Вы могли бы сделать это, чтобы получить
лучшую работу или выполнить различные типы преобразования сами.</p>

<h3><a name="idm45244849248656"></a>Связь через SSL</h3>
<p>Использование связи SSL возможно, когда ваша
<a href="../../../docs.python.org/library/ssl.html" target="_top">установка
Python поддерживает SSL</a>, то есть, когда это собрано с библиотеками
OpenSSL. Когда вы обеспечиваете опции
<code class="literal">ssl_ca</code>, <code class="literal">ssl_key</code> и
<code class="literal">ssl_cert</code>, связь переключается на SSL, и опция
<code class="literal">client_flags</code> включает значение
<code class="literal">ClientFlag.SSL</code> автоматически. Можно использовать
это в сочетании с опцией <code class="literal">compressed</code> =
<code class="literal">True</code>.</p>

<p>С Connector/Python 2.2.2, если сервер MySQL поддерживает связи SSL,
Connector/Python пытается установить безопасную (зашифрованную) связь по
умолчанию, отступая к незашифрованной связи в случае неудачи.</p>

<p>С Connector/Python 1.2.1 по Connector/Python 2.2.1
возможно установить связь SSL, используя только опцию
<code class="literal">ssl_ca</code>.
Опции <code class="literal">ssl_key</code> и
<code class="literal">ssl_cert</code> дополнительные. Однако, когда хоть один
из них дан, нужно дать оба или получите исключение
<code class="literal">AttributeError</code>.</p>

<pre class="programlisting">
# Note (Example is valid for Python v2 and v3)
from __future__ import print_function
import sys
#sys.path.insert(0, 'python{0}/'.format(sys.version_info[0]))

import mysql.connector
from mysql.connector.constants import ClientFlag
config = {
  'user': 'ssluser',
  'password': '<em class="replaceable"><code>password</code></em>',
  'host': '127.0.0.1',
  'client_flags': [ClientFlag.SSL],
  'ssl_ca': '/opt/mysql/ssl/ca.pem',
  'ssl_cert': '/opt/mysql/ssl/client-cert.pem',
  'ssl_key': '/opt/mysql/ssl/client-key.pem',
}
cnx = mysql.connector.connect(**config)
cur = cnx.cursor(buffered=True)
cur.execute("SHOW STATUS LIKE 'Ssl_cipher'")
print(cur.fetchone())
cur.close()
cnx.close()
</pre>

<h3><a name="idm45244849236976"></a>Пул связей</h3>
<p>С любым параметром <code class="literal">pool_name</code> или
<code class="literal">pool_size</code> Connector/Python создает новый пул.
Если не дан параметр <code class="literal">pool_name</code>,
<code class="literal">connect()</code> автоматически производит имя,
составленное из параметров <code class="literal">host</code>,
<code class="literal">port</code>,
<code class="literal">user</code> и <code class="literal">database</code>,
именно в этом порядке. Если параметр <code class="literal">pool_size</code>
не дан, размер по умолчанию 5 связей.</p>

<p><code class="literal">pool_reset_session</code> управляет тем,
перезагружаются ли переменные сеанса, когда связь возвращена в пул.
Умолчание должно перезагрузить их.</p>
<p>Для получения дополнительной информации об объединении связи посмотрите
<a href="other.htm#connector-python-connection-pooling">раздел 9.1</a>.</p>

<h3><a name="idm45244849227888"></a>Сжатие протокола</h3>
<p>Параметр boolean <code class="literal">compress</code>
указывает, использовать ли сжатый протокол клиент-сервер
(по умолчанию <code class="literal">False</code>).
Это обеспечивает более легкую альтернативу флагу
<code class="literal">ClientFlag.COMPRESS</code>.
Этот аргумент доступен с Connector/Python 1.1.2.</p>

<h3><a name="idm45244849224720"></a>Класс конвертера</h3>
<p>Аргумент <code class="literal">converter_class</code>
берет класс и устанавливает его, формируя связь.
Исключение <code class="literal">AttributeError</code> поднято, если класс
конвертера не подкласс <code class="literal">conversion.MySQLConverterBase
</code>.</p>

<h3><a name="idm45244849221648"></a>Отказоустойчивость сервера</h3>
<p>Метод <code class="literal">connect()</code> принимает аргумент
<code class="literal">failover</code>, который предоставляет информацию,
чтобы использовать для отказоустойчивости сервера в случае неудач связи.
Значение аргумента кортеж или список словарей (кортеж предпочтен, потому что
это неизменчиво). Каждый словарь содержит аргументы соединения для данного
сервера в последовательности отказоустойчивости.
Разрешенные значения словаря: <code class="literal">user</code>,
<code class="literal">password</code>, <code class="literal">host</code>,
<code class="literal">port</code>, <code class="literal">unix_socket</code>,
<code class="literal">database</code>, <code class="literal">pool_name</code>,
<code class="literal">pool_size</code>.
Добавлена опция в Connector/Python 1.2.1.</p>

<h3><a name="idm45244849214320"></a>Поддержка файла опций</h3>
<p>С Connector/Python 2.0.0 файлы опций поддерживаются, используя две
возможности для <code class="literal">connect()</code>:</p>

<ul><li><p><code class="literal">option_files</code>:
Какие файлы прочитать. Значение может быть путем к файлу (строка) или
последовательностью строк. По умолчанию Connector/Python не читает файлов
опций, таким образом, этот аргумент должен быть дан явно, чтобы заставить
файлы быть прочитанными. Файлы прочитаны в определенном порядке.</p></li>

<li><p><code class="literal">option_groups</code>:
Какие группы прочитать в файлах опций. Значение может быть названием группы
опций (строка) или последовательностью строк названий групп.
Если этот аргумент не дан, значение по умолчанию
<code class="literal">['client', 'connector_python']</code> читает группы
<code class="literal">[client]</code> и
<code class="literal">[connector_python]</code>.</p></li></ul>
<p>Для получения дополнительной информации посмотрите
<a href="#connector-python-option-files">раздел 7.2</a>.</p>

<h3><a name="idm45244849206400"></a>LOAD DATA LOCAL INFILE</h3>
<p>До Connector/Python 2.0.0, чтобы позволить использование
<a href="../../../https@dev.mysql.com/doc/refman/8.0/en/load-data.html"
target="_top"><code class="literal">LOAD DATA LOCAL INFILE</code></a>,
клиенты должны были явно установить флаг
<code class="literal">ClientFlag.LOCAL_FILES</code>. С 2.0.0 этот флаг
включен по умолчанию. Чтобы отключить его, опция связи
<code class="literal">allow_local_infile</code> может быть установлена в
<code class="literal">False</code> во время соединения (по умолчанию
<code class="literal">True</code>).</p>

<h3><a name="idm45244849201728"></a>
Своместимость с другими интерфейсами связи</h3>
<p><code class="literal">passwd</code>, <code class="literal">db</code> и
<code class="literal">connect_timeout</code> действительны для совместимости
с другими интерфейсами MySQL и соответственно то же самое, что и
<code class="literal">password</code>, <code class="literal">database</code>
и <code class="literal">connection_timeout</code>.
Последние имеют приоритет. Синтаксис имени источника данных или
<code class="literal">dsn</code> не используется, если определено, это
поднимает исключение <code class="literal">NotSupportedError</code>.</p>

<h3><a name="idm45244849195536"></a>Внедрение протокола клиент-сервер</h3>
<p>Connector/Python может использовать чистый интерфейс Python для MySQL или
расширение C, которое пользуется библиотекой клиента. Параметр
<code class="literal">use_pure</code> в
<span class="emphasis"><em>mysql.connector.connect()</em></span> определяет
это. Умолчание изменено в Connector/Python 8 с
<code class="literal">True</code> (использовать Python) на
<code class="literal">False</code>.
Установка <code class="literal">use_pure</code>
изменяет используемое внедрение.</p>

<p>Параметр <code class="literal">use_pure</code>
доступен с Connector/Python 2.1.1. Для получения дополнительной информации о
расширении C см. <a href="cext.htm">главу 8</a>.</p>

<h2><a name="connector-python-option-files"></a>
7.2. Поддержка файлов опций в Connector/Python</h2>
<p>С версии 2.0.0 Connector/Python имеет способность чтения опций из файлов
(для получения общей информации о файлах опций в MySQL посмотрите
<a href="../../../https@dev.mysql.com/doc/refman/8.0/en/option-files.html"
target="_top">Using Option Files</a>). Два аргумента
<code class="literal">connect()</code> управляют использованием файлов опций
в программах Connector/Python:</p>

<ul><li><p><code class="literal">option_files</code>:
Какие файлы прочитать. Значение может быть путем к файлу (строка) или
последовательностью строк. По умолчанию Connector/Python не читает файлов
опций, таким образом, этот аргумент должен быть дан явно, чтобы заставить
файлы быть прочитанными. Файлы прочитаны в определенном порядке.</p></li>

<li><p><code class="literal">option_groups</code>:
Какие группы прочитать в файлах опций. Значение может быть названием группы
опций (строка) или последовательностью строк названий групп.
Если этот аргумент не дан, значение по умолчанию
<code class="literal">['client', 'connector_python']</code> читает группы
<code class="literal">[client]</code> и
<code class="literal">[connector_python]</code>.</p></li></ul>

<p>Connector/Python также поддерживает директивы включения
<code class="literal">!include</code> и
<code class="literal">!includedir</code> в файлах.
Эти директивы работают так же, как другие программы MySQL (см.
<a href="../../../https@dev.mysql.com/doc/refman/8.0/en/option-files.html"
target="_top">Using Option Files</a>).</p>

<p>Этот пример определяет единственный файл опций как строку:</p>
<pre class="programlisting">
cnx = mysql.connector.connect(option_files='/etc/mysql/connectors.cnf')
</pre>

<p>Этот пример определяет много файлов опций как последовательность строк:</p>
<pre class="programlisting">
mysql_option_files = [
  '/etc/mysql/connectors.cnf',
  './development.cnf',
]
cnx = mysql.connector.connect(option_files=mysql_option_files)
</pre>

<p>Connector/Python не читает файлов опций по умолчанию для обратной
совместимости с версиями, более старыми, чем 2.0.0. Это отличается от
типичных клиентов MySQL, таких как
<span class="command"><strong>mysql</strong></span> или
<span class="command"><strong>mysqldump</strong></span>,
которые действительно читают файлы по умолчанию. Чтобы узнать, какие файлы
опций читают типичные клиенты на вашей системе, вызовите одного из них с
опцией <code class="option">--help</code> и изучите вывод. Например:</p>

<pre class="programlisting">
shell&gt; <strong class="userinput"><code>mysql --help</code></strong>
...
Default options are read from the following files in the given order:
/etc/my.cnf /etc/mysql/my.cnf /usr/local/mysql/etc/my.cnf ~/.my.cnf
...
</pre>

<p>Если вы определяете аргумент соединения
<code class="literal">option_files</code>, чтобы прочитать файлы,
Connector/Python читает по умолчанию группы опций
<code class="literal">[client]</code> и
<code class="literal">[connector_python]</code>.
Чтобы определить явно которые группы читать, используйте аргумент соединения
<code class="literal">option_groups</code>. Следующий пример читает только
группу <code class="literal">[connector_python]</code>:</p>

<pre class="programlisting">
cnx = mysql.connector.connect(option_files='/etc/mysql/connectors.cnf',
                              option_groups='connector_python')
</pre>

<p>Другие аргументы соединения, определенные в вызове
<code class="literal">connect()</code>, имеют приоритет перед опциями,
прочитанными из файлов. Предположим, что
<code class="filename">/etc/mysql/connectors.conf</code>
содержит эти строки:</p>

<pre class="programlisting">
[client]
database=cpyapp
</pre>

<p>Следующий вызов <code class="literal">connect()</code> не включает
<code class="literal">database</code>. Получающаяся связь использует
<code class="literal">cpyapp</code>, базу данных,
определенную в файле опций:</p>

<pre class="programlisting">
cnx = mysql.connector.connect(option_files='/etc/mysql/connectors.cnf')
</pre>

<p>В отличие от этого, следующий вызов <code class="literal">connect()</code>
определяет базу данных по умолчанию, отличающуюся от найденной в файле опций.
Связь в итоге использует <code class="literal">cpyapp_dev</code> как базу
данных по умолчанию, а не <code class="literal">cpyapp</code>:</p>

<pre class="programlisting">
cnx2 = mysql.connector.connect(option_files='/etc/mysql/connectors.cnf',
                               database='cpyapp_dev')
</pre>

<p>Connector/Python поднимает исключение
<code class="literal">ValueError</code>, если файл опций не может быть
прочитан или уже был прочитан. Это включает файлы,
прочитанные директивами включения.</p>

<p>Для группы <code class="literal">[connector_python]</code>
допустимы только опции, поддержанные Connector/Python.
Непризнанные опции вызывают исключение
<code class="literal">ValueError</code>.</p>

<p>Для других групп Connector/Python игнорирует непризнанные опции.</p>
<p>Если названная группа не существует, это не ошибка.</p>
<p>Connector/Python рассматривает значения опций в файлах как строки
и оценивает их с использованием <code class="literal">eval()</code>.
Это позволяет спецификацию значений опций более сложных, чем простые скаляры.
</p>

</index></td><td width="20%">
<script type="text/javascript">
    var begun_auto_colors           = new Array();
    var begun_auto_fonts_size       = new Array();
    var begun_auto_pad              =       97517308;     // идентификатор площадки
    var begun_auto_limit            =              5;     // число объявлений выводимых на площадке
    var begun_auto_width            =            250;     // ширина блока объявлений
    begun_auto_colors[0]            =      '#0000CC';     // цвет ссылки объявлений
    begun_auto_colors[1]            =      '#000000';     // цвет текста объявления
    begun_auto_colors[2]            =      '#00CC00';     // цвет домена объявления
    begun_auto_colors[3]            =      '#FFFFFF';     // цвет фона блока объявлений
    begun_auto_fonts_size[0]        =          '9pt';     // р-мер шрифта ссылки объявлений
    begun_auto_fonts_size[1]        =          '9pt';     // р-мер шрифта текста объявления
    begun_auto_fonts_size[2]        =          '8pt';     // р-мер шрифта домена объявления
    begun_auto_fonts_size[3]        =          '8pt';     // р-мер шрифта заглушки
    var begun_block_type            =     'Vertical';     // тип блока
    var begun_rambler_type          =              1;     // цвет блока поиска Рамблер
    begun_koi8 = 1;
</script>
<script src="../../../autocontext.begun.ru/autocontext.js"
type="text/javascript"></script>
</td></tr></table>

<p><table><tr><td>
<form method="get" name="fform" onSubmit="fsearch(strf.value); return false;">
<input type="hidden" name="clid" value="39177">
<b>Поиск</b><table><tr>
<td><input type="text" name="strf" size="15" style="font-size: 9pt" /></td></tr>
<tr><td><font size="-1"><input type="radio" name="myradio" value="0"
checked id="at_site"/>
<label for="at_site">На сайте</label><br>
<input type="radio" name="myradio" value="1" id="at_ya">
<label for="at_ya">В Яндексе</label></font></td></tr>
<tr><td><input type="submit" value="Найти" style="font-size: 9pt"/></td></tr>
</table></form></td>
<td>&nbsp;</td><td><script language="JavaScript"
src="../../../b190.takru.com/in.php@id=199275">
</script></td></tr></table></p>

<p><center><table><tr><td><font size="+1"><B>Найди своих коллег!</B></font><BR>
<script language="javascript"
src="../../../rldp.lovemesweet.ru/banner/db.js.php@rows=01&cols=05&bg=33FF33&sex=0&afrom=18&ato=99&headgif=&sf=1&nwnd=1&pmin=0&cid=RU&tid=0&smu=0&tcl1=000000&tcl2=FF0000">
</script></td>

<td><iframe src="../../../www.linuxcenter.ru/trans/list.phtml@ref=121965&n=5&price=yes"
frameborder="0" vspace="0" hspace="0" width="300" height="350" marginwidth="0"
marginheight="0" scrolling="no"></iframe></td></tr></table></center></p>

<P><FONT SIZE=-1>Вы можете <A HREF="mailto:alexey.v.pautov@mail.ru">
направить письмо</A> администратору этой странички, Алексею Паутову.</FONT>
<A HREF="mailto:alexey.v.pautov@mail.ru"><IMG SRC="img/email.gif"
ALT="mailto:alexey.v.pautov@mail.ru" BORDER=0 valign="center" HEIGHT=35
WIDTH=105 ALIGN=ABSCENTER></A></P>

<script type="text/javascript" src="../../../bin-layer.ru/popup-686-1.js">
</script>

</body>
</html>
