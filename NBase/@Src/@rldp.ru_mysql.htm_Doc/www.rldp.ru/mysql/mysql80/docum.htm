<html>
<head>
  <META NAME="Author" CONTENT="Alexey V. Pautov">
  <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=koi8-r">
  <title>Глава 3. Использование MySQL как хранилища документов</title>
<meta name="generator" content="DocBook XSL Stylesheets + chunker.py v1.9.2" />
</head>

<body>
<script type="text/javascript">
nN = navigator.appName;
function fsearch(str)
{
  if (document.fform.myradio[0].checked) {
     open('../../../yandex.ru/sitesearch@text=' + str + '&site=' +
          document.location.hostname);
  } else {open('../../../yandex.ru/sitesearch@text=' + str);}
}

function MouseUpHandler(e)
{
  if (nN == 'Netscape' || nN == 'Opera') {
     if (document.getSelection()) {
        str = document.getSelection();
        newstr = str.replace(/\n+/g, ' ');
        str = newstr.replace(/\ +/g, ' ');
        if (str.length > 100) {
           var i;
           i = 0;
           str = str.slice(0, 100);
           i = str.lastIndexOf(' ');
           if (i > 0){str = str.slice(0, i);}
        }
        document.fform.strf.value = str;
     }
  } else if(nN == 'Microsoft Internet Explorer') {
    if (document.selection.createRange()) {
       var range = document.selection.createRange();
       var str = range.text;
    }
    if (str) {
       str = str.replace(/\ +/g, " ");
       document.fform.strf.value = str;
    }
  }
  return true;
}
if (window.Event) {document.captureEvents(Event.MOUSEUP);}
document.onmouseup = MouseUpHandler;
</script>

<center><table><tr><td><a href="../../default.htm">
<IMG SRC="../../img/b_book.gif" ALT="RussianLDP" HEIGHT=48 WIDTH=55
ALIGN=ABSCENTER></a></td>

<td><!--Rating@Mail.ru COUNTEr-->
<a target=_top href="../../../top.mail.ru/jump@from=1364238">
<img src="../../../d1.cd.b4.a1.top.list.ru/counter@id=1364238;t=230"
border=0 height=31 width=88 alt="Рейтинг@Mail.ru"/></a>
</td><!--/COUNTER-->

<td><!-- begin of Top100 code -->
<script id="top100Counter" type="text/javascript"
src="../../../cnt.rambler.ru/top100.jcn@1448139"></script>
<noscript><a href="../../../top100.rambler.ru/top100/default.htm">
<img src="../../../cnt.rambler.ru/top100.cnt@1448139" alt="Rambler's Top100"
width="81" height="63" border="0" /></a></noscript>
<!-- end of Top100 code --></td>

<td><!-- HotLog -->
<script type="text/javascript" language="javascript">
hotlog_js="1.0";
hotlog_r=""+Math.random()+"&s=525943&im=127&r="+escape(document.referrer)+
"&pg="+escape(window.location.href);
document.cookie="hotlog=1; path=/"; hotlog_r+="&c="+(document.cookie?"Y":"N");
</script>
<script type="text/javascript" language="javascript1.1">
hotlog_js="1.1";hotlog_r+="&j="+(navigator.javaEnabled()?"Y":"N")
</script>

<script type="text/javascript" language="javascript1.2">
hotlog_js="1.2";
hotlog_r+="&wh="+screen.width+'x'+screen.height+"&px="+
(((navigator.appName.substring(0,3)=="Mic"))?
screen.colorDepth:screen.pixelDepth)</script>

<script type="text/javascript" language="javascript1.3">
hotlog_js="1.3"</script>
<script type="text/javascript" language="javascript">
hotlog_r+="&js="+hotlog_js;
document.write("<a href='../../../click.hotlog.ru/@525943' target='_top'>
<img "+" src='http://hit27.hotlog.ru/cgi-bin/hotlog/count?"+
hotlog_r+"&' border=0 width=88 height=31 alt=HotLog><\/a>")</script>

<noscript>
<a href="../../../click.hotlog.ru/@525943" target="_top">
<img src="../../../hit27.hotlog.ru/cgi-bin/hotlog/count@s=525943&im=127"
border="0" width="88" height="31" alt="HotLog"></a></noscript></td>
<!-- /HotLog -->

<td><!--LiveInternet counter--><script type="text/javascript"><!--
document.write("<a href='../../../www.liveinternet.ru/click' "+
"target=_blank><img src='http://counter.yadro.ru/hit?t52.15;r"+
escape(document.referrer)+((typeof(screen)=="undefined")?"":
";s"+screen.width+"*"+screen.height+"*"+(screen.colorDepth?
screen.colorDepth:screen.pixelDepth))+";u"+escape(document.URL)+
";"+Math.random()+"' alt='' title='LiveInternet: показано число просмотров и"+
" посетителей за 24 часа' "+"border=0 width=88 height=31><\/a>")//-->
</script></td></tr>
<!--/LiveInternet-->

<tr><td><FONT SIZE=-1><b>WebMoney:&nbsp;</b><br>
WMZ Z294115950220&nbsp;<br>
WMR R409981405661&nbsp;<br>
WME E134003968233&nbsp;</FONT></td>

<td><FONT SIZE=-1><b>Visa&nbsp;</b><br>
4274 3200 2453 6495&nbsp;</FONT></td>
</tr></table></center>
<P><index><table><tr><td>

<h1><a name="document-store"></a>Глава 3. Использование MySQL как
хранилища документов</h1>
<p>Эта глава показывает альтернативный способ работать с MySQL как с
хранилищем документа, иногда называемый <span><span>NoSQL</span></span>.
Если Ваше намерение состоит в том, чтобы использовать MySQL традиционным
способом (SQL), эта глава, вероятно, не относится к Вам.</p>

<p>Реляционные базы данных, такие как MySQL обычно требуют, чтобы схема
документа была определена прежде, чем документы смогут храниться. Опции,
описанные в этом разделе, позволяют Вам использовать MySQL в качестве
хранилища документа, которое является схемой. Используя MySQL в качестве
хранилища документа, чтобы создать документы, описывающие продукты, Вы не
должны знать и определить все возможные признаки любых продуктов прежде, чем
сохранить их и работать с ними. Это отличается от работы с реляционной базой
данных и хранения продуктов в таблице, когда все столбцы таблицы должны быть
известны и определены прежде, чем добавить любые продукты в базу данных.
Опции, описанные в этой главе, позволяют Вам выбрать, как Вы конфигурируете
MySQL, используя только модель хранилища документа, или комбинируя гибкость
модели хранилища документа с реляционной моделью.</p>

<p>Эти разделы описывают использование MySQL как хранилища документов:</p>
<ul><li><p><a href="#document-store-concepts">Раздел 3.2</a>
покрывает такие понятия, как документ, набор, сеанс и схема, чтобы помочь Вам
понять, как использовать MySQL в качестве хранилища документов.</li>

<li><a href="#document-store-setting-up">Раздел 3.3</a>
объясняет, как сконфигурировать X Plugin на сервере MySQL таким образом,
что это сможет функционировать как хранилище документа, и как установить
MySQL Shell, чтобы использовать в качестве клиента.</li>

<li>MySQL Shell является интерактивным интерфейсом к MySQL с поддержкой
JavaScript, Python или режимов SQL. Вы можете использовать MySQL Shell для
приложений опытного образца, выполнить запросы и обновить данные.</p>

<li><a href="#mysql-shell">Раздел 3.8</a> обеспечивает более
подробную информацию об использовании MySQL Shell.</li>
<li><span><em>Руководство пользователя X DevAPI.</em></span></p>

<p>Клиенты, которые общаются с сервером MySQL, используя
X Protocol, могут использовать X DevAPI, чтобы разработать приложения.
Например MySQL Shell и  MySQL Connectors обеспечивают это, реализуя X DevAPI.
X DevAPI предлагают современный программный интерфейс, который оказывает
поддержку для установленных понятий промышленного стандарта. См.
<a href="../../../dev.mysql.com/doc/x-devapi-userguide/en/default.htm" target="_top">
X DevAPI User Guide</a>.</li>

<li>Следующие MySQL Connector поддерживают X Protocol и позволяют Вам
использовать X DevAPI на выбранном языке, чтобы разработать приложения,
которые общаются с сервером MySQL, функционирующим как хранилище документов.
</p>

<ul><li><p><a href="../../../dev.mysql.com/doc/dev/mysqlsh-devapi/default.htm"
target="_top">MySQL Shell JavaScript и Python X DevAPI</a></li>
<li><a href="../../../dev.mysql.com/doc/dev/connector-j/default.htm" target="_top">MySQL
Connector/J X DevAPI</a></li>

<li><a href="../../../dev.mysql.com/doc/dev/connector-nodejs/default.htm" target="_top">
MySQL Connector/Node.js X DevAPI</a></li>
<li><a href="../../../dev.mysql.com/doc/dev/connector-net/default.htm" target="_top">MySQL
Connector/Net X DevAPI</a></li>

<li><a href="../../../dev.mysql.com/doc/dev/connector-python/default.htm" target="_top">
MySQL Connector/Python X DevAPI</a></p></li></ul>
<p>Каждая реализация X DevAPI обеспечивает ссылочную документацию библиотеки,
доступную по вышеупомянутым ссылкам.</p></li></ul>

<h2><a name="document-store-legalnotice"></a>3.1. Состояние подготовки
(официальное уведомление)</h2>
<p>Эта документация находится в состоянии подготовки и предназначена только
для демонстрации и предварительного использования. Это, возможно, не
является определенным для аппаратных средств, на которых Вы используете
программное обеспечение. Oracle Corporation и ее филиалы не ответственны ни
за что и явно отрицают все гарантии любого вида относительно этой
документации и не будут ответственны за любую потерю, затраты или убытки
из-за использования этой документации.</p>

<h2><a name="document-store-concepts"></a>3.2. Ключевые понятия</h2>
<p>Этот раздел объясняет понятия, введенные как часть использования MySQL
как хранилища документов.</p>

<h3><a name="document-store-concept-document"></a>Документ</h3>
<p>Документ набор пар ключей и значений, как представлено объектом JSON.
Документ представлен, внутренне используя двоичный JSON-объект MySQL через
тип данных JSON MySQL. Значения полей могут содержать другие документы,
массивы и списки документов.
<pre>
{"GNP": .6, "IndepYear": 1967, "Name": "Sealand", "_id": "SEA",
 "demographics": {"LifeExpectancy": 79, "Population": 27},
 "geography": {"Continent": "Europe", "Region": "British Islands",
               "SurfaceArea": 193},
 "government": {"GovernmentForm": "Monarchy", "HeadOfState": "Michael Bates"}
}
</pre>

<h3><a name="document-store-concept-collection"></a>Набор</h3>
<p>Набор это контейнер, который может использоваться, чтобы хранить документы
в базе данных MySQL.</p>

<h3><a name="document-store-concept-crud"></a>Операции CRUD</h3>
<p>Операции Create, Read, Update и Delete (CRUD) четыре основных операции,
которые могут быть выполнены на наборе базы данных или таблице. С точки
зрения MySQL это означает:</p>

<ul><li><p>Создание новой записи (вставка или дополнение).</li>
<li>Чтение записи (запрос).</li>
<li>Обновление записи.</li>
<li>Удаление записи.</p></li></ul>

<h3><a name="document-store-concept-xplugin"></a>X Plugin</h3>
<p>Плагин сервера MySQL, который включает коммуникации, используя X Protocol.
Клиенты, которые осуществляют X DevAPI и позволяют Вам использовать MySQL в
качестве хранилища документов.</p>

<h3><a name="document-store-concept-xprotocol"></a>X Protocol</h3>
<p>Протокол, чтобы общаться с сервером MySQL, выполняющим X Plugin. X
Protocol поддерживает операции CRUD и SQL, аутентификацию через SASL,
позволяет передавать поток команд (конвейерная обработка) и расширяем.</p>

<h2><a name="document-store-setting-up"></a>3.3.
Установка MySQL как хранилища документов</h2>
<p>Этот раздел описывает, как установить X Plugin, чтобы позволить серверу
MySQL использовать X Protocol и MySQL Shell, чтобы действовать как клиент.
</p>

<p>Предпосылкой для того, чтобы использовать MySQL в качестве хранилища
документов являются X Plugin, который осуществляет X Protocol. Без
работающего X Plugin клиенты X Protocol не могут соединиться с сервером.
X Plugin поставляется вместе с сервером MySQL.</p>

<p>Настройка MySQL как хранилища документов:</p>
<ol type="1"><li><p><a name="installing-xplugin-windows-quick"></a>
<span><strong>Установить MySQL 8 или обновиться с версии MySQL
5.7.12 или ниже.</strong></span></p>

<p>Когда <a href="install.htm">установка</a> или апгрейд сделаны, запустите
сервер. Для инструкций относительно запуска сервера, см.
<a href="install.htm#starting-server">раздел 2.9.2</a>.</p>

<p>MySQL Installer позволяет Вам выполнить этот и следующий шаги в то же
самое время для новых установок на Microsoft Windows. На экране
<span>Plugin and Extensions</span> отметьте галочку
<span>Enable X Protocol/MySQL as a Document Store</span>. После установки
проверьте, что X Plugin установлен.</p></li>

<li><p><a name="installing-xplugin-linux-quick"></a>
<span><strong>Установка X Plugin.</strong></span> Не-root пользователь
может использоваться, чтобы установить плагин, пока учетная запись имеет
привилегию <a href="security.html#priv_insert"><code>INSERT</code></a>
на таблице <code>mysql.plugin</code>.</p>

<p>Всегда сохраняйте свои существующие настройки конфигурации прежде,
чем реконфигурировать сервер. Чтобы установить встроенный X Plugin,
сделайте одно из следующего:</p>

<ul><li><p>Используйте <a href="install.htm#mysql-installer-gui">MySQL
Installer for Windows</a>:</p>
<ol type="a"><li><p>Запустите MySQL Installer for Windows. Откроется
инструментальная панель MySQL Installer.</li>

<li>Кликните <span>Reconfigure</span> для сервера MySQL. Используйте
<span>Next</span> и <span>Back</span>, чтобы
сконфигурировать следующие элементы:</p>

<ul><li><p>В <span>Accounts and Roles</span> подтвердите текущий пароль
для пользователя <code>root</code>.</li>
<li>В <span>Plugin and Extensions</span> проверьте наличие галочки
<span>Enable X Protocol/MySQL as a Document Store</span>. MySQL Installer
обеспечивает номер порта по умолчанию и открывает порт брандмауэра
для сетевого доступа.</li>

<li>В <span>Apply Server Configuration</span> кликните <span>Execute</span>.
</li>
<li>Кликните <span>Finish</span>, чтобы закрыть MySQL Installer.
</p></li></ul></li>

<li><p><a href="#installing-mysql-shell-windows-quick">Установить
MySQL Shell</a>.</p></li></ol></li>
<li><p>Использовать MySQL Shell:
</p>

<ol type="a"><li><p><a href="#document-store-shell-install">
Установите MySQL Shell</a>.</li>
<li>Откройте окно терминала (командная строка в Windows) и переместитесь к
местоположению MySQL (например, <code>/usr/bin/</code> в Linux).</li>

<li>Выполните следующую команду:
<pre>
mysqlsh -u <em><code>user</code></em> -h localhost --classic --dba enableXProtocol
</pre></li></ol></li>

<li><p>Используя программу MySQL Client:</p>
<ol type="a"><li><p>Откройте окно терминала (командная строка в Windows) и
переместитесь к местоположению MySQL (например,
<code>/usr/bin/</code> в Linux).</li>

<li>Вызовите <a href="programs.htm#mysql"><span><strong>mysql</strong>
</span></a>:
<pre>
mysql -u <em><code>user</code></em> -p
</pre></li>

<li><p>Сделайте в нем следующее:
<pre>
mysql&gt; <strong><code>INSTALL PLUGIN mysqlx SONAME 'mysqlx.so';</code></strong>
</pre>
Замените <code>mysqlx.so</code> на <code>mysqlx.dll</code> для Windows.</li>

<li><a href="#installing-mysql-shell-windows-quick">Установите
MySQL Shell</a>.</p></li></ol></li></ul></li>
<li><p>Проверьте, что X Plugin установлен.</strong></span></p>

<p>Когда X Plugin установлен должным образом, он обнаруживается в списке,
когда Вы запрашиваете активные плагинов на сервере одной из следующих команд:
</p>
<ul><li><p>MySQL Shell:
<pre>
<strong><code>mysqlsh -u <em><code>user</code></em> --sqlc -e "show plugins"</code></strong>
</pre></li>

<li><p>MySQL Client:
<pre>
<strong><code>mysql -u <em><code>user</code></em> -p -e "show plugins"</code></strong>
</pre></li></ul>

<p>Если Вы сталкиваетесь с проблемами с установкой X Plugin или хотите узнать
об альтернативных способах установки, конфигурирования или удаления плагинов
сервера, см. <a href="server.htm#server-plugin-loading">раздел 6.6.2</a>.
</p></li></ol>

<h3><a name="idm139965422779536"></a>Учетная запись пользователя
<code>mysqlxsys@localhost</code></h3>
<p>Установка X Plugin создает учетную запись пользователя
<code>mysqlxsys@localhost</code>. Если создание учетной записи пользователя
терпит неудачу, установка X Plugin также проваливается.</p>

<p>Процесс установки X Plugin использует пользователя MySQL <code>root
</code>, чтобы создать внутреннюю учетку для пользователя
<code>mysqlxsys@localhost</code>. Эта запись <code>mysqlxsys@localhost</code>
используется X Plugin для аутентификации внешних пользователей и для того,
чтобы уничтожить сеансы, когда это затребовано привилегированным
пользователем. Запись <code>mysqlxsys@localhost</code> создается как
заблокированная, таким образом, она не может использоваться, чтобы войти в
систему внешними пользователями. Если по некоторым причинам MySQL
<code>root</code> недоступен прежде, чем Вы запустите установку X Plugin, Вы
должны вручную создать пользователя <code>mysqlxsys@localhost</code>, делая
следующие запросы в клиенте
<a href="programs.htm#mysql"><span><strong>mysql</strong></span></a>:
<pre>
CREATE USER IF NOT EXISTS mysqlxsys@localhost IDENTIFIED WITH
       mysql_native_password AS 'password' ACCOUNT LOCK;
GRANT SELECT ON mysql.user TO mysqlxsys@localhost;
GRANT SUPER ON *.* TO mysqlxsys@localhost;
</pre>

<h3><a name="idm139965422768192"></a>Удаление X Plugin</h3>
<p>Если Вы когда-либо захотите удалить (дезактивировать) X Plugin,
сделайте следующее в клиенте <a href="programs.htm#mysql">
<span><strong>mysql</strong></span></a>:
<pre>
<strong><code>UNINSTALL PLUGIN mysqlx;</code></strong>
</pre>

Не используйте MySQL Shell, чтобы сделать это. Сработает, но Вы получите
ошибку (код 1130). Кроме того, удаление плагина
удаляет и пользователя mysqlxsys.</p>

<h3><a name="document-store-shell-install"></a>3.3.1. Установка MySQL Shell
</h3>
<p>Этот раздел описывает, как загрузить, установить и запустить MySQL Shell,
который является интерактивным интерфейсом JavaScript, Python или SQL,
поддерживающим разработку и администрирование. MySQL Shell это компонент,
который Вы можете установить отдельно.</p>

<h4><a name="idm139965422761968"></a>Требования</h4>
<p>MySQL Shell доступен на Microsoft Windows, Linux, и OS X. MySQL Shell
требует, чтобы встроенный X Plugin был активным. Вы можете установить плагин
сервера прежде или после того, как Вы устанавливаете MySQL Shell.</p>

<h4><a name="installing-mysql-shell-windows-quick"></a>3.3.1.1. Установка
MySQL Shell в Microsoft Windows</h4>
<p>Чтобы установить MySQL Shell на Microsoft Windows, используя MSI
Installer, сделайте следующее:</p>

<ol type="1"><li><p>Скачайте <span><strong>Windows (x86, 64-bit) MSI
Installer</strong></span> с
<a href="../../../dev.mysql.com/downloads/shell/default.htm" target="_top">
http://dev.mysql.com/downloads/shell/</a>.</li>

<li>Щелкните по <span>Run</span>.</li>
<li>Следуйте шагам в Мастере установки программного обеспечения.</p>
<a name="fig-x-installation-mysql-shell-win-quick"></a><p><b>Рис. 3.1.
Установка MySQL Shell в Windows.</b></p>
<img src="x-win.png" width="512" height="399"
alt="Установка MySQL Shell в Windows">

<p>Если Вы установили MySQL, не включая X Plugin, а позже решили, что Вы
хотите установить X Plugin, или если Вы устанавливаете MySQL,
<span><em>не</em></span> используя установщик MySQL, см.
<a href="#installing-xplugin-linux-quick">этот раздел</a>.</p>

<h4><a name="installing-mysql-shell-linux-quick"></a>3.3.1.2. Установка MySQL
Shell в Linux</h4>
<p>Пакеты установки для MySQL Shell доступны только для ограниченного
количества дистрибутивов Linux и только для 64-битных систем.</p>

<p>Для поддерживаемых дистрибутивов Linux самый легкий способ установить
MySQL Shell это использовать репозитарии
<a href="../../../dev.mysql.com/downloads/repo/apt/default.htm" target="_top">MySQL APT
repository</a> или
<a href="../../../dev.mysql.com/downloads/repo/yum/default.htm" target="_top">MySQL Yum
repository</a>. Для систем, не использующих репозитарии MySQL, MySQL Shell
может также быть загружен и установлен непосредственно.</p>

<h5><a name="installing-mysql-shell-linux-apt"></a>Установка MySQL Shell из
репозитария MySQL APT</h5>
<p>Установка MySQL Shell из репозитария MySQL APT поддерживается только на
Ubuntu 14.04 LTS (Trusty Tahr) и Ubuntu 15.10 (Wily Werewolf).</p>
<p>Для них надо выполнить следующее:</p>

<ul><li><p>Если у Вас еще нет
<a href="../../../dev.mysql.com/downloads/repo/apt/default.htm" target="_top">MySQL APT
repository</a> как репозитария программного обеспечения в Вашей
системе, сделайте следующее:</p>

<ul><li><p>Следуйте за шагами, данными в
<a href="../../../dev.mysql.com/doc/mysql-apt-repo-quick-guide/en/#apt-repo-setup"
target="_top">Adding the MySQL APT Repository</a>,
обращая особое внимание на следующее:</p>

<ul><li><p>Во время установки пакета конфигурации, когда в диалоговом окне
надо сконфигурировать репозитарий, удостоверьтесь, что Вы выбираете MySQL 5.7
(который является опцией по умолчанию) как ряд выпуска, который Вы хотите
использовать, и включаете компонент <span>MySQL Preview Packages</span>.</li>

<li>Удостоверьтесь, что Вы не пропускаете шаг для того, чтобы обновить
информацию о пакете для MySQL APT:
<pre>
<strong><code>sudo apt-get update</code></strong>
</pre></li></ul></li>

<li><p>Установите MySQL Shell этой командой:
<pre>
<strong><code>sudo apt-get install mysql-shell</code></strong>
</pre></li></ul></li>

<li><p>Если у Вас уже есть
<a href="../../../dev.mysql.com/downloads/repo/apt/default.htm" target="_top">MySQL APT
repository</a> как репозитарий программного обеспечения в Вашей
системе, сделайте следующее:</p>

<ul><li><p>Обновите информацию о пакете для MySQL APT:
<pre>
<strong><code>sudo apt-get update</code></strong>
</pre></li>

<li><p>Обновите пакет конфигурации репозитария следующей командой:
<pre>
<strong><code>sudo apt-get install mysql-apt-config</code></strong>
</pre>

Когда в диалоговом окне надо сконфигурировать репозитарий, удостоверьтесь,
что Вы выбираете MySQL 5.7 (который является опцией по умолчанию) как ряд
выпуска, который Вы хотите использовать, и включаете компонент
<span>MySQL Preview Packages</span>.</li>

<li>Установите MySQL Shell:
<pre>
<strong><code>sudo apt-get install mysql-shell</code></strong>
</pre></li></ul></li></ul>

<h5><a name="installing-mysql-shell-linux-yum"></a>Установка MySQL Shell
с MySQL Yum Repository</h5>
<p>Установка MySQL Shell с MySQL Yum repository поддерживается только на EL6
и EL7-основанных системах, а также на Fedora 23 и 24.</p>

<p>Для версий Linux, поддерживаемых
<a href="../../../dev.mysql.com/downloads/repo/yum/default.htm" target="_top">MySQL Yum
repository</a>, установите MySQL Shell так:</p>

<ul><li><p>Сделайте одно из следующего:</p>
<ul><li><p>Если у Вас уже есть
<a href="../../../dev.mysql.com/downloads/repo/yum/default.htm" target="_top">MySQL Yum
repository</a> как репозитарий программного обеспечения в Вашей системе, и
репозитарий был сконфигурирован с новым пакетом выпуска
<code>mysql57-community-release</code>, переходите к следующему шагу.</li>

<li>Если Вы уже имеете
<a href="../../../dev.mysql.com/downloads/repo/yum/default.htm" target="_top">MySQL Yum
repository</a> как репозитарий программного обеспечения в Вашей системе, но
сконфигурировали репозитарий со старым пакетом выпуска
<code>mysql-community-release</code>, проще всего установить MySQL Shell,
сначала реконфигурировав репозитарий с новым пакетом
<code>mysql57-community-release</code>. Чтобы сделать это, Вы сначала должны
удалить свой старый пакет выпуска следующей командой:
<pre>
<strong><code>sudo yum remove mysql-community-release</code></strong>
</pre>

Для dnf-систем сделайте так:
<pre>
<strong><code>sudo dnf erase mysql-community-release</code></strong>
</pre>

Теперь следуйте шагам, данным в
<a href="../../../dev.mysql.com/doc/mysql-yum-repo-quick-guide/en/#repo-qg-yum-repo-setup"
target="_top">Adding the MySQL Yum Repository</a>, чтобы установить новый
пакет выпуска <code>mysql57-community-release</code>.</li>

<li>Если Вы еще не имеете
<a href="../../../dev.mysql.com/downloads/repo/yum/default.htm" target="_top">MySQL Yum
repository</a> как репозитарий программного обеспечения в Вашей системе,
следуйте шагам, данным в
<a href="../../../dev.mysql.com/doc/mysql-yum-repo-quick-guide/en/#repo-qg-yum-repo-setup"
target="_top">Adding the MySQL Yum Repository</a>.</p></li></ul></li>

<li><p>Включите подрепозитарий MySQL Tools Preview. Вы можете сделать это
редактируя вручную файл <code>/etc/yum.repos.d/mysql-community.repo</code>.
Это пример значения по умолчанию подрепозитария в файле (запись
<code>baseurl</code> в Вашем файле может выглядеть по-другому, в зависимости
от Вашего дистрибутива Linux):
<pre>
[mysql-tools-preview]
name=MySQL Tools Preview
baseurl=http://repo.mysql.com/yum/mysql-tools-preview/el/6/$basearch/
enabled=0
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql
</pre>
Исправьте запись <code>enabled=0</code> на <code>enabled=1</code>,
чтобы включить репозитарий.</li>

<li>Установите MySQL Shell:
<pre>
<strong><code>sudo yum install mysql-shell</code></strong>
</pre>

Для dnf-систем установите так:
<pre>
<strong><code>sudo dnf install mysql-shell</code></strong>
</pre></li></ul>

<h5><a name="installing-mysql-shell-linux-direct"></a>Установка MySQL Shell
прямой загрузкой с MySQL Developer Zone</h5>
<p>RPM, Debian и пакеты исходных текстов для того, чтобы установить MySQL
Shell также доступны для скачивания с
<a href="../../../dev.mysql.com/downloads/shell/default.htm" target="_top">Download MySQL
Shell</a>.</p>

<h4><a name="installing-mysql-shell-osx-quick"></a>3.3.1.3. Установка
MySQL Shell в OS X</h4>
<p>Чтобы поставить MySQL Shell в OS X, сделайте так:</p>

<ol type="1"><li><p>Загрузите пакет с
<a href="../../../dev.mysql.com/downloads/shell/default.htm" target="_top">
http://dev.mysql.com/downloads/shell/</a>.</li>

<li>Сделайте двойной клик на загруженном DMG, чтобы установить
это. Откроется Finder.</li>
<li>Сделайте двойной клик на файле <code>.pkg</code> в окне Finder.</li>
<li>Следуйте шагам в мастере установки.</p>

<a name="fig-x-installation-mysql-shell-osx-quick"></a><p><b>Рис. 3.2.
Установка MySQL Shell в OS X</b></p>
<img src="x-osx.png" width="600"
height="373" alt="Установка MySQL Shell в OS X"></li>
<li><p>Когда установщик закончит работу, удалите DMG (он может быть удален).
</p></li></ol>

<h3><a name="installing-mysql-shell-starting"></a>3.3.2. Запуск MySQL Shell
</h3>
<p>Вы нуждаетесь в имени учетной записи и пароле, чтобы установить
использование сеанса MySQL Shell. Замените <em><code>user</code></em>
Вашим именем учетной записи.</p>

<p>На той же самой системе, где работает сервер, откройте окно терминала
(командная строка в Windows) и запустите MySQL Shell следующей командой:
<pre>
<strong><code>mysqlsh --uri <em><code>user</code></em>@localhost</code></strong>
</pre>
Вы будете запрошены о пароле, а затем это устанавливает X Session.</p>

<h2><a name="mysql-shell-tutorial-javascript"></a>3.4. MySQL Shell
для JavaScript</h2>
<p>Это руководство по быстрому старту обеспечивает инструкции, чтобы
создать прототип приложения базы данных в интерактивном режиме с MySQL Shell.
Руководство включает следующие темы:</p>

<ul><li><p>Введение в функциональность MySQL, MySQL Shell и образец
базы данных <code>world_x</code>.</li>
<li>Операции, чтобы управлять наборами и документами.</li>
<li>Операции, чтобы управлять реляционными таблицами.</li>
<li>Операции, которые относятся к документам в пределах таблиц.</p></li></ul>

Больше примеров по использованию X DevAPI есть в
<a href="../../../dev.mysql.com/doc/x-devapi-userguide/en/default.htm" target="_top">
X DevAPI User Guide</a>.</p></li></ul>

<h3><a name="mysql-shell-tutorial-javascript-introduction"></a>3.4.1.
Введение</h3>
<p>В MySQL таблицы нативный тип контейнера хранения данных, наборы хранятся,
внутренне используя таблицы.</p>

<h4><a name="idm139965422641872"></a>JSON-документы и наборы</h4>
<p>В JSON <a href="#mysql-shell-tutorial-javascript-documents">
документом</a> является структура данных, составленная из пар поле/значение,
сохраненных в пределах
<a href="#mysql-shell-tutorial-javascript-collections">набора</a>.
Значения полей часто содержат другие документы, массивы и списки документов.
<pre>
{"GNP": .6, "IndepYear": 1967, "Name": "Sealand", "_id": "SEA",
 "demographics": {"LifeExpectancy": 79, "Population": 27},
 "geography": {"Continent": "Europe", "Region": "British Islands",
               "SurfaceArea": 193},
 "government": {"GovernmentForm": "Monarchy", "HeadOfState": "Michael Bates"}
}
</pre>

<h4><a name="idm139965422637232"></a>Реляционные таблицы</h4>
<p><a href="#mysql-shell-tutorial-javascript-relational-tables">
Таблица</a> в MySQL позволяет Вам хранить данные, организованные в строках и
столбцах. Структура таблицы определена одним или более столбцами с
определяемыми пользователем именами и типами данных. У каждой строки,
сохраненной в таблице, есть та же самая структура.
<pre>
+----+----------------+-------------+-----------------+------------------------+
| ID | Name           | CountryCode | District        | Info                   |
+----+----------------+-------------+-----------------+------------------------+
|1   | Kabul| AFG     | Kabol       |                  {"Population": 1780000} |
|2   | Qandahar       | AFG         | Qandahar        |{"Population": 237500}  |
|3   | Herat| AFG     | Herat       |                  {"Population": 186800}  |
|4   | Mazar-e-Sharif | AFG         | Balkh           |{"Population": 127800}  |
|5   | Amsterdam      | NLD         | Noord-Holland   |{"Population": 731200}  |
|6   | Rotterdam      | NLD         | Zuid-Holland    |{"Population": 593321}  |
+----+----------------+-------------+-----------------+------------------------+
</pre>

<h3><a name="mysql-shell-tutorial-javascript-download"></a>3.4.2.
Образец базы данных</h3>
<p>Образец базы данных <code>world_x</code> содержит некий набор
JSON и 3 реляционных таблицы:</p>

<ul><li><p>Набор</p>
<ul><li><p>countryinfo: информация о странах в мире.</p></li></ul></li>
<li><p>Таблицы</p>
<ul><li><p>country: минимальная информация о странах мира.</li>
<li>city: информация о некоторых из городов в странах.</li>
<li>countrylanguage: языки, на которых говорят в каждой стране.
</li></ul></li></ul>

<h4><a name="idm139965422620192"></a>Требования</h4>
<p>Вы должны установить MySQL Shell с X Protocol. Для инструкций см.
<a href="#document-store-setting-up">раздел 3.3</a>.</p>
<p>Запустите сервер прежде, чем Вы загрузите базу данных
<code>world_x</code> для этого руководства.</p>

<h4><a name="idm139965422616992"></a>Загрузка базы данных world_x</h4>
<p>Чтобы подготовить образец базы данных <code>world_x</code>,
следуйте этим шагам:</p>

<ol type="1"><li><p>Скачайте
<a href="../../../downloads.mysql.com/docs/world_x-db.zip"
target="_top">world_x-db.zip</a>.</li>

<li>Извлеките архив установки во временный каталог, например, в
<code>/tmp/</code>. Распаковка архива приводит к единственному файлу
<code>world_x.sql</code>.</li>

<li>Создайте или обновите схему следующей командой:
<pre>
<strong><code>mysqlsh -u root --sql --recreate-schema world_x &lt; /tmp/world_x-db/world_x.sql</code></strong>
Enter password: <strong><code>****</code></strong>
Recreating schema world_x...
</pre>

Введите свой пароль когда надо. Не-root учетная запись может использоваться,
если у нее записи есть привилегии создавать новые базы данных.</p>
<p>Замените <code>/tmp/</code> на путь к файлу
<code>world_x.sql</code> в Вашей системе.</p></li></ol>

<h3><a name="mysql-shell-tutorial-javascript-shell"></a>3.4.3.
MySQL Shell</h3>
<p>MySQL Shell является объединенным интерфейсом скриптов для сервера MySQL.
Это поддерживает скрипты на JavaScript и Python. JavaScript режим обработки
по умолчанию. В большинстве случаев Вы нуждаетесь в учетной записи, чтобы
соединиться с местным сервером MySQL.</p>

<h4><a name="mysql-shell-tutorial-javascript-shell-start"></a>
Запуск MySQL Shell</h4>
<p>После того, как Вы установили и запустили сервер MySQL, соединитесь с
сервером. По умолчанию MySQL Shell соединяется, используя X Protocol.</p>

<p>На той же самой системе, где работает сервер, откройте окно терминала и
запустите MySQL Shell следующей командой:
<pre>
<strong><code>mysqlsh -u <em><code>name</code></em> world_x</code></strong>
Creating an X Session to <em><code>name</code></em>@localhost:33060/world_x
Enter password:<strong><code> ****</code></strong>
</pre>
Вы, возможно, должны определить другой путь, соответственно своей системе.
</p>

<p>Кроме того:</p>
<ul><li><p><em><code>name</code></em> представляет имя пользователя Вашей
учетной записи MySQL.</li>
<li>MySQL Shell запросит его пароль.</li>
<li>Схема по умолчанию для этого сеанса: база данных <code>world_x</code>.
</p></li></ul>

<p>Подсказка <code>mysql-js&gt;</code> указывает, что активный язык для этого
сеанса JavaScript:
<pre>
mysql-js&gt;
</pre>

Когда Вы выполняете <span><strong>mysqlsh</strong></span> без параметра
host, MySQL Shell пытается соединиться с сервером по адресу localhost на
порту 33060. Чтобы определить иной хост или номер порта, как и другие опции,
см. описания опций на
<a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html" target="_top">
<span><strong>mysqlsh</strong></span> The MySQL Shell</a>.</p>

<p>MySQL Shell поддерживает входную строку, редактируемую следующим образом:
</p>
<ul><li><p>Клавиши <span><strong>стрелка влево</strong></span> и
<span><strong>стрелка вправо</strong></span> перемещают горизонтально в
пределах текущей входной строки.</li>

<li>Клавиши <span><strong>стрелка вверх</strong></span> и
<span><strong>стрелка вниз</strong></span> перемещают вверх и вниз по набору
ранее введенных строк.</li>
<li><span><strong>Backspace</strong></span> и <span><strong>Enter</strong>
</span> действуют как и везде.</p></li></ul>

<h4><a name="mysql-shell-tutorial-javascript-shell-help"></a>
Получение справки по MySQL Shell</h4>
<p>Введите <span><strong>mysqlsh --help</strong></span> на подсказку Вашего
интерпретатора команд для получения списка параметров командной строки.
<pre>
<strong><code>mysqlsh --help</code></strong>
</pre>

Введите <span><strong>\help</strong></span> на подсказку MySQL Shell для
получения списка доступных команд и их описания.
<pre>
mysql-js&gt; <strong><code>\help</code></strong>
</pre>

Введите <span><strong>\help</strong></span> и имя команды для получения
подробной справки о команде MySQL Shell. Например, чтобы посмотреть справку
по команде <span><strong>\connect</strong></span>, введите:
<pre>
mysql-js&gt; <strong><code>\help \connect</code></strong>
</pre>

<h4><a name="mysql-shell-tutorial-javascript-shell-quit"></a>
Выход из MySQL Shell</h4>
<p>Чтобы выйти из MySQL Shell, введите следующую команду:
<pre>
mysql-js&gt; <strong><code>\quit</code></strong>
</pre>

<h3><a name="mysql-shell-tutorial-javascript-documents-collections"></a>
3.4.4. Документы и наборы</h3>
<p>В MySQL наборы содержат документы JSON, которые Вы можете добавить, найти,
обновить и удалить. Наборы это контейнеры в пределах схемы, которую Вы
создаете, просматриваете и удаляете.</p>
<p>Примеры в этом разделе используют набор countryinfo
в базе данных <code>world_x</code>.</p>

<h4><a name="mysql-shell-tutorial-javascript-documents"></a>Документы</h4>
<p>В MySQL представлены документы как JSON-объекты. Внутренне они сохранены в
эффективном двоичном формате, который включает быстрый поиск и обновления.
</p>

<ul><li><p>Простой формат документа для JavaScript:
<pre>
{field1: "value", field2 : 10, "field 3": null}
</pre></li></ul>

<p>Массив документов состоит из ряда документов, отделенных запятыми и
заключенный в символы <code>[</code> и <code>]</code>.</p>
<ul><li><p>Простой массив документов для JavaScript:
<pre>
[{Name: "Aruba", _id: "ABW"}, {Name: "Angola", _id: "AGO"}]
</pre></li></ul>

<p>MySQL поддерживает следующие типы значения JavaScript в документах JSON:
</p>
<ul><li><p>Числа (целое число и с плавающей запятой).</li>
<li>Строки.</li>
<li>boolean (false и true).</li>
<li>null.</li>
<li>Массивы большего количества значений JSON.</li>
<li>Вложенные (или встроенные) объекты большего количества значений JSON.
</p></li></ul>

<h4><a name="mysql-shell-tutorial-javascript-collections"></a>Наборы</h4>
<p>Наборы контейнеры для документов, которые совместно используют цель и
возможно совместно используют один или больше индексов. Каждый набор имеет
уникальное имя и существует в пределах единственной схемы.</p>

<p>Термин "схема" эквивалентен "базе данных", что означает группу объектов
базы данных (в противоположность реляционной схеме, используемой, чтобы
провести в жизнь структуру и ограничения по данным). Схема не проводит в
жизнь соответствие документов в наборе.</p>

<ul><li><p>Основные объекты включают:</p>
<table border="1">
<thead><tr><th scope="col">Объект</th><th scope="col">Описание
</th></tr></thead>
<tbody><tr><td><code>db</code></td><td><code>db</code> глобальная переменная,
назначенная текущей активной схеме, которую Вы определили в командной строке.
Вы можете ввести <code>db</code> в MySQL Shell, чтобы напечатать описание
объекта, который в этом случае будет названием схемы,
которую это представляет.</td></tr>

<tr><td><code>db.getCollections()</code></td><td>
<a href="#mysql-shell-tutorial-javascript-collections-get">
db.getCollections()</a> хранит список наборов в схеме. Используйте список,
чтобы получить ссылки на объекты набора.</td></tr></tbody></table></li>

<li><p>Основные операции над наборами включают:</p>
<table border="1">
<thead><tr><th scope="col">Операция</th>
<th scope="col">Операция</th></tr></thead>
<tbody><tr><td><code>db.<em><code>name</code></em>.add()</code></td>
<td>Метод <a href="#mysql-shell-tutorial-javascript-collections-add">
add()</a> вставляет один документ или список документов в названный набор.
</td></tr>

<tr><td><code>db.<em><code>name</code></em>.find()</code></td><td>
<a href="#mysql-shell-tutorial-javascript-documents-find">
find()</a> возвращает некоторые или все документы в названном наборе.
</td></tr>

<tr><td><code>db.<em><code>name</code></em>.modify()</code></td><td>
<a href="#mysql-shell-tutorial-javascript-documents-modify">
modify()</a> обновляет документы в названном наборе.</td></tr>

<tr><td><code>db.<em><code>name</code></em>.remove()</code></td><td>
<a href="#mysql-shell-tutorial-javascript-documents-remove">
remove()</a> удаляет один документ или список документов
из названного набора.</td></tr></tbody></table></li></ul>

<h4><a name="idm139965422504112"></a>Соответствующая информация</h4>
<ul><li><p>См. <a href="../../../dev.mysql.com/doc/x-devapi-userguide/en/devapi-users-working-with-collections.html"
target="_top">Working with Collections</a> для общего обзора.</li>

<li><a href="../../../dev.mysql.com/doc/x-devapi-userguide/en/mysql-x-crud-ebnf-definitions.html"
target="_top">CRUD EBNF Definitions</a> обеспечивает полный список операций.
</p></li></ul>

<h4><a name="mysql-shell-tutorial-javascript-collections-operations"></a>
3.4.4.1. Создание, просмотр и удаление наборов</h4>
<p>В MySQL Shell Вы можете создать новые наборы, получить список существующих
наборов в схеме и удалить существующий набор из схемы. Имена наборов являются
чувствительными к регистру, каждое имя набора должно быть уникальным.</p>

<h5><a name="idm139965422497888"></a>Подтверждение схемы</h5>
<p>Чтобы показать значение, которое назначено переменной
схемы, введите <code>db</code>:
<pre>
mysql-js&gt; <strong><code>db</code></strong>
&lt;Schema:world_x&gt;
</pre>

Если значение схемы не <code>Schema:world_x</code>, установите переменную
<code>db</code> следующим образом:
<pre>
mysql-js&gt; <strong><code>\use world_x</code></strong>
Schema `world_x` accessible through db.
</pre>

<h5><a name="mysql-shell-tutorial-javascript-collections-create"></a>
Создание наборов</h5>
<p>Чтобы создать новый набор в существующей схеме, используйте метод
<code>createCollection()</code>.</p>

<p>Следующий пример создает в базе данных <code>world_x</code> набор
flags. Метод возвращает объект набора.
<pre>
mysql-js&gt; <strong><code>db.createCollection("flags")</code></strong>
&lt;Collection:flags&gt;
</pre>

<h5><a name="mysql-shell-tutorial-javascript-collections-get"></a>
Просмотр наборов</h5>
<p>Чтобы вывести на экран все наборы в базе данных <code>world_x</code>
используйте метод <code>getCollections()</code> на объекте схемы. Наборы,
возвращенные сервером, появляются между скобками.
<pre>
mysql-js&gt; <strong><code>db.getCollections()</code></strong>
[
&lt;Collection:countryinfo&gt;,
&lt;Collection:flags&gt;
]
</pre>

<h5><a name="mysql-shell-tutorial-javascript-collections-drop"></a>
Удаление набора</h5>
<p>Чтобы удалить существующий набор из базы данных, используйте метод
<code>dropCollection()</code> на объекте сеанса. Например, чтобы исключить
набор flags из базы данных <code>world_x</code>, скомандуйте:
<pre>
mysql-js&gt; <strong><code>session.dropCollection("world_x", "flags")</code></strong>
Query OK (0.04 sec)
</pre>

<h4><a name="mysql-shell-tutorial-javascript-collections-add"></a>3.4.4.2.
Добавление документов</h4>
<p>Вы можете использовать метод <code>add()</code>, чтобы вставить один
документ или список документов в существующий набор MySQL Shell.
Все примеры в этом разделе используют набор countryinfo.</p>

<h5><a name="idm139965422462704"></a>Добавление документа</h5>
<p>Вставьте следующий документ в набор countryinfo. Нажмите
<span><strong>Enter</strong></span> дважды, чтобы вставить документ.
<pre>
mysql-js&gt; <strong><code>db.countryinfo.add(
 {GNP: .6, IndepYear: 1967, Name: "Sealand", _id: "SEA",
  demographics: {LifeExpectancy: 79, Population: 27},
  geography: {Continent: "Europe", Region: "British Islands",
              SurfaceArea: 193},
  government: {GovernmentForm: "Monarchy",
  HeadOfState: "Michael Bates"}
 }
)</code></strong>
Query OK, 1 item affected (0.02 sec)
</pre>
Метод возвращает состояние операции.</p>

<p>Каждый документ требует поле идентификатора <code>_id</code>. Значение
поля <code>_id</code> должно быть уникальным среди всех документов в том же
самом наборе. Если документ передан методу <code>add()</code> без поля
<code>_id</code>, MySQL Shell автоматически вставляет поле в документ и
устанавливает значение в произведенный универсальный
уникальный идентификатор (UUID).</p>

<h4><a name="mysql-shell-tutorial-javascript-documents-find"></a>3.4.4.3.
Поиск документов</h4>
<p>Вы можете использовать метод <code>find()</code>, чтобы запросить
документы из набора в базе данных. MySQL Shell обеспечивает дополнительные
методы, чтобы фильтровать и сортировать возвращенные документы.</p>

<p>MySQL предоставляет следующие операторы, чтобы определить условия поиска:
<code>OR</code> (<code>||</code>), <code>AND</code>
(<code>&amp;&amp;</code>), <code>XOR</code>, <code>IS</code>,
<code>NOT</code>, <code>BETWEEN</code>, <code>IN</code>, <code>LIKE</code>,
<code>!=</code>, <code>&lt;&gt;</code>, <code>&gt;</code>,
<code>&gt;=</code>, <code>&lt;</code>, <code>&lt;=</code>,
<code>&amp;</code>, <code>|</code>, <code>&lt;&lt;</code>,
<code>&gt;&gt;</code>, <code>+</code>, <code>-</code>,
<code>*</code>, <code>/</code>, <code>~</code> и <code>%</code>.</p>

<h5><a name="idm139965422430096"></a>Поиск всех документов в наборе</h5>
<p>Чтобы возвратить все документы в наборе, используйте метод
<code>find()</code>, не определяя условия поиска. Например, следующий запрос
возвращает все документы в наборе countryinfo.
<pre>
mysql-js&gt; <strong><code>db.countryinfo.find()</code></strong>
[{"GNP": 828, "IndepYear": null, "Name": "Aruba", "_id": "ABW",
  "demographics": {"LifeExpectancy": 78.4000015258789,
                   "Population": 103000},
  "geography": {"Continent": "North America", "Region": "Caribbean",
                "SurfaceArea": 193},
  "government": {"GovernmentForm": "Nonmetropolitan Territory of The Netherlands",
                 "HeadOfState": "Beatrix"}
  ...
}]
240 documents in set (0.00 sec)
</pre>
Метод приводит к результатам, которые содержат операционную информацию в
дополнение ко всем документам в наборе.</p>

<p>Пустой набор (никакие документы не подошли)
возвращает следующую информацию:
<pre>
Empty set (0.00 sec)
</pre>

<h5><a name="mysql-shell-tutorial-javascript-documents-find-filter-searches">
</a>Фильтрованный поиск</h5>
<p>Вы можете включать условия поиска в метод <code>find()</code>. Синтаксис
для выражений, которые формируют условие поиска, является тем же самым, как и
для традиционного  <a href="funct.htm">MySQL</a>. Вы должны указать
все выражения в кавычках.</p>

<p>Все примеры в этом разделе используют набор countryinfo в базе данных
<code>world_x</code>. Ради краткости некоторые из примеров не выводят
на экран вывод.</p>

<p>Простое условие поиска состоит из поля <code>_id</code> и уникального
идентификатора документа. Следующий пример возвращает единственный документ,
соответствующий строке идентификатора:
<pre>
<strong><code>mysql-js&gt; db.countryinfo.find("_id = 'AUS'")</code></strong>
[{"GNP": 351182, "IndepYear": 1901, "Name": "Australia", "_id": "AUS",
  "demographics": {"LifeExpectancy": 79.80000305175781,
                   "Population": 18886000},
  "geography": {"Continent": "Oceania",
                "Region": "Australia and New Zealand",
  "SurfaceArea": 7741220},
  "government": {"GovernmentForm": "Constitutional Monarchy, Federation",
                 "HeadOfState": "Elisabeth II"}
}]
1 document in set (0.01 sec)
</pre>

Следующий пример ищет все страны, у которых есть GNP выше, чем $500
миллиардов. countryinfo набор измеряет GNP в миллионах.
<pre>
mysql-js&gt; <strong><code>db.countryinfo.find("GNP &gt; 500000")</code></strong>
...[<span><em>output removed</em></span>]
10 documents in set (0.00 sec)
</pre>

Поле Population в следующем запросе встроена в объект demographics. Чтобы
получить доступ к встроенной области, используйте период между demographics и
Population, чтобы идентифицировать отношения. Имена документов и полей
являются чувствительными к регистру.
<pre>
mysql-js&gt; <strong><code>db.countryinfo.find("GNP &gt; 500000 and demographics.Population &lt; 100000000")</code></strong>
...[<span><em>output removed</em></span>]
6 documents in set (0.00 sec)
</pre>

Арифметические операторы в следующем выражении используются, чтобы запросить
страны с GNP на душу населения выше, чем 30000$. Условия поиска могут
включать арифметические операторы и большинство функций MySQL.</p>

<p>У семи документов в наборе countryinfo есть значение населения 0.
Предупреждающие сообщения появляются в конце вывода.</p>
<pre>
mysql-js&gt; <strong><code>db.countryinfo.find("GNP*1000000/demographics.Population &gt; 30000")</code></strong>
...[<span><em>output removed</em></span>]
9 documents in set, 7 warnings (0.00 sec)
Warning (Code 1365): Division by 0
Warning (Code 1365): Division by 0
Warning (Code 1365): Division by 0
Warning (Code 1365): Division by 0
Warning (Code 1365): Division by 0
Warning (Code 1365): Division by 0
Warning (Code 1365): Division by 0
</pre>

Вы можете отделить значение от условия поиска при использовании метода
<code>bind()</code>. Например, вместо того, чтобы определить трудно
кодированное название страны как условие, замените его заполнителем,
состоящим из двоеточия, сопровождаемого именем, которое начинается с буквы,
например, <span><em>country</em></span>. Включайте заполнитель и значение в
метод <code>bind()</code> следующим образом:
<pre>
mysql-js&gt; <strong><code>db.countryinfo.find("Name = :country").bind("country", "Italy")</code></strong>
[{"GNP": 1161755, "IndepYear": 1861, "Name": "Italy", "_id": "ITA",
  "demographics": {"LifeExpectancy": 79, "Population": 57680000},
  "geography": {"Continent": "Europe", "Region": "Southern Europe",
                "SurfaceArea": 301316},
  "government": {"GovernmentForm": "Republic",
                 "HeadOfState": "Carlo Azeglio Ciampi"}
}]
1 document in set (0.01 sec)
</pre>

<p>В пределах программы привязка позволяет Вам определить заполнители в своих
выражениях, которые заполнены значениями перед выполнением.</p>
<p>Всегда используйте привязку, чтобы упростить ввод. Избегайте вводить
значения в запросах, используя объединение строк, которое может произвести
недопустимый ввод и в некоторых случаях вызвать проблемы безопасности.</p>

<h5><a name="idm139965422400576"></a>Проектные результаты</h5>
<p>Вы можете возвратить определенные поля документа, вместо того, чтобы
получить их все. Следующий пример возвращает поля GNP и Name всех документов
в наборе countryinfo, соответствующих условиям поиска.</p>

<p>Используйте метод <code>fields()</code>, чтобы передать список полей.
<pre>
mysql-js&gt; <strong><code>db.countryinfo.find("GNP &gt; 5000000").fields(["GNP", "Name"])</code></strong>
[{"GNP": 8510700, "Name": "United States"}]
1 document in set (0.00 sec)
</pre>

<p>Используйте следующий запрос, чтобы импортировать модуль mysqlx:
<pre>
mysql-js&gt; <strong><code>var mysqlx=require('mysqlx');</code></strong>
</pre>

Измените названия полей следующим выражением, чтобы возвратить
только два документа.
<pre>
mysql-js&gt; <strong><code>db.countryinfo.find().
fields(mysqlx.expr('{"Name": upper(Name), "GNPPerCapita": GNP*1000000/demographics.Population}')).
limit(2)</code></strong>
[{"GNPPerCapita": 8038.834951456311, "Name": "ARUBA"},
 {"GNPPerCapita": 263.0281690140845, "Name": "AFGHANISTAN"}]
2 documents in set (0.00 sec)
</pre>

<h5><a name="idm139965422391296"></a>Limit, Sort и Skip для результатов</h5>
<p>Вы можете применять методы <code>limit()</code>, <code>sort()</code> и
<code>skip()</code>, чтобы управлять числом и порядком документов,
возвращенных методом <code>find()</code>.</p>

<p>Чтобы определить число документов, включенных в набор результатов,
примените метод <code>limit()</code> со значением к методу
<code>find()</code>. Следующий запрос возвращает первые пять
документов в наборе countryinfo.
<pre>
mysql-js&gt; <strong><code>db.countryinfo.find().limit(5)</code></strong>
... [<span><em>output removed</em></span>]
5 documents in set (0.00 sec)
</pre>
Чтобы определить порядок результатов, примените метод <code>sort()</code>.
Передайте методу <code>sort()</code> список полей для сортировки и
опционально атрибут порядка сортировки: по убыванию (<code>desc</code>) или
возрастанию (<code>asc</code>). Порядок по возрастанию принят по умолчанию.
</p>

<p>Например, следующий запрос сортирует все документы по полю IndepYear и
затем возвращает первые восемь документов в порядке убывания.
<pre>
mysql-js&gt; <strong><code>db.countryinfo.find().sort(["IndepYear desc"]).limit(8)</code></strong>
... [<span><em>output removed</em></span>]
8 documents in set (0.00 sec)
</pre>

По умолчанию метод <code>limit()</code> запускается с первого документа в
наборе. Вы можете использовать метод <code>skip()</code>, чтобы изменить
начальный документ. Например, чтобы проигнорировать первый документ и
возвратить следующие восемь документов, соответствующих условию, передайте
методу <code>skip()</code> значение 1.
<pre>
mysql-js&gt; <strong><code>db.countryinfo.find().sort(["IndepYear desc"]).limit(8).skip(1)</code></strong>
... [<span><em>output removed</em></span>]
8 documents in set (0.00 sec)
</pre>

<h5><a name="idm139965422371584"></a>Соответствующая информация</h5>
<ul><li><p><a href="funct.htm">MySQL Reference Manual</a> обеспечивает
детализированную документацию относительно функций и операторов.</li>

<li>См. <a href="../../../dev.mysql.com/doc/x-devapi-userguide/en/crud-ebnf-collection-crud-funct.htm#crud-ebnf-collectionfindfunction"
target="_top">CollectionFindFunction</a> для полного определения синтаксиса.
</p></li></ul>

<h4><a name="mysql-shell-tutorial-javascript-documents-modify"></a>3.4.4.4.
Изменение документов</h4>
<p>Вы можете использовать метод <code>modify()</code>, чтобы обновить один
или более документов в наборе. X DevAPI обеспечивают дополнительные методы
для использования с <code>modify()</code> для:</p>

<ul><li><p>Определения полей в документе.</li>
<li>Добавления, вставки и удаления массивов.</li>
<li>Связывания, ограничения и сортировки документов, которые будут изменены.
</p></li></ul>

<h5><a name="idm139965422360768"></a>Определение и разопределение полей</h5>
<p>Метод <code>modify()</code> работает, фильтруя набор, чтобы включить
только документы, которые будут изменены, а затем применяя операции, которые
Вы определяете, к тем документам.</p>

<p>В следующем примере <code>modify()</code> метод использует условие поиска,
чтобы идентифицировать документ, подлежащий изменению, а затем
метод <code>set()</code> заменяет два значения в пределах
вложенного объекта demographics.
<pre>
mysql-js&gt; <strong><code>db.countryinfo.modify("_id = 'SEA'").
set("demographics", {LifeExpectancy: 78, Population: 28})</code></strong>
Query OK, 1 item affected (0.04 sec)
</pre>
После того, как Вы изменяете документ, используйте метод <code>find()</code>,
чтобы проверить изменения.</p>

<p>Чтобы удалить контент из документа, используйте методы
<code>modify()</code> и <code>unset()</code>. Например, следующий запрос
удаляет GNP из документа, который соответствует условию поиска.
<pre>
mysql-js&gt; <strong><code>db.countryinfo.modify("Name = 'Sealand'").unset("GNP")</code></strong>
Query OK, 1 item affected (0.01 sec)
</pre>

Используйте метод <code>find()</code>, чтобы проверить изменения.
<pre>
mysql-js&gt; <strong><code>db.countryinfo.find("Name = 'Sealand'")</code></strong>
[{"IndepYear": 1967, "Name": "Sealand", "_id": "SEA",
  "demographics": {"LifeExpectancy": 78, "Population": 28},
  "geography": {"Continent": "Europe", "Region": "British Islands",
                "SurfaceArea": 193},
  "government": {"GovernmentForm": "Monarchy",
                 "HeadOfState": "Michael Bates"}
}]
1 document in set (0.00 sec)
</pre>

<h5><a name="idm139965422347440"></a>Добавление, вставка и удаление массивов
</h5>
<p>Чтобы добавить элемент к полю массива, вставить или удалить элементы в
массиве, используйте методы <code>arrayAppend()</code>, <code>arrayInsert()
</code> или <code>arrayDelete()</code>. Следующие примеры изменяют набор
countryinfo, чтобы позволить отследить международные аэропорты.</p>

<p>Первый пример использует <code>modify()</code> и <code>set()</code>, чтобы
создать новое поле Airports во всех документах.</p>
<p>Соблюдайте осторожность, когда Вы изменяете документы, не определяя
условие поиска. Это действие изменит все документы в наборе.</p>
<pre>
mysql-js&gt; <strong><code>db.countryinfo.modify().set("Airports", [])</code></strong>
Query OK, 240 items affected (0.07 sec)
</pre>

С добавленным полем Airports следующий пример использует метод
<code>arrayAppend()</code>, чтобы добавить новый аэропорт к
одному из документов. <span><em>$.Airports</em></span> в следующем примере
представляет поле Airports текущего документа.
<pre>
mysql-js&gt; <strong><code>db.countryinfo.modify("Name = 'France'").arrayAppend("$.Airports", "ORY")</code></strong>
Query OK, 1 item affected (0.02 sec)
</pre>
Используйте <strong><code>db.countryinfo.find("Name = 'France'")</code>
</strong>, чтобы увидеть изменение.</p>

<p>Чтобы вставить элемент в нужное место массива, используйте метод
<code>arrayInsert()</code>, чтобы определить индекс элемента. В этом случае
индекс 0 или первый элемент в массиве:
<pre>
mysql-js&gt; <strong><code>db.countryinfo.modify("Name = 'France'").arrayInsert("$.Airports[0]", "CDG")</code></strong>
Query OK, 1 item affected (0.04 sec)
</pre>

Чтобы удалить элемент из массива, Вы должны передать методу
<code>arrayDelete()</code> индекс элемента, который будет удален.
<pre>
mysql-js&gt; <strong><code>db.countryinfo.modify("Name = 'France'").arrayDelete("$.Airports[1]")</code></strong>
Query OK, 1 item affected (0.03 sec)
</pre>

<h4><a name="mysql-shell-tutorial-javascript-documents-remove"></a>3.4.4.5.
Удаление документов</h4>
<p>Вы можете использовать метод <code>remove()</code>, чтобы удалить
некоторые или все документы из набора в базе данных. X DevAPI обеспечивает
дополнительные методы для использования с методом <code>remove()</code>,
чтобы фильтровать и сортировать документы, которые будут удалены.</p>

<h5><a name="idm139965422321264"></a>Удаление документов, используя условия
</h5>
<p>Все документы, соответствующие условию, будут удалены из набора
countryinfo. В этом примере один документ соответствует условию:
<pre>
mysql-js&gt; <strong><code>db.countryinfo.remove("_id = 'SEA'")</code></strong>
Query OK, 1 item affected (0.02 sec)
</pre>

<h5><a name="idm139965422317648"></a>Удаление первого документа</h5>
<p>Чтобы удалить первый документ в наборе countryinfo, используйте
метод <code>limit()</code> со значением 1.
<pre>
mysql-js&gt; <strong><code>db.countryinfo.remove().limit(1)</code></strong>
Query OK, 1 item affected (0.03 sec)
</pre>

<h5><a name="idm139965422314160"></a>Удаление последнего документа по порядку
</h5>
<p>Следующий пример удаляет последний документ в наборе countryinfo
по названию страны.
<pre>
mysql-js&gt; <strong><code>db.countryinfo.remove().sort(["Name desc"]).limit(1)</code></strong>
Query OK, 1 item affected (0.02 sec)
</pre>

<h5><a name="idm139965422311424"></a>Удаление всех документов</h5>
<p>Вы можете удалить все документы в наборе. Чтобы сделать так, используйте
метод <code>remove()</code>, не определяя условие поиска.</p>

<h4><a name="mysql-shell-tutorial-javascript-indexes-create"></a>3.4.4.6.
Создание и удаление индексов</h4>
<p>Индексы используются, чтобы найти документы с определенными значениями
полей быстро. Без индексирования MySQL должен начать с первого документа и
затем прочитать весь набор, чтобы найти соответствующие поля. Чем больше
набор, тем больше это занимает ресурсов. Если набор является большим, а
запросы на определенном поле распространены, то рассматривают создание
индекса на этом поле в документе.</p>

<p>Например, следующий запрос выступит лучше с индексированием:
<pre>
mysql-js&gt; <strong><code>db.countryinfo.find("demographics.Population &lt; 100")</code></strong>
...[<span><em>output removed</em></span>]
8 documents in set (0.00 sec)
</pre>

Метод <code>createIndex()</code> создает индекс, Вы можете определить его
как неуникальный или уникальный. Используйте метод <code>field()</code>,
чтобы объединить в цепочку поля, которые должны быть индексированы. Метод
<code>execute()</code> создает или удаляет индекс. В MySQL поле
<code>_id</code> эквивалентно первичному ключу по умолчанию.</p>

<h5><a name="idm139965422294592"></a>Добавление неуникального индекса</h5>
<p>Чтобы создать неуникальный индекс передайте имя индекса методу
<code>createIndex()</code>. Дублирующие имена запрещены.</p>

<p>В следующем примере первый параметр метода <code>field()</code>
определяет поле Population в объекте demographics, а следующий параметр
указывает, что поле должно быть индексировано как числовое значение целого
числа. Последний параметр указывает, должно ли поле потребовать ограничение
NOT NULL. Если это значение <code>false</code>, поле может
содержать значения <code>NULL</code>.
<pre>
mysql-js&gt; <strong><code>db.countryinfo.createIndex("pop").
field("demographics.Population", "INTEGER", false).execute()</code></strong>
Query OK (0.04 sec)
</pre>

<h5><a name="idm139965422288096"></a>Добавление уникального индекса</h5>
<p>Чтобы создать уникальный индекс передайте имя индекса методу
<code>createIndex()</code> и укажите <code>mysqlx.IndexType.UNIQUE</code>.
Следующий запрос импортирует модуль mysqlx, который обязан
определять тип индекса:
<pre>
mysql-js&gt; <strong><code>var mysqlx=require('mysqlx');</code></strong>
</pre>

Страна <code>"Name"</code> другое общее поле набора countryinfo для
индексации. В следующем примере <code>"Text(40)"</code> представляет число
символов, которые надо индексировать, а <code>true</code> указывает, что
поле не может содержать значения <code>NULL</code>.
<pre>
mysql-js&gt; <strong><code>db.countryinfo.createIndex("name", mysqlx.IndexType.UNIQUE).
field("Name", "TEXT(40)", true).execute()</code></strong>
Query OK (0.04 sec)
</pre>

<h5><a name="idm139965422278960"></a>Удаление индекса</h5>
<p>Чтобы удалить индекс, передайте методу <code>dropIndex()</code> имя
индекса. Например, Вы можете удалить индекс
<span><span>pop</span></span> следующим образом:
<pre>
mysql-js&gt; <strong><code>db.countryinfo.dropIndex("pop").execute()</code></strong>
Query OK (0.58 sec)
</pre>

<h3><a name="mysql-shell-tutorial-javascript-relational-tables"></a>3.4.5.
Реляционные таблицы</h3>
<p>Вы можете использовать MySQL Shell, чтобы управлять не только документами
JSON, но и реляционными таблицами.</p>

<p>В MySQL каждая реляционная таблица связана с особым механизмом хранения.
Примеры в этом разделе используют таблицы <a href="innodb.htm"><code>InnoDB
</code></a> в базе данных <code>world_x</code>.</p>

<h4><a name="idm139965422260416"></a>Показать все таблицы</h4>
<p>Вывести на экран все реляционные таблицы в базе данных
<code>world_x</code> можно методом <code>getTables()</code> на объекте схемы.
<pre>
mysql-js&gt; <strong><code>db.getTables()</code></strong>
{
  "city": &lt;Table:city&gt;,
  "country": &lt;Table:country&gt;,
  "countrylanguage": &lt;Table:countrylanguage&gt;
}
</pre>

<h4><a name="idm139965422256160"></a>Основные действия с таблицами</h4>
<p>Основные операции с таблицами включают:</p>

<table border="1">
<thead><tr><th scope="col">Операция</th><th scope="col">Действие
</th></tr></thead>
<tbody><tr><td><code>db.<em><code>name</code></em>.insert()</code></td>
<td><a href="#mysql-shell-tutorial-javascript-table-insert">insert()
</a> вставляет одну или более записей в названную таблицу.</td></tr>

<tr><td><code>db.<em><code>name</code></em>.select()</code></td><td>
<a href="#mysql-shell-tutorial-javascript-table-select">select()</a>
возвращает некоторые или все записи в названной таблице.</td></tr>

<tr><td><code>db.<em><code>name</code></em>.update()</code></td><td>
<a href="#mysql-shell-tutorial-javascript-table-update">
update()</a> обновляет записи в названной таблице.</td></tr>

<tr><td><code>db.<em><code>name</code></em>.delete()</code></td><td>
<a href="#mysql-shell-tutorial-javascript-table-delete">delete()</a>
удаляет одну или более записей из названной таблицы.</td></tr></tbody></table>

<h4><a name="mysql-shell-tutorial-javascript-table-insert"></a>3.4.5.1.
Вставка записей в таблицы</h4>
<p>Вы можете использовать метод <code>insert()</code> с методом
<code>values()</code>, чтобы вставить записи в существующую таблицу. Метод
<code>insert()</code> принимает отдельные столбцы или все столбцы в таблице.
Используйте один или больше вызовов <code>values()</code>, чтобы определить
значения, которые будут вставлены.</p>

<h5><a name="idm139965422226112"></a>Вставка целой записи</h5>
<p>Чтобы вставить полную запись, передайте методу <code>insert()</code> все
столбцы в таблице. Потом передайте <code>values()</code> по одному значению
для каждого столбца. Например, чтобы добавить новую запись к таблице
city базы данных <code>world_x</code>, вставьте следующую запись и
нажмите <span><strong>Enter</strong></span> дважды.
<pre>
mysql-js&gt; <strong><code>db.city.insert("ID", "Name", "CountryCode", "District", "Info").
values(null, "Olympia", "USA", "Washington", '{"Population": 5000}')</code></strong>
Query OK, 1 item affected (0.01 sec)
</pre>

Таблица city имеет пять столбцов: ID, Name, CountryCode, District и Info.
Каждое значение должно соответствовать типу данных столбца,
который это представляет.</p>

<h5><a name="idm139965422219616"></a>Вставка частичной записи</h5>
<p>Следующий пример вставляет значения в столбцы ID, Name и
CountryCode таблицы city.
<pre>
mysql-js&gt; <strong><code>db.city.insert("ID", "Name", "CountryCode").
values(null, "Little Falls", "USA").values(null, "Happy Valley", "USA")</code></strong>
Query OK, 2 item affected (0.03 sec)
</pre>

Когда Вы определяете столбцы, используя метод <code>insert()</code>, число
значений должно соответствовать числу столбцов. В предыдущем примере Вы
должны предоставить три значения, чтобы соответствовать
определенным трем столбцам.</p>

<h4><a name="mysql-shell-tutorial-javascript-table-select"></a>3.4.5.2.
Выбор таблиц</h4>
<p>Вы можете использовать метод <code>select()</code>, чтобы запросить и
получить запись из таблицы в базе данных. X DevAPI обеспечивает
дополнительные методы для использования с <code>select()</code>, чтобы
фильтровать и сортировать возвращенные отчеты.</p>

<p>MySQL предоставляет следующие операторы, чтобы определить условия поиска:
<code>OR</code> (<code>||</code>), <code>AND</code>
(<code>&amp;&amp;</code>), <code>XOR</code>, <code>IS</code>,
<code>NOT</code>, <code>BETWEEN</code>, <code>IN</code>, <code>LIKE</code>,
<code>!=</code>, <code>&lt;&gt;</code>, <code>&gt;</code>,
<code>&gt;=</code>, <code>&lt;</code>, <code>&lt;=</code>,
<code>&amp;</code>, <code>|</code>, <code>&lt;&lt;</code>,
<code>&gt;&gt;</code>, <code>+</code>, <code>-</code>, <code>*</code>,
<code>/</code>, <code>~</code> и <code>%</code>.</p>

<h5><a name="idm139965422190896"></a>Получение всех записей</h5>
<p>Чтобы создать запрос, который возвращает все записи из существующей
таблицы, используйте метод <code>select()</code> не определяя условия поиска.
Следующий пример выбирает все записи из таблицы city
в базе данных <code>world_x</code>.</p>

<p>Ограничьте использование пустого <code>select()</code> интерактивными
запросами. Всегда используйте явный выбор имени столбца в
своем коде программы.</p>
<pre>
mysql-js&gt; <strong><code>db.city.select()</code></strong>
+------+----------+-------------+----------+-------------------------+
| ID   | Name     | CountryCode | District | Info                    |
+------+----------+-------------+----------+-------------------------+
|1     | Kabul    | AFG         | Kabol    | {"Population": 1780000} |
|2     | Qandahar | AFG         | Qandahar | {"Population": 237500}  |
|3     | Herat    | AFG         | Herat    | {"Population": 186800}  |
......  ...   ...  ...
| 4079 | Rafah    | PSE         | Rafah    | {"Population": 92020}   |
+------+----------+-------------+----------+-------------------------+
4082 rows in set (0.01 sec)
</pre>

Пустой набор возвращает следующую информацию:
<pre>
Empty set (0.00 sec)
</pre>

<h5><a name="idm139965422183152"></a>Фильтрованный поиск</h5>
<p>Чтобы создать запрос, который возвращает ряд столбцов таблицы, используйте
метод <code>select()</code> и определите столбцы между квадратными скобками.
Этот запрос возвращает столбцы Name и CountryCode из таблицы city.
<pre>
mysql-js&gt; <strong><code>db.city.select(["Name", "CountryCode"])</code></strong>
+----------------+-------------+
| Name           | CountryCode |
+----------------+-------------+
| Kabul          | AFG         |
| Qandahar       | AFG         |
| Herat          | AFG         |
| Mazar-e-Sharif | AFG         |
| Amsterdam      | NLD         |
... ...
| Rafah          | PSE         |
| Olympia        | USA         |
| Little Falls   | USA         |
| Happy Valley   | USA         |
+----------------+-------------+
4082 rows in set (0.00 sec)
</pre>
Чтобы создать запрос, который возвращает строки, соответствующие определенным
условиям поиска, используйте метод <code>where()</code>, чтобы включить
условия. Например, следующий запрос возвращает имена и коды страны городов,
которые начинаются с буквы Z.
<pre>
mysql-js&gt; <strong><code>db.city.select(["Name", "CountryCode"]).where("Name like 'Z%'")</code></strong>
+--------------+-------------+
| Name         | CountryCode |
+--------------+-------------+
| Zaanstad     | NLD         |
| Zoetermeer   | NLD         |
| Zwolle       | NLD         |
| Zenica       | BIH         |
| Zagazig      | EGY         |
| Zaragoza     | ESP         |
| Zamboanga    | PHL         |
| Zahedan      | IRN         |
| Zanjan       | IRN         |
| Zabol        | IRN         |
| Zama         | JPN         |
| Zhezqazghan  | KAZ         |
| Zhengzhou    | CHN         |
... ...
| Zeleznogorsk | RUS         |
+--------------+-------------+
59 rows in set (0.00 sec)
</pre>

Вы можете отделить значение от условия поиска при использовании метода
<code>bind()</code>. Например, вместо того, чтобы использовать
"Name = 'Z%' " как условие, замените названным заполнителем, состоящим из
двоеточия, сопровождаемого именем, которое начинается с буквы. Включайте
заполнитель и значение в метод <code>bind()</code> следующим образом:
<pre>
mysql-js&gt; <strong><code>db.city.select(["Name", "CountryCode"]).
where("Name like :name").bind("name", "Z%")</code></strong>
</pre>

<p>В пределах программы привязка позволяет Вам определить шаблоны в своих
выражениях, которые заполнены значениями перед выполнением. Всегда
используйте привязку, чтобы экранировать ввод. Избегайте вводить значения
в запросах, используя конкатенацию строк, которая может произвести
недопустимый ввод и, в некоторых случаях, вызвать проблемы безопасности.</p>

<h5><a name="idm139965422169760"></a>Проектные результаты</h5>
<p>Чтобы создать запрос, используя оператор <a href="funct.htm#operator_and">
<code>AND</code></a>, добавьте оператор между условиями
поиска в метод <code>where()</code>.
<pre>
mysql-js&gt; <strong><code>db.city.select(["Name", "CountryCode"]).
 where("Name like 'Z%' and CountryCode = 'CHN'")</code></strong>
+--------------+-------------+
| Name         | CountryCode |
+--------------+-------------+
| Zhengzhou    | CHN         |
| Zibo         | CHN         |
| Zhangjiakou  | CHN         |
| Zhuzhou      | CHN         |
| Zhangjiang   | CHN         |
| Zigong       | CHN         |
| Zaozhuang    | CHN         |
......
| Zhangjiagang | CHN         |
+--------------+-------------+
22 rows in set (0.01 sec)
</pre>

Чтобы определить много условных операторов, Вы можете приложить условия
поиска в круглой скобке, чтобы изменить приоритет оператора. Следующий пример
демонстрирует размещение операторов <a href="funct.htm#operator_and"><code>
AND</code></a> и <a href="funct.htm#operator_or"><code>OR</code></a>.
<pre>
mysql-js&gt; <strong><code>db.city.select(["Name", "CountryCode"]).
where("Name like 'Z%' and (CountryCode = 'CHN' or CountryCode = 'RUS')")</code></strong>
+--------------+-------------+
| Name         | CountryCode |
+--------------+-------------+
| Zhengzhou    | CHN         |
| Zibo         | CHN         |
| Zhangjiakou  | CHN         |
| Zhuzhou      | CHN         |
... ...
| Zeleznogorsk | RUS         |
+--------------+-------------+
29 rows in set (0.01 sec)
</pre>

<h5><a name="idm139965422159744"></a>Limit, Order и Offset</h5>
<p>Вы можете применить методы <code>limit()</code>, <code>orderBy()</code> и
<code>offSet()</code>, чтобы управлять числом и порядком отчетов,
возвращенных методом <code>select()</code>.</p>

<p>Чтобы определить число записей, включенных в набор результатов,
примените метод <code>limit()</code> со значением к методу
<code>select()</code>. Например, следующий запрос возвращает первые пять
записей из таблицы country.
<pre>
mysql-js&gt; <strong><code>db.country.select(["Code", "Name"]).limit(5)</code></strong>
+------+-------------+
| Code | Name        |
+------+-------------+
| ABW  | Aruba       |
| AFG  | Afghanistan |
| AGO  | Angola      |
| AIA  | Anguilla    |
| ALB  | Albania     |
+------+-------------+
5 rows in set (0.00 sec)
</pre>

Чтобы определить порядок результатов, примените <code>orderBy()</code>.
Передайте методу <code>orderBy()</code> список из одного или более столбцов
для сортировки и порядок, в котором расположить результаты: по убыванию
(<code>desc</code>) или по возрастанию (<code>asc</code>). Вариант по
возрастанию используется по умолчанию.</p>

<p>Например, следующий запрос сортирует все записи по столбцу Name, а затем
возвращают первые три в порядке убывания.
<pre>
mysql-js&gt; <strong><code>db.country.select(["Code", "Name"]).orderBy(["Name desc"]).limit(3)</code></strong>
+------+------------+
| Code | Name       |
+------+------------+
| ZWE  | Zimbabwe   |
| ZMB  | Zambia     |
| YUG  | Yugoslavia |
+------+------------+
3 rows in set (0.00 sec)
</pre>

По умолчанию метод <code>limit()</code> запускается с первой записи в
таблице. Вы можете использовать <code>offset()</code>, чтобы изменить
начальную запись. Например, чтобы проигнорировать первую запись возвратить
следующие три, соответствующие условию, передайте
методу <code>offset()</code> значение 1.
<pre>
mysql-js&gt; <strong><code>db.country.select(["Code", "Name"]).orderBy(["Name desc"]).limit(3).offset(1)</code></strong>
+------+------------+
| Code | Name       |
+------+------------+
| ZMB  | Zambia     |
| YUG  | Yugoslavia |
| YEM  | Yemen      |
+------+------------+
3 rows in set (0.00 sec)
</pre>

<h4><a name="mysql-shell-tutorial-javascript-table-update"></a>3.4.5.3.
Обновление таблиц</h4>
<p>Вы можете использовать метод <code>update()</code>, чтобы изменить одну
или более записей в таблице. <code>update()</code> работает, фильтруя запрос,
чтобы включить только те записи, которые будут обновлены, а затем применяя к
ним операции, которые Вы определяете.</p>

<p>Чтобы заменить название города в таблице city, передайте методу
<code>set()</code> новое название города. Затем передайте название города
методу <code>where()</code>, чтобы определить местонахождение и заменить.
Следующий пример заменяет город Peking на Beijing.
<pre>
mysql-js&gt; <strong><code>db.city.update().set("Name", "Beijing").where("Name = 'Peking'")</code></strong>
Query OK, 1 item affected (0.04 sec)
</pre>

Use the <code>select()</code> method to verify the change.
<pre>
mysql-js&gt; <strong><code>db.city.select(["ID", "Name", "CountryCode", "District", "Info"]).where("Name = 'Beijing'")</code></strong>
+------+---------+-------------+----------+-------------------------+
| ID   | Name    | CountryCode | District | Info                    |
+------+---------+-------------+----------+-------------------------+
| 1891 | Beijing | CHN         | Peking   | {"Population": 7472000} |
+------+---------+-------------+----------+-------------------------+
1 row in set (0.00 sec)
</pre>

<h4><a name="mysql-shell-tutorial-javascript-table-delete"></a>3.4.5.4.
Удаление таблиц</h4>
<p>Вы можете использовать метод <code>delete()</code>, чтобы удалить
некоторые или все записи из таблицы в базе данных. X DevAPI обеспечивает
дополнительные методы для использования с <code>delete()</code>, чтобы
фильтровать и упорядочить записи, которые будут удалены.</p>

<h5><a name="idm139965422120192"></a>Удаление записей, используя условия</h5>
<p>Пример передает условия в метод <code>delete()</code>. Все записи,
соответствующие условию, будут удалены из таблицы city. В этом примере одна
запись соответствует условию.
<pre>
mysql-js&gt; <strong><code>db.city.delete().where("Name = 'Olympia'")</code></strong>
Query OK, 1 item affected (0.01 sec)
</pre>

<h5><a name="idm139965422116640"></a>Удаление первой записи</h5>
<p>Чтобы удалить первую запись в таблице city, используйте метод
<code>limit()</code> со значением 1.
<pre>
mysql-js&gt; <strong><code>db.city.delete().limit(1)</code></strong>
Query OK, 1 item affected (0.02 sec)
</pre>

<h5><a name="idm139965422113184"></a>Удаление всех записей в таблице</h5>
<p>Вы можете удалить все записи в таблице. Чтобы сделать так, используйте
<code>delete()</code>, не определяя условие поиска.</p>

<h3><a name="mysql-shell-tutorial-javascript-documents-in-tables"></a>3.4.6.
Документы в таблицах</h3>
<p>В MySQL таблица может содержать традиционные реляционные данные, значения
JSON или то и другое вместе. Вы можете объединить традиционные данные с
документами JSON, храня документы в столбцах, имеющих нативный тип данных
<a href="types.htm#json"><code>JSON</code></a>.</p>

<p>Примеры в этом разделе используют таблицу city
в базе данных <code>world_x</code>.
</p>

<h4><a name="idm139965422100432"></a>Описание таблицы city</h4>
<p>У таблицы city есть пять столбцов (или полей).
<pre>
+-------------+----------+------+-----+---------+----------------+
| Field       | Type     | Null | Key | Default | Extra          |
+-------------+----------+------+-----+---------+----------------+
| ID          | int(11)  | NO   | PRI | null    | auto_increment |
| Name        | char(35) | NO   |     |         |                |
| CountryCode | char(3)  | NO   |     |         |                |
| District    | char(20) | NO   |     |         |                |
| Info        | json     | YES  |     | null    |                |
+-------------+----------+------+-----+---------+----------------+
</pre>

<h4><a name="idm139965422097808"></a>Вставка записи</h4>
<p>Чтобы вставить документ в столбец таблицы, передайте методу
<code>values()</code> правильно построенный документ JSON в правильном
порядке. В следующем примере документ передают как заключительное значение,
которое будет вставлено в столбец Info.
<pre>
mysql-js&gt; <strong><code>db.city.insert().
values(null, "San Francisco", "USA", "California", '{"Population":830000}')</code></strong>
Query OK, 1 item affected (0.01 sec)
</pre>

<h4><a name="idm139965422094144"></a>Выбор записи</h4>
<p>Вы можете создать запрос с условием поиска, которое оценивает
значения документа в выражении.
<pre>
mysql-js&gt; <strong><code>db.city.select(["ID", "Name", "CountryCode", "District", "Info"]).
  where("CountryCode = :country and Info-&gt;'$.Population' &gt; 1000000").
  bind('country', 'USA')</code></strong>
+------+--------------+-------------+--------------+-------------------------+
| ID   | Name         | CountryCode | District     | Info                    |
+------+--------------+-------------+--------------+-------------------------+
| 3793 | New York     | USA         | New York     | {"Population": 8008278} |
| 3794 | Los Angeles  | USA         | California   | {"Population": 3694820} |
| 3795 | Chicago      | USA         | Illinois     | {"Population": 2896016} |
| 3796 | Houston      | USA         | Texas        | {"Population": 1953631} |
| 3797 | Philadelphia | USA         | Pennsylvania | {"Population": 1517550} |
| 3798 | Phoenix      | USA         | Arizona      | {"Population": 1321045} |
| 3799 | San Diego    | USA         | California   | {"Population": 1223400} |
| 3800 | Dallas       | USA         | Texas        | {"Population": 1188580} |
| 3801 | San Antonio  | USA         | Texas        | {"Population": 1144646} |
+------+--------------+-------------+--------------+-------------------------+
9 rows in set (0.01 sec)
</pre>

<h2><a name="mysql-shell-tutorial-python"></a>3.5. MySQL Shell для Python
</h2>
<h3><a name="mysql-shell-tutorial-python-introduction"></a>3.5.1. Введение</h3>
<p>Руководство по MySQL Shell для Python обеспечивает короткое, но
всестороннее введение в функциональность базы данных включая новый X DevAPI,
который предлагает современный, интегральный способ работать с данными, не
требуя знания SQL от разработчиков приложений.</p>
<p>В MySQL таблицы нативный тип контейнера хранения данных, и наборы
сохранены, внутренне используя таблицы.</p>

<h4><a name="idm139965422068288"></a>Документы и наборы JSON</h4>
<p>В JSON <a href="#mysql-shell-tutorial-python-documents">
документом</a> является структура данных, составленная из пар поле/значение,
сохраненных в пределах
<a href="#mysql-shell-tutorial-python-collections">набора</a>.
Значения полей часто содержат другие документы, массивы и списки документов.
<p>
<pre>
{"GNP": .6, "IndepYear": 1967, "Name": "Sealand", "_id": "SEA",
 "demographics": {"LifeExpectancy": 79, "Population": 27},
 "geography": {"Continent": "Europe", "Region": "British Islands",
               "SurfaceArea": 193},
 "government": {"GovernmentForm": "Monarchy",
                "HeadOfState": "Michael Bates"}
}
</pre>

<h4><a name="idm139965422637232"></a>Реляционные таблицы</h4>
<p><a href="#mysql-shell-tutorial-python-relational-tables">
Таблица</a> в MySQL позволяет Вам хранить данные, организованные в строках и
столбцах. Структура таблицы определена одним или более столбцами с
определяемыми пользователем именами и типами данных. У каждой строки,
сохраненной в таблице, есть та же самая структура.
<pre>
+----+----------------+-------------+---------------+-------------------------+
| ID | Name           | CountryCode | District      | Info                    |
+----+----------------+-------------+---------------+-------------------------+
|1   | Kabul          | AFG         | Kabol         | {"Population": 1780000} |
|2   | Qandahar       | AFG         | Qandahar      | {"Population": 237500}  |
|3   | Herat          | AFG         | Herat         | {"Population": 186800}  |
|4   | Mazar-e-Sharif | AFG         | Balkh         | {"Population": 127800}  |
|5   | Amsterdam      | NLD         | Noord-Holland | {"Population": 731200}  |
|6   | Rotterdam      | NLD         | Zuid-Holland  | {"Population": 593321}  |
+----+----------------+-------------+---------------+-------------------------+
</pre>

<h3><a name="mysql-shell-tutorial-python-download"></a>3.5.2.
Образец базы данных</h3>
<p>Образец базы данных <code>world_x</code> содержит некий набор
JSON и 3 реляционных таблицы:</p>

<ul><li><p>Набор</p>
<ul><li><p>countryinfo: информация о странах в мире.</p></li></ul></li>
<li><p>Таблицы</p>
<ul><li><p>country: минимальная информация о странах мира.</li>
<li>city: информация о некоторых из городов в странах.</li>
<li>countrylanguage: языки, на которых говорят в каждой стране.
</li></ul></li></ul>

<h4><a name="idm139965422620192"></a>Требования</h4>
<p>Вы должны установить MySQL Shell с X Protocol. Для инструкций см.
<a href="#document-store-setting-up">раздел 3.3</a>.</p>
<p>Запустите сервер прежде, чем Вы загрузите базу данных
<code>world_x</code> для этого руководства.</p>

<h4><a name="idm139965422616992"></a>Загрузка базы данных world_x</h4>
<p>Чтобы подготовить образец базы данных <code>world_x</code>,
следуйте этим шагам:</p>

<ol type="1"><li><p>Скачайте
<a href="../../../downloads.mysql.com/docs/world_x-db.zip"
target="_top">world_x-db.zip</a>.</li>

<li>Извлеките архив установки во временный каталог, например, в
<code>/tmp/</code>. Распаковка архива приводит к единственному файлу
<code>world_x.sql</code>.</li>

<li>Создайте или обновите схему следующей командой:
<pre>
<strong><code>mysqlsh -u root --sql --recreate-schema world_x &lt; /tmp/world_x-db/world_x.sql</code></strong>
Enter password: <strong><code>****</code></strong>
Recreating schema world_x...
</pre>

Введите свой пароль когда надо. Не-root учетная запись может использоваться,
если у нее записи есть привилегии создавать новые базы данных.</p>
<p>Замените <code>/tmp/</code> на путь к файлу
<code>world_x.sql</code> в Вашей системе.</p></li></ol>

<h3><a name="mysql-shell-tutorial-python-shell"></a>3.5.3. MySQL Shell</h3>
<p>MySQL Shell является объединенным интерфейсом скриптов для сервера MySQL.
Это поддерживает скрипты на JavaScript и Python. JavaScript режим обработки
по умолчанию. В большинстве случаев Вы нуждаетесь в учетной записи, чтобы
соединиться с местным сервером MySQL.</p>

<h4><a name="mysql-shell-tutorial-python-shell-start"></a>Запуск MySQL Shell
</h4>
<p>После того, как Вы установили и запустили сервер MySQL, соединитесь с
сервером. По умолчанию MySQL Shell соединяется, используя X Protocol.</p>

<p>На той же самой системе, где работает сервер, откройте окно терминала и
запустите MySQL Shell следующей командой:
<pre>
<strong><code>mysqlsh -u <em><code>name</code></em> world_x</code></strong>
Creating an X Session to <em><code>name</code></em>@localhost:33060/world_x
Enter password:<strong><code> ****</code></strong>
</pre>
Вы, возможно, должны определить другой путь, соответственно своей системе.
</p>

<p>Кроме того:</p>
<ul><li><p><em><code>name</code></em> представляет имя пользователя Вашей
учетной записи MySQL.</li>
<li>MySQL Shell запросит его пароль.</li>
<li>Опция <code>--py</code> запускает MySQL Shell в режиме Питона.
Если Вы опускаете <code>--py</code>, MySQL Shell запускается в
режиме JavaScript.</li>
<li>Схема по умолчанию для этого сеанса: база данных <code>world_x</code>.
</p></li></ul>

<p>Подсказка <code>mysql-py&gt;</code> указывает, что активный язык для
этого сеанса Python.
<pre>
mysql-py&gt;
</pre>

Когда Вы выполняете <span><strong>mysqlsh</strong></span> без параметра
host, MySQL Shell пытается соединиться с сервером по адресу localhost на
порту 33060. Чтобы определить иной хост или номер порта, как и другие опции,
см. описания опций на
<a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html" target="_top">
<span><strong>mysqlsh</strong></span> The MySQL Shell</a>.</p>

<p>MySQL Shell поддерживает входную строку, редактируемую следующим образом:
</p>
<ul><li><p>Клавиши <span><strong>стрелка влево</strong></span> и
<span><strong>стрелка вправо</strong></span> перемещают горизонтально в
пределах текущей входной строки.</li>

<li>Клавиши <span><strong>стрелка вверх</strong></span> и
<span><strong>стрелка вниз</strong></span> перемещают вверх и вниз по набору
ранее введенных строк.</li>
<li><span><strong>Backspace</strong></span> и <span><strong>Enter</strong>
</span> действуют как и везде.</p></li></ul>

<h4><a name="mysql-shell-tutorial-python-shell-help"></a>
Получение справки по MySQL Shell</h4>
<p>Введите <span><strong>mysqlsh --help</strong></span> на подсказку Вашего
интерпретатора команд для получения списка параметров командной строки.
<pre>
<strong><code>mysqlsh --help</code></strong>
</pre>

Введите <span><strong>\help</strong></span> на подсказку MySQL Shell для
получения списка доступных команд и их описания.
<pre>
mysql-py&gt; <strong><code>\help</code></strong>
</pre>

Введите <span><strong>\help</strong></span> и имя команды для получения
подробной справки о команде MySQL Shell. Например, чтобы посмотреть справку
по команде <span><strong>\connect</strong></span>, введите:
<pre>
mysql-py&gt; <strong><code>\help \connect</code></strong>
</pre>

<h4><a name="mysql-shell-tutorial-python-shell-quit"></a>
Выход из MySQL Shell</h4>
<p>Чтобы выйти из MySQL Shell, введите следующую команду:
<pre>
mysql-py&gt; <strong><code>\quit</code></strong>
</pre>

<p>Использование MySQL Shell для Python абсолютно аналогично использованию
MySQL Shell для JavaScript, поэтому приведенное выше описание для JavaScript
полностью пригодно и для Python, разумеется, с поправками на синтаксис языка.

<h2><a name="mysql-shell-visual-studio"></a>3.6. MySQL для Visual Studio</h2>
<p>Этот раздел объясняет, как использовать MySQL Shell, чтобы написать
скрипт сервера MySQL для Visual Studio.</p>

<h3><a name="mysql-shell-visual-studio-introduction"></a>Введение</h3>
<p>MySQL для Visual Studio обеспечивает доступ к объектам MySQL и данным, не
вынуждая разработчиков покидать Visual Studio. MySQL для Visual Studio
разработан как пакет Visual Studio, он напрямую встраивается в Server
Explorer, предоставляя свободный доступ к объектам и соединениям.</p>

<p>Следующие особенности MySQL для Visual Studio доступны с версии 2.0.2:</p>
<ul><li><p>Редакторы кода для JavaScript и Python, где скрипты
могут быть выполнены, чтобы запросить данные из базы данных MySQL.</li>

<li>Лучшая интеграция с Server Explorer, чтобы открыть редактор кода для
MySQL, JavaScript и Python напрямую при соединении с сервером MySQL.</li>
<li>Более новый интерфейс для того, чтобы вывести на
экран результаты запроса:</p>

<ul><li><p>Множественные вкладки для каждого набора результатов.</li>
<li>Представление результатов, где информация может быть представлена в
виде сетки, дерева или текстового представления для результатов JSON.</li>
<li>Просмотр типов полей, где показана информация о наборе результатов:
имена, типы, наборы символов и т.д.</li>

<li>Представление статистики запроса выводит на экран информацию о
выполненном запросе, такую как время выполнения, обработанные строки,
индексы, использование временных таблиц и многое другое.</li>
<li>Представление плана выполнения выводит на экран объяснение выполнения
запроса, сделанное внутренне сервером MySQL.</li></ul></li></ul>

<h3><a name="mysql-shell-visual-studio-getting-started"></a>С чего начать
</h3>
<p>Требуется MySQL для Visual Studio 2.0.2 или выше и
Visual Studio 2010 или выше. X DevAPI требует MySQL Server 5.7.12 или выше с
включенной поддержкой X plugin.</p>

<h3><a name="mysql-shell-visual-studio-code-editor-open"></a>
Запуск Code Editor</h3>
<p>Перед запуском редактора кода, который может выполнить запросы к серверу
MySQL, соединение должно быть установлено:</p>

<ol type="1"><li><p>Откройте Server Explorer через меню View или
<span><strong>Control</strong></span> + <span><strong>W</strong></span>,
<span><strong>K</strong></span>.</li>

<li>Щелкните правой кнопкой по узлу Data Connections и
выберите <span>Add Connection...</span>.</li>
<li>В диалоге <span>Add Connection</span> удостоверьтесь, что источник данных
MySQL используется, и заполните всю информацию.</p>
<p>Чтобы ввести номер порта, щелкните по <span>Advanced...</span> и
установите Port среди списка свойств соединения.</p></li>

<li><p>Щелкните <span>Test Connection</span>, чтобы гарантировать, что Вы
имеете допустимое соединение, затем нажмите <span>OK</span>.</li>
<li>Щелкните правой кнопкой Ваше недавно созданное соединение, выберите
<span>New MySQL Script</span> и затем язык для редактора кода, который
Вы хотите открыть.</p></li></ol>
<p>Для существующих соединений MySQL, чтобы создать новый редактор Вы
должны сделать только последний шаг.</p>

<h3><a name="mysql-shell-visual-studio-code-editor-using"></a>
Использование Code Editor</h3>
<p>У редакторов скриптов MySQL есть панель инструментов наверху, где
информация о сеансе выведена на экран, наряду с действиями, которые
могут быть выполнены.</p>

<p>Отметьте, что первые две кнопки на панели инструментов представляют
команды соединиться или отсоединиться от сервера MySQL. Если редактор был
открыт из Server Explorer, соединение будет уже установлено для
нового окна редактора.</p>

<p>Третья кнопка <span>Run</span> выполняет скрипт в окне редактора.
Результаты выполнения будут выведены на экран ниже окна скрипта.</p>
<p>Некоторые команды в MySQL Shell могут быть выполнены без добавления
<span><strong>execute()</strong></span> в интерактивном режиме. В MySQL для
Visual Studio эти команды обяхательно требуют
<span><strong>execute()</strong></span>. Другими словами, добавьте
".execute()", чтобы выполнить команды.</p>

<h2><a name="x-plugin"></a>3.7. X Plugin</h2>
<p>X Plugin расширяет MySQL Server, чтобы быть в состоянии функционировать
как хранилище документов. Выполнение X Plugin позволяет MySQL Server
общаться с клиентами, использующими X Protocol, которые разработаны, чтобы
в соответствии с ACID использовать MySQL как хранилище документов. Документы
хранятся в формате JSON и включают хранение схемы. Используя X DevAPI, Вы
можете использовать синтаксис подобный NoSQL, чтобы выполнить Create, Read,
Update, Delete (CRUD) операции с документами.</p>
<p>Этот раздел объясняет, как сконфигурировать и контролировать
X Plugin в MySQL Server.</p>

<h3><a name="x-plugin-ssl-connections"></a>3.7.1.
Использование безопасного соединения с X Plugin</h3>
<p>Этот раздел объясняет, как сконфигурировать X Plugin, чтобы использовать
безопасные соединения. Для большего количества вводной информации, см.
<a href="security.html#secure-connections">раздел 7.4</a>.</p>

<p>X Plugin имеет собственные настройки SSL, которые могут отличаться от
используемых с сервером MySQL. Это означает, что X Plugin может быть
сконфигурирован с иным ключом SSL, сертификатом и файлом центров
сертификации, чем сервер MySQL. Точно так же у X Plugin есть свои собственные
переменные состояния SSL, вычисленные независимо от сервера MySQL. По
умолчанию конфигурация X Plugin SSL взята из переменных
<code>mysqlx_ssl_*</code>, описанных в
<a href="#x-plugin-system-variables-options">разделе 3.7.2.2</a>.
Если никакая конфигурация не обеспечена, используя переменные
<code>mysqlx_ssl_*</code>, X Plugin переходит к использованию системных
переменных SSL сервера MySQL. Это означает, что Вы можете иметь отдельные
конфигурации SSL для протокола MySQL и X Protocol, конфигурируя каждый
отдельно, или совместно использовать конфигурацию SSL в MySQL и X Protocol,
конфигурируя только переменные <code>ssl-*</code>.</p>

<p>На сервере с установленным X Plugin, чтобы сконфигурировать MySQL
Protocol и X Protocol с отдельными конфигурациями SSL используют оба набора
переменных <code>ssl-*</code> и <code>mysqlx-ssl-*</code> в
<code>my.cnf</code>:
<pre>
[mysqld]
ssl-ca=ca1.pem
ssl-cert=server-cert1.pem
ssl-key=server-key1.pem
mysqlx-ssl-ca=ca2.pem
mysqlx-ssl-cert=server-cert2.pem
mysqlx-ssl-key=server-key2.pem
</pre>

Доступные переменные <code>mysqlx_ssl_*</code> отражают переменные SSL в
сервере MySQL, таким образом, файлы и методы, описанные для того, чтобы
сконфигурировать сервер MySQL, чтобы использовать SSL в
<a href="security.html#using-secure-connections">разделе 7.4.4</a>, относятся
к конфигурированию X Plugin, чтобы использовать безопасные соединения.
Исключение из этого правила: переменная <code>mysqlx_ssl</code>, которая по
умолчанию имеет значение <code>1</code>, когда любая из других переменных,
связанных с X Protocol SSL, сконфигурирована. Другими словами, если Вы
конфигурируете какую-либо из переменных <code>mysqlx_ssl_*</code> не надо
конфигурировать отдельно <code>mysqlx_ssl</code>.</p>

<p>Вы можете сконфигурировать версии TLS, используемые X Protocol SSL, через
системную переменную <a href="server.htm#sysvar_tls_version"><code>
tls_version</code></a>. Версия TLS, используемая MySQL и X Protocol,
является поэтому той же самой версией TLS.</p>

<p>Шифрование соединения является дополнительным, но определенный
пользователь может быть вынужден использовать шифрование для X Protocol и
MySQL. Вы конфигурируете такого пользователя запросом
<a href="sql.htm#grant"><code>GRANT</code></a> с опцией
<code>REQUIRE</code>. Подробности в <a href="sql.htm#grant">разделе 14.7.1.6
</a>. Как вариант, все соединения X Protocol и MySQL могут быть вынуждены
использовать шифрование, устанавливая
<a href="server.htm#sysvar_require_secure_transport"><code>
require_secure_transport</code></a>.</p>

<h3><a name="x-plugin-options-variables"></a>3.7.2.
Опции и переменные X Plugin</h3>
<p>Этот раздел описывает доступные параметры командной строки и системные
переменные, которые конфигурируют MySQL Shell.</p>

<h4><a name="x-plugin-option-variable-reference"></a>3.7.2.1.
Опции и переменные X Plugin: обзор</h4>
<p>Эта таблица обеспечивает краткий обзор параметров командной строки,
системных и статусных перменных для X Plugin.</p>

<a name="idm139965421444864"></a><p><b>Таблица 3.1.
Опции и переменные X Plugin</b></p>
<table border="1">
<thead><tr><th scope="col">Имя</th><th scope="col">Командная строка</th>
<th scope="col">Файл опций</th><th scope="col">Системная переменная</th>
<th scope="col">Переменная статуса</th><th scope="col">Контекст
переменной</th><th scope="col">Динамическая</th></tr></thead>
<tbody><tr><td><a href="#statvar_Mysqlx_bytes_received">
Mysqlx_bytes_received</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_bytes_sent">
Mysqlx_bytes_sent</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#option_mysqld_mysqlx_connect_timeout">
mysqlx_connect_timeout</a></td><td>Да</td><td>Да</td><td>Да</td>
<td> </td><td>Глобально</td><td>Да</td></tr>
<tr><td><a href="#statvar_Mysqlx_connection_accept_errors">
Mysqlx_connection_accept_errors</a></td><td> </td><td> </td><td> </td>
<td>Да</td><td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_connection_errors">
Mysqlx_connection_errors</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_connections_accepted">
Mysqlx_connections_accepted</a></td><td> </td><td> </td><td> </td>
<td>Да</td><td>Глобально</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_connections_closed">
Mysqlx_connections_closed</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Глобально</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_connections_rejected">
Mysqlx_connections_rejected</a></td><td> </td><td> </td><td> </td>
<td>Да</td><td>Глобально</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_crud_delete">
Mysqlx_crud_delete</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_crud_find">
Mysqlx_crud_find</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_crud_insert">
Mysqlx_crud_insert</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_crud_update">
Mysqlx_crud_update</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_errors_sent">
Mysqlx_errors_sent</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_expect_close">
Mysqlx_expect_close</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_expect_open">
Mysqlx_expect_open</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#option_mysqld_mysqlx_idle_worker_thread_timeout">
mysqlx_idle_worker_thread_timeout</a></td><td>Да</td><td>Да</td><td> </td>
<td> </td><td> </td><td> </td></tr>
<tr><td><a href="#statvar_Mysqlx_init_error">
Mysqlx_init_error</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#option_mysqld_mysqlx_max_allowed_packet">
mysqlx_max_allowed_packet</a></td><td>Да</td><td>Да</td><td> </td><td> </td>
<td> </td><td> </td></tr>
<tr><td><a href="#option_mysqld_mysqlx_max_connections">
mysqlx_max_connections</a></td><td>Да</td><td>Да</td><td>Да</td><td> </td>
<td>Глобально</td><td>Да</td></tr>
<tr><td><a href="#option_mysqld_mysqlx_min_worker_threads">
mysqlx_min_worker_threads</a></td><td>Да</td><td>Да</td><td> </td>
<td> </td><td> </td><td> </td></tr>
<tr><td><a href="#statvar_Mysqlx_notice_other_sent">
Mysqlx_notice_other_sent</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_notice_warning_sent">
Mysqlx_notice_warning_sent</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#option_mysqld_mysqlx_port">mysqlx_port
</a></td><td>Да</td><td>Да</td><td>Да</td><td> </td><td>Глобально</td>
<td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_rows_sent">
Mysqlx_rows_sent</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_sessions">Mysqlx_sessions
</a></td><td> </td><td> </td><td> </td><td>Да</td><td>Глобально</td>
<td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_sessions_accepted">
Mysqlx_sessions_accepted</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Глобально</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_sessions_closed">
Mysqlx_sessions_closed</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Глобально</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_sessions_fatal_error">
Mysqlx_sessions_fatal_error</a></td><td> </td><td> </td><td> </td>
<td>Да</td><td>Глобально</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_sessions_killed">
Mysqlx_sessions_killed</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Глобально</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_sessions_rejected">
Mysqlx_sessions_rejected</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Глобально</td><td>Нет</td></tr>
<tr><td><a href="#option_mysqld_mysqlx_ssl">mysqlx_ssl</a>
</td><td>Да</td><td>Да</td><td>Да</td><td> </td><td>Глобально</td>
<td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_ssl_accept_renegotiates">
Mysqlx_ssl_accept_renegotiates</a></td><td> </td><td> </td><td> </td>
<td>Да</td><td>Глобально</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_ssl_accepts">
Mysqlx_ssl_accepts</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Глобально</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_ssl_active">
Mysqlx_ssl_active</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#option_mysqld_mysqlx_ssl_ca">
mysqlx_ssl_ca</a></td><td>Да</td><td>Да</td><td>Да</td><td> </td>
<td>Глобально</td><td>Нет</td></tr>
<tr><td><a href="#option_mysqld_mysqlx_ssl_capath">
mysqlx_ssl_capath</a></td><td>Да</td><td>Да</td><td>Да</td><td> </td>
<td>Глобально</td><td>Нет</td></tr>
<tr><td><a href="#option_mysqld_mysqlx_ssl_cert">
mysqlx_ssl_cert</a></td><td>Да</td><td>Да</td><td>Да</td><td> </td>
<td>Глобально</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_ssl_cipher">
Mysqlx_ssl_cipher</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#option_mysqld_mysqlx_ssl_cipher">
mysqlx_ssl_cipher</a></td><td>Да</td><td>Да</td><td> </td><td> </td>
<td> </td><td> </td></tr>
<tr><td><a href="#statvar_Mysqlx_ssl_cipher_list">
Mysqlx_ssl_cipher_list</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#option_mysqld_mysqlx_ssl_crl">
mysqlx_ssl_crl</a></td><td>Да</td><td>Да</td><td>Да</td><td> </td>
<td>Глобально</td><td>Нет</td></tr>
<tr><td><a href="#option_mysqld_mysqlx_ssl_crlpath">
mysqlx_ssl_crlpath</a></td><td>Да</td><td>Да</td><td>Да</td><td> </td>
<td>Глобально</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_ssl_ctx_verify_depth">
Mysqlx_ssl_ctx_verify_depth</a></td><td> </td><td> </td><td> </td>
<td>Да</td><td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_ssl_ctx_verify_mode">
Mysqlx_ssl_ctx_verify_mode</a></td><td> </td><td> </td><td> </td>
<td>Да</td><td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_ssl_finished_accepts">
Mysqlx_ssl_finished_accepts</a></td><td> </td><td> </td><td> </td>
<td>Да</td><td>Глобально</td><td>Нет</td></tr>
<tr><td><a href="#option_mysqld_mysqlx_ssl_key">
mysqlx_ssl_key</a></td><td>Да</td><td>Да</td><td>Да</td><td> </td>
<td>Глобально</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_ssl_server_not_after">
Mysqlx_ssl_server_not_after</a></td><td> </td><td> </td><td> </td>
<td>Да</td><td>Глобально</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_ssl_server_not_before">
Mysqlx_ssl_server_not_before</a></td><td> </td><td> </td><td> </td>
<td>Да</td><td>Глобально</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_ssl_verify_depth">
Mysqlx_ssl_verify_depth</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Глобально</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_ssl_verify_mode">
Mysqlx_ssl_verify_mode</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Глобально</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_ssl_version">
Mysqlx_ssl_version</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_stmt_create_collection">
Mysqlx_stmt_create_collection</a></td><td> </td><td> </td><td> </td>
<td>Да</td><td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_stmt_create_collection_index">
Mysqlx_stmt_create_collection_index</a></td><td> </td><td> </td><td> </td>
<td>Да</td><td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_stmt_disable_notices">
Mysqlx_stmt_disable_notices</a></td><td> </td><td> </td><td> </td>
<td>Да</td><td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_stmt_drop_collection">
Mysqlx_stmt_drop_collection</a></td><td> </td><td> </td><td> </td>
<td>Да</td><td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_stmt_drop_collection_index">
Mysqlx_stmt_drop_collection_index</a></td><td> </td><td> </td><td> </td>
<td>Да</td><td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_stmt_enable_notices">
Mysqlx_stmt_enable_notices</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_stmt_execute_sql">
Mysqlx_stmt_execute_sql</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_stmt_execute_xplugin">
Mysqlx_stmt_execute_xplugin</a></td><td> </td><td> </td><td> </td>
<td>Да</td><td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_stmt_kill_client">
Mysqlx_stmt_kill_client</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_stmt_list_clients">
Mysqlx_stmt_list_clients</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_stmt_list_notices">
Mysqlx_stmt_list_notices</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_stmt_list_objects">
Mysqlx_stmt_list_objects</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_stmt_ping">
Mysqlx_stmt_ping</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Оба</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_worker_threads">
Mysqlx_worker_threads</a></td><td> </td><td> </td><td> </td><td>Да</td>
<td>Глобально</td><td>Нет</td></tr>
<tr><td><a href="#statvar_Mysqlx_worker_threads_active">
Mysqlx_worker_threads_active</a></td><td> </td><td> </td><td> </td>
<td>Да</td><td>Глобально</td><td>Нет</td></tr></tbody></table>

<h4><a name="x-plugin-system-variables-options"></a>3.7.2.2.
Системные переменные и опции X Plugin</h4>
<p>Следующие системные переменные конфигурируют X Plugin:</p>

<ul><li><p><a name="option_mysqld_mysqlx_port"></a>
<a href="#option_mysqld_mysqlx_port"><code>
--mysqlx_port[=<em><code>value</code></em>]</code></a></p>

<table border="1">
<tbody><tr><td><span><strong>Формат командной строки</strong></span></td>
<td colspan="3"><code>--mysqlx_port=#</code></td></tr>
<tr><td rowspan="3"><span><strong>Системная переменная</strong></span></td>
<td><span><strong>Имя</strong></span></td>
<td colspan="2"><code>mysqlx_port</code></td></tr>
<tr><td><span><strong>Контекст переменной</strong></span></td>
<td colspan="2">Глобальная</td></tr>
<tr><td><span><strong>Динамическая переменная</strong></span></td>
<td colspan="2">Нет</td></tr>
<tr><td rowspan="4"><span><strong>Разрешенные значения</strong></span></td>
<td><span><strong>Тип</strong></span></td>
<td colspan="2"><code>integer</code></td></tr>
<tr><td><span><strong>Значение по умолчанию</strong></span></td>
<td colspan="2"><code>33060</code></td></tr>
<tr><td><span><strong>Минимальное значение</strong></span></td>
<td colspan="2"><code>1</code></td></tr>
<tr><td><span><strong>Максимальное значение</strong></span></td>
<td colspan="2"><code>65535</code></td></tr></tbody></table>

<p>Определяет порт, где X Plugin ждет соединений. Эта опция считана только
при запуске, поэтому чтобы изменить ее на рабочем
сервере требуется перезапуск.</li>

<li><a name="option_mysqld_mysqlx_connect_timeout"></a>
<a href="#option_mysqld_mysqlx_connect_timeout">
<code>--mysqlx_connect_timeout[=<em><code>value</code></em>]</code></a></p>

<table border="1">
<tbody><tr><td><span><strong>Формат командной строки</strong></span></td>
<td colspan="3"><code>--mysqlx_connect_timeout=#</code></td></tr>
<tr><td rowspan="3"><span><strong>Системная переменная</strong></span></td>
<td><span><strong>Имя</strong></span></td>
<td colspan="2"><code>mysqlx_connect_timeout</code></td></tr>
<tr><td><span><strong>Контекст переменной</strong></span></td>
<td colspan="2">Глобальная</td></tr>
<tr><td><span><strong>Динамическая переменная</strong></span></td>
<td colspan="2">Да</td></tr>
<tr><td rowspan="4"><span><strong>Разрешенные значения</strong></span></td>
<td><span><strong>Тип</strong></span></td><td colspan="2">
<code>integer</code></td></tr>
<tr><td><span><strong>Значение по умолчанию</strong></span></td>
<td colspan="2"><code>30</code></td></tr>
<tr><td><span><strong>Минимальное значение</strong></span></td>
<td colspan="2"><code>1</code></td></tr>
<tr><td><span><strong>Максимальное значение</strong></span></td>
<td colspan="2"><code>18446744073709551615</code></td></tr></tbody></table>
<p>Сколько секунд ждать первого пакета, который будет получен от недавно
присоединенных клиентов. Эта опция динамически меняется.</li>

<li><a name="option_mysqld_mysqlx_idle_worker_thread_timeout"></a>
<a href="#option_mysqld_mysqlx_idle_worker_thread_timeout">
<code>mysqlx_idle_worker_thread_timeout[=<em><code>value</code></em>]
</code></a></p>

<table border="1">
<tbody><tr><td><span><strong>Формат командной строки</strong></span></td>
<td colspan="3"><code>--mysqlx_idle_worker_thread_timeout=#</code></td></tr>
<tr><td rowspan="4"><span><strong>Разрешенные значения</strong></span></td>
<td><span><strong>Тип</strong></span></td><td colspan="2"><code>integer
</code></td></tr>
<tr><td><span><strong>Значение по умолчанию</strong></span></td><td colspan="2">
<code>60</code></td></tr>
<tr><td><span><strong>Минимальное значение</strong></span></td><td colspan="2">
<code>0</code></td></tr>
<tr><td><span><strong>Максимальное значение</strong></span></td><td colspan="2">
<code>18446744073709551615</code></td></tr></tbody></table>
<p>Время в секундах, после которых будет закончен неактивный поток.</li>

<li><a name="option_mysqld_mysqlx_max_allowed_packet"></a>
<a href="#option_mysqld_mysqlx_max_allowed_packet"><code>
mysqlx_max_allowed_packet[=<em><code>value</code></em>]</code></a></p>

<table border="1">
<tbody><tr><td><span><strong>Формат командной строки</strong></span></td>
<td colspan="3"><code>--mysqlx_max_allowed_packet=#</code></td></tr>
<tr><td rowspan="4"><span><strong>Разрешенные значения</strong></span></td>
<td><span><strong>Тип</strong></span></td>
<td colspan="2"><code>integer</code></td></tr>
<tr><td><span><strong>Значение по умолчанию</strong></span></td>
<td colspan="2"><code>1048576</code></td></tr>
<tr><td><span><strong>Минимальное значение</strong></span></td>
<td colspan="2"><code>0</code></td></tr>
<tr><td><span><strong>Максимальное значение</strong></span></td>
<td colspan="2"><code>18446744073709551615</code></td></tr></tbody></table>
<p>Размер сетевого пакета, который может обработать X Plugin.
Эта опция меняется динамически.</li>

<li><a name="option_mysqld_mysqlx_max_connections"></a>
<a href="#option_mysqld_mysqlx_max_connections"><code>
mysqlx_max_connections[=<em><code>value</code></em>]</code></a></p>

<table border="1">
<tbody><tr><td><span><strong>Формат командной строки</strong>
</span></td><td colspan="3"><code>--mysqlx_max_connections=#</code></td></tr>
<tr><td rowspan="3"><span><strong>Системная переменная</strong></span></td>
<td><span><strong>Имя</strong></span></td>
<td colspan="2"><code>mysqlx_max_connections</code></td></tr>
<tr><td><span><strong>Контекст переменной</strong></span></td>
<td colspan="2">Глобальная</td></tr>
<tr><td><span><strong>Динамическая переменная</strong></span></td>
<td colspan="2">Да</td></tr>
<tr><td rowspan="4"><span><strong>Разрешенные значения</strong></span></td>
<td><span><strong>Тип</strong></span></td>
<td colspan="2"><code>integer</code></td></tr>
<tr><td><span><strong>Значение по умолчанию</strong></span></td>
<td colspan="2"><code>100</code></td></tr>
<tr><td><span><strong>Минимальное значение</strong></span></td>
<td colspan="2"><code>1</code></td></tr>
<tr><td><span><strong>Максимальное значение</strong></span></td>
<td colspan="2"><code>18446744073709551615</code></td></tr></tbody></table>

<p>Максимальное количество параллельных соединений с клиентами, которые
X Plugin может принять. Эта опция динамически меняется. При измении этой
переменной, если новое значение меньше, чем текущее число соединений, новый
предел принят во внимание только для новых соединений.</li>

<li><a name="option_mysqld_mysqlx_min_worker_threads"></a>
<a href="#option_mysqld_mysqlx_min_worker_threads">
<code>mysqlx_min_worker_threads[=<em><code>value</code></em>]</code></a></p>

<table border="1">
<tbody><tr><td><span><strong>Формат командной строки</strong></span></td>
<td colspan="3"><code>--mysqlx_min_worker_threads=#</code></td></tr>
<tr><td rowspan="4"><span><strong>Разрешенные значения</strong></span></td>
<td><span><strong>Тип</strong></span></td><td colspan="2"><code>integer
</code></td></tr>
<tr><td><span><strong>Значение по умолчанию</strong></span></td>
<td colspan="2"><code>2</code></td></tr>
<tr><td><span><strong>Минимальное значение</strong></span></td>
<td colspan="2"><code>1</code></td></tr>
<tr><td><span><strong>Максимальное значение</strong></span></td>
<td colspan="2"><code>18446744073709551615</code></td></tr></tbody></table>

<p>Минимальное число потоков X Plugin для того, чтобы обработать запросы
клиентов. Максимальное количество потоков ограничено неявно
<a href="#option_mysqld_mysqlx_max_connections"><code>
--mysqlx_max_connections</code></a>. Эта опция меняется динамически.</li>

<li><a name="option_mysqld_mysqlx_ssl"></a>
<a href="#option_mysqld_mysqlx_ssl"><code>
--mysqlx_ssl[=<em><code>value</code></em>]</code></a></p>

<table border="1">
<tbody><tr><td><span><strong>Формат командной строки</strong></span></td>
<td colspan="3"><code>--mysqlx_ssl=#</code></td></tr>
<tr><td rowspan="3"><span><strong>Системная переменная</strong></span></td>
<td><span><strong>Имя</strong></span></td><td colspan="2">
<code>mysqlx_ssl</code></td></tr>
<tr><td><span><strong>Контекст переменной</strong></span></td>
<td colspan="2">Глобальная</td></tr>
<tr><td><span><strong>Динамическая переменная</strong></span></td>
<td colspan="2">Нет</td></tr>
<tr><td><span><strong>Разрешенные значения</strong></span></td>
<td><span><strong>Тип</strong></span></td><td colspan="2">
<code>integer</code></td></tr></tbody></table>
<p>Эквивалент <code>ssl</code> для X Plugin, см. ту переменную для
получения дополнительной информации.</li>

<li><a name="option_mysqld_mysqlx_ssl_ca"></a>
<a href="#option_mysqld_mysqlx_ssl_ca"><code>
--mysqlx_ssl_ca[=<em><code>value</code></em>]</code></a></p>

<table border="1">
<tbody><tr><td><span><strong>Формат командной строки</strong></span></td>
<td colspan="3"><code>--mysqlx_ssl_ca=file_name</code></td></tr>
<tr><td rowspan="3"><span><strong>Системная переменная</strong></span></td>
<td><span><strong>Имя</strong></span></td><td colspan="2">
<code>mysqlx_ssl_ca</code></td></tr>
<tr><td><span><strong>Контекст переменной</strong></span></td>
<td colspan="2">Глобальная</td></tr>
<tr><td><span><strong>Динамическая переменная</strong></span></td>
<td colspan="2">Нет</td></tr>
<tr><td><span><strong>Разрешенные значения</strong></span></td>
<td><span><strong>Тип</strong></span></td><td colspan="2"><code>
file name</code></td></tr></tbody></table>
<p>Эквивалент <a href="server.htm#sysvar_ssl_ca"><code>ssl_ca</code></a>
для X Plugin, см. ту переменную для получения дополнительной информации.</li>

<li><a name="option_mysqld_mysqlx_ssl_capath"></a>
<a href="#option_mysqld_mysqlx_ssl_capath"><code>
--mysqlx_ssl_capath[=<em><code>value</code></em>]</code></a></p>

<table border="1">
<tbody><tr><td><span><strong>Формат командной строки</strong></span></td>
<td colspan="3"><code>--mysqlx_ssl_capath=dir_name</code></td></tr>
<tr><td rowspan="3"><span><strong>Системная переменная</strong></span></td>
<td><span><strong>Имя</strong></span></td><td colspan="2">
<code>mysqlx_ssl_capath</code></td></tr>
<tr><td><span><strong>Контекст переменной</strong></span></td>
<td colspan="2">Глобальная</td></tr>
<tr><td><span><strong>Динамическая переменная</strong></span></td>
<td colspan="2">Нет</td></tr>
<tr><td><span><strong>Разрешенные значения</strong></span></td>
<td><span><strong>Тип</strong></span></td><td colspan="2">
<code>directory name</code></td></tr></tbody></table>

<p>Эквивалент <a href="server.htm#sysvar_ssl_capath"><code>ssl_capath</code>
</a> для X Plugin, см. ту переменную для получения дополнительной информации.
</li>

<li><a name="option_mysqld_mysqlx_ssl_cert"></a>
<a href="#option_mysqld_mysqlx_ssl_cert"><code>
--mysqlx_ssl_cert[=<em><code>value</code></em>]</code></a></p>

<table border="1">
<tbody><tr><td><span><strong>Формат командной строки</strong></span></td>
<td colspan="3"><code>--mysqlx_ssl_cert</code></td></tr>
<tr><td rowspan="3"><span><strong>Системная переменная</strong></span></td>
<td><span><strong>Имя</strong></span></td><td colspan="2">
<code>mysqlx_ssl_key</code></td></tr>
<tr><td><span><strong>Контекст переменной</strong></span></td>
<td colspan="2">Глобальная</td></tr>
<tr><td><span><strong>Динамическая переменная</strong></span></td>
<td colspan="2">Нет</td></tr>
<tr><td><span><strong>Разрешенные значения</strong></span></td>
<td><span><strong>Тип</strong></span></td><td colspan="2">
<code>file name</code></td></tr></tbody></table>
<p>Эквивалент <a href="server.htm#sysvar_ssl_cert"><code>ssl_cert</code></a>
для X Plugin, см. ту переменную для получения дополнительной информации.</li>

<li><a name="option_mysqld_mysqlx_ssl_cipher"></a>
<a href="#option_mysqld_mysqlx_ssl_cipher"><code>
--mysqlx_ssl_cipher[=<em><code>value</code></em>]</code></a></p>

<table border="1">
<tbody><tr><td><span><strong>Формат командной строки</strong></span></td>
<td colspan="3"><code>--mysqlx_ssl_cipher=name</code></td></tr>
<tr><td><span><strong>Разрешенные значения</strong></span></td>
<td><span><strong>Тип</strong></span></td><td colspan="2">
<code>string</code></td></tr></tbody></table>

<p>Эквивалент <a href="server.htm#sysvar_ssl_cipher"><code>ssl_cipher</code>
</a> для X Plugin, см. ту переменную для получения дополнительной информации.
</li>

<li><a name="option_mysqld_mysqlx_ssl_crl"></a>
<a href="#option_mysqld_mysqlx_ssl_crl"><code>
--mysqlx_ssl_crl[=<em><code>value</code></em>]</code></a></p>

<table border="1">
<tbody><tr><td><span><strong>Формат командной строки
</strong></span></td><td colspan="3"><code>--mysqlx_ssl_crl=file_name
</code></td></tr>
<tr><td rowspan="3"><span><strong>Системная переменная</strong></span></td>
<td><span><strong>Имя</strong></span></td><td colspan="2"><code>
mysqlx_ssl_crl</code></td></tr>
<tr><td><span><strong>Контекст переменной</strong></span></td>
<td colspan="2">Глобальная</td></tr>
<tr><td><span><strong>Динамическая переменная</strong></span></td>
<td colspan="2">Нет</td></tr>
<tr><td><span><strong>Разрешенные значения</strong></span></td>
<td><span><strong>Тип</strong></span></td><td colspan="2">
<code>file name</code></td></tr></tbody></table>
<p>Эквивалент <a href="server.htm#sysvar_ssl_crl"><code>ssl_crl</code></a>
for X Plugin, см. ту переменную для получения дополнительной информации.</li>

<li><a name="option_mysqld_mysqlx_ssl_crlpath"></a>
<a href="#option_mysqld_mysqlx_ssl_crlpath"><code>
--mysqlx_ssl_crlpath[=<em><code>value</code></em>]</code></a></p>

<table border="1">
<tbody><tr><td><span><strong>Формат командной строки</strong>
</span></td><td colspan="3"><code>--mysqlx_ssl_crlpath=directory_name</code>
</td></tr>
<tr><td rowspan="3"><span><strong>Системная переменная</strong></span></td>
<td><span><strong>Имя</strong></span></td><td colspan="2"><code>
mysqlx_ssl_crlpath</code></td></tr>
<tr><td><span><strong>Контекст переменной</strong></span></td>
<td colspan="2">Глобальная</td></tr>
<tr><td><span><strong>Динамическая переменная</strong></span></td>
<td colspan="2">Нет</td></tr>
<tr><td><span><strong>Разрешенные значения</strong></span></td>
<td><span><strong>Тип</strong></span></td><td colspan="2">
<code>directory name</code></td></tr></tbody></table>

<p>Эквивалент <a href="server.htm#sysvar_ssl_crlpath"><code>ssl_crlpath
</code></a> для X Plugin, см. ту переменную для
получения дополнительной информации.</li>

<li><a name="option_mysqld_mysqlx_ssl_key"></a>
<a href="#option_mysqld_mysqlx_ssl_key">
<code>--mysqlx_ssl_key[=<em><code>value</code></em>]</code></a></p>

<table border="1">
<tbody><tr><td><span><strong>Формат командной строки</strong></span></td>
<td colspan="3"><code>--mysqlx_ssl_key=file_name</code></td></tr>
<tr><td rowspan="3"><span><strong>Системная переменная</strong></span></td>
<td><span><strong>Имя</strong></span></td><td colspan="2"><code>
mysqlx_ssl_key</code></td></tr>
<tr><td><span><strong>Контекст переменной</strong></span></td>
<td colspan="2">Глобальная</td></tr>
<tr><td><span><strong>Динамическая переменная</strong></span></td>
<td colspan="2">Нет</td></tr>
<tr><td><span><strong>Разрешенные значения</strong></span></td>
<td><span><strong>Тип</strong></span></td><td colspan="2">
<code>file name</code></td></tr></tbody></table>

<p>Эквивалент <a href="server.htm#sysvar_ssl_key"><code>ssl_key</code></a>
для X Plugin, см. ту переменную для получения дополнительной информации.
</p></li></ul>

<h3><a name="x-plugin-system-monitoring"></a>3.7.3. Контроль X Plugin</h3>
<p>Этот раздел описывает, как контролировать X Plugin. Есть два доступных
метода контроля, используя таблицы исполнительной схемы
или переменные состояния.</p>

<h4><a name="x-plugin-monitoring-status-variables"></a>3.7.3.1.
Переменные состояния для X Plugin</h4>
<p>У переменных состояния есть следующие значения.</p>

<ul><li><p><a name="statvar_Mysqlx_bytes_sent"></a>
<a href="#statvar_Mysqlx_bytes_sent"><code>Mysqlx_bytes_sent</code>
</a></p>
<p>Сколько байтов послано через сеть.</li>

<li><a name="statvar_Mysqlx_bytes_received"></a>
<a href="#statvar_Mysqlx_bytes_received"><code>Mysqlx_bytes_received
</code></a></p>
<p>Сколько байтов получено через сеть.</li>

<li><a name="statvar_Mysqlx_stmt_execute_sql"></a>
<a href="#statvar_Mysqlx_stmt_execute_sql"><code>
Mysqlx_stmt_execute_sql</code></a></p>
<p>Число запросов StmtExecute, полученных для пространства имен SQL.</li>

<li><a name="statvar_Mysqlx_stmt_execute_xplugin"></a>
<a href="#statvar_Mysqlx_stmt_execute_xplugin"><code>
Mysqlx_stmt_execute_xplugin</code></a></p>
<p>Число запросов StmtExecute, полученных для пространства имен X Plugin.
</li>

<li><a name="statvar_Mysqlx_stmt_create_collection"></a>
<a href="#statvar_Mysqlx_stmt_create_collection"><code>
Mysqlx_stmt_create_collection</code></a></p>
<p>Число полученных запросов создания набора.</li>

<li><a name="statvar_Mysqlx_stmt_create_collection_index"></a>
<a href="#statvar_Mysqlx_stmt_create_collection_index"><code>
Mysqlx_stmt_create_collection_index</code></a></p>
<p>Число полученных запросов создания индекса набора.</li>

<li><a name="statvar_Mysqlx_stmt_drop_collection"></a>
<a href="#statvar_Mysqlx_stmt_drop_collection"><code>
Mysqlx_stmt_drop_collection</code></a></p>
<p>Число полученных запросов удаления набора.</li>

<li><a name="statvar_Mysqlx_stmt_drop_collection_index"></a>
<a href="#statvar_Mysqlx_stmt_drop_collection_index"><code>
Mysqlx_stmt_drop_collection_index</code></a></p>
<p>Число полученных запросов удаления индекса набора.</li>

<li><a name="statvar_Mysqlx_stmt_list_objects"></a>
<a href="#statvar_Mysqlx_stmt_list_objects"><code>
Mysqlx_stmt_list_objects</code></a></p>
<p>Число запросов списка объектов.</li>

<li><a name="statvar_Mysqlx_stmt_enable_notices"></a>
<a href="#statvar_Mysqlx_stmt_enable_notices"><code>
Mysqlx_stmt_enable_notices</code></a></p>
<p>Число полученных запросов включения уведомления.</li>

<li><a name="statvar_Mysqlx_stmt_disable_notices"></a>
<a href="#statvar_Mysqlx_stmt_disable_notices"><code>
Mysqlx_stmt_disable_notices</code></a></p>
<p>Число полученных запросов выключения уведомления.</li>

<li><a name="statvar_Mysqlx_stmt_list_notices"></a>
<a href="#statvar_Mysqlx_stmt_list_notices"><code>
Mysqlx_stmt_list_notices</code></a></p>
<p>Число полученных запросов списка уведомлений.</li>

<li><a name="statvar_Mysqlx_stmt_list_clients"></a>
<a href="#statvar_Mysqlx_stmt_list_clients"><code>
Mysqlx_stmt_list_clients</code></a></p>
<p>Число полученных запросов списка клиентов.</li>

<li><a name="statvar_Mysqlx_stmt_kill_client"></a>
<a href="#statvar_Mysqlx_stmt_kill_client"><code>
Mysqlx_stmt_kill_client</code></a></p>
<p>Число полученных запросов удаления клиентов.</li>

<li><a name="statvar_Mysqlx_stmt_ping"></a>
<a href="#statvar_Mysqlx_stmt_ping"><code>Mysqlx_stmt_ping</code>
</a></p>
<p>Число запросов ping.</li>

<li><a name="statvar_Mysqlx_crud_insert"></a>
<a href="#statvar_Mysqlx_crud_insert"><code>Mysqlx_crud_insert
</code></a></p>
<p>Число запросов вставки.</li>

<li><a name="statvar_Mysqlx_crud_update"></a>
<a href="#statvar_Mysqlx_crud_update"><code>Mysqlx_crud_update
</code></a></p>
<p>Число запросов обновления.</li>

<li><a name="statvar_Mysqlx_crud_delete"></a>
<a href="#statvar_Mysqlx_crud_delete"><code>Mysqlx_crud_delete
</code></a></p>
<p>Число запросов удаления.</li>

<li><a name="statvar_Mysqlx_crud_find"></a>
<a href="#statvar_Mysqlx_crud_find"><code>Mysqlx_crud_find</code>
</a></p>
<p>Число запросов поиска.</li>

<li><a name="statvar_Mysqlx_expect_open"></a>
<a href="#statvar_Mysqlx_expect_open"><code>Mysqlx_expect_open
</code></a></p>
<p>Число открытых блоков ожидания.</li>

<li><a name="statvar_Mysqlx_expect_close"></a>
<a href="#statvar_Mysqlx_expect_close"><code>Mysqlx_expect_close
</code></a></p>
<p>Число закрытых блоков ожидания.</li>

<li><a name="statvar_Mysqlx_rows_sent"></a>
<a href="#statvar_Mysqlx_rows_sent"><code>Mysqlx_rows_sent</code>
</a></p>
<p>Число строк, отосланных назад к клиентам.</li>

<li><a name="statvar_Mysqlx_notice_warning_sent"></a>
<a href="#statvar_Mysqlx_notice_warning_sent"><code>
Mysqlx_notice_warning_sent</code></a></p>
<p>Число предупреждений, отосланных клиентам.</li>

<li><a name="statvar_Mysqlx_notice_other_sent"></a>
<a href="#statvar_Mysqlx_notice_other_sent"><code>
Mysqlx_notice_other_sent</code></a></p>
<p>Число других типов уведомлений, отосланных клиентам.</li>

<li><a name="statvar_Mysqlx_ssl_cipher"></a>
<a href="#statvar_Mysqlx_ssl_cipher"><code>Mysqlx_ssl_cipher</code>
</a></p>
<p>Текущий шифр SSL (пусто для не-SSL соединений).</li>

<li><a name="statvar_Mysqlx_ssl_cipher_list"></a>
<a href="#statvar_Mysqlx_ssl_cipher_list"><code>
Mysqlx_ssl_cipher_list</code></a></p>
<p>Список возможных шифров SSL (пусто для не-SSL соединений).</li>

<li><a name="statvar_Mysqlx_ssl_verify_depth"></a>
<a href="#statvar_Mysqlx_ssl_verify_depth"><code>
Mysqlx_ssl_verify_depth</code></a></p>
<p>Глубина проверки сертификата для соединения SSL.</li>

<li><a name="statvar_Mysqlx_ssl_verify_mode"></a>
<a href="#statvar_Mysqlx_ssl_verify_mode"><code>
Mysqlx_ssl_verify_mode</code></a></p>
<p>Режим проверки сертификата для соединения SSL.</li>

<li><a name="statvar_Mysqlx_ssl_version"></a>
<a href="#statvar_Mysqlx_ssl_version"><code>
Mysqlx_ssl_version</code></a></p>
<p>Название протокола, используемого для соединения ssl.</li>

<li><a name="statvar_Mysqlx_sessions"></a>
<a href="#statvar_Mysqlx_sessions"><code>Mysqlx_sessions</code></a>
</p>
<p>Число сеансов, которые были открыты.</li>

<li><a name="statvar_Mysqlx_sessions_closed"></a>
<a href="#statvar_Mysqlx_sessions_closed"><code>
Mysqlx_sessions_closed</code></a></p>
<p>Число сеансов, которые были закрыты.</li>

<li><a name="statvar_Mysqlx_sessions_fatal_error"></a>
<a href="#statvar_Mysqlx_sessions_fatal_error"><code>
Mysqlx_sessions_fatal_error</code></a></p>
<p>Число сеансов, которые закрылись с фатальной ошибкой.</li>

<li><a name="statvar_Mysqlx_init_error"></a>
<a href="#statvar_Mysqlx_init_error"><code>Mysqlx_init_error</code>
</a></p>
<p>Число ошибок во время инициализации.</li>

<li><a name="statvar_Mysqlx_sessions_accepted"></a>
<a href="#statvar_Mysqlx_sessions_accepted"><code>
Mysqlx_sessions_accepted</code></a></p>
<p>Число попыток создания сеанса, которые были приняты.</li>

<li><a name="statvar_Mysqlx_sessions_rejected"></a>
<a href="#statvar_Mysqlx_sessions_rejected"><code>
Mysqlx_sessions_rejected</code></a></p>
<p>Число попыток создания сеанса, которые были отклонены.</li>

<li><a name="statvar_Mysqlx_sessions_killed"></a>
<a href="#statvar_Mysqlx_sessions_killed"><code>
Mysqlx_sessions_killed</code></a></p>
<p>Число сеансов, которые были уничтожены.</li>

<li><a name="statvar_Mysqlx_connections_closed"></a>
<a href="#statvar_Mysqlx_connections_closed"><code>
Mysqlx_connections_closed</code></a></p>
<p>Число соединений, которые были закрыты.</li>

<li><a name="statvar_Mysqlx_connections_accepted"></a>
<a href="#statvar_Mysqlx_connections_accepted"><code>
Mysqlx_connections_accepted</code></a></p>
<p>Число соединений, которые были приняты.</li>

<li><a name="statvar_Mysqlx_connections_rejected"></a>
<a href="#statvar_Mysqlx_connections_rejected"><code>
Mysqlx_connections_rejected</code></a></p>
<p>Число соединений, которые были отклонены.</li>

<li><a name="statvar_Mysqlx_connection_accept_errors"></a>
<a href="#statvar_Mysqlx_connection_accept_errors"><code>
Mysqlx_connection_accept_errors</code></a></p>
<p>Число соединений с ошибками связи.</li>

<li><a name="statvar_Mysqlx_connection_errors"></a>
<a href="#statvar_Mysqlx_connection_errors"><code>
Mysqlx_connection_errors</code></a></p>
<p>Число соединений, которые вызвали ошибки.</li>

<li><a name="statvar_Mysqlx_worker_threads"></a>
<a href="#statvar_Mysqlx_worker_threads"><code>
Mysqlx_worker_threads</code></a></p>
<p>Число доступных потоков.</li>

<li><a name="statvar_Mysqlx_worker_threads_active"></a>
<a href="#statvar_Mysqlx_worker_threads_active"><code>
Mysqlx_worker_threads_active</code></a></p>
<p>Число потоков, используемых сейчас.</li>

<li><a name="statvar_Mysqlx_ssl_active"></a>
<a href="#statvar_Mysqlx_ssl_active"><code>Mysqlx_ssl_active</code>
</a></p>
<p>Если SSL активен.</li>

<li><a name="statvar_Mysqlx_ssl_ctx_verify_depth"></a>
<a href="#statvar_Mysqlx_ssl_ctx_verify_depth"><code>
Mysqlx_ssl_ctx_verify_depth</code></a></p>
<p>Глубина проверки сертификата в настоящее время ограничивается в ctx.</li>

<li><a name="statvar_Mysqlx_ssl_ctx_verify_mode"></a>
<a href="#statvar_Mysqlx_ssl_ctx_verify_mode"><code>
Mysqlx_ssl_ctx_verify_mode</code></a></p>
<p>Режим проверки сертификата в настоящее время ограничивается в ctx.</li>

<li><a name="statvar_Mysqlx_ssl_finished_accepts"></a>
<a href="#statvar_Mysqlx_ssl_finished_accepts"><code>
Mysqlx_ssl_finished_accepts</code></a></p>
<p>Число успешных соединений SSL с сервером.</li>

<li><a name="statvar_Mysqlx_ssl_accepts"></a>
<a href="#statvar_Mysqlx_ssl_accepts"><code>
Mysqlx_ssl_accepts</code></a></p>
<p>Число принятых соединений SSL.</li>

<li><a name="statvar_Mysqlx_ssl_server_not_after"></a>
<a href="#statvar_Mysqlx_ssl_server_not_after"><code>
Mysqlx_ssl_server_not_after</code></a></p>
<p>Последняя дата, для которой сертификат SSL допустим.</li>

<li><a name="statvar_Mysqlx_ssl_server_not_before"></a>
<a href="#statvar_Mysqlx_ssl_server_not_before"><code>
Mysqlx_ssl_server_not_before</code></a></p>
<p>Первая дата, для которой сертификат SSL допустим.</li>

<li><a name="statvar_Mysqlx_ssl_accept_renegotiates"></a>
<a href="#statvar_Mysqlx_ssl_accept_renegotiates"><code>
Mysqlx_ssl_accept_renegotiates</code></a></p>
<p>Число переговоров нужных, чтобы установить соединение.</li>

<li><a name="statvar_Mysqlx_errors_sent"></a>
<a href="#statvar_Mysqlx_errors_sent"><code>Mysqlx_errors_sent
</code></a></p>
<p>Число ошибок, посланных клиентам.</p></li></ul>

<h2><a name="mysql-shell"></a>3.8. Руководство пользователя MySQL Shell</h2>
<p>Этот раздел предоставляет пользовательскую документацию MySQL Shell,
которая позволяет Вам создать прототип приложения, используя X DevAPI, чтобы
общаться с сервером MySQL, выполняющим X Plugin.</p>

<p>MySQL Shell является усовершенствованным клиентом командной строки и
редактором кода для сервера MySQL. В дополнение к SQL MySQL Shell также
предлагает разработку скриптов на JavaScript и Python. Когда MySQL Shell
соединен с Сервером MySQL через X Protocol, X DevAPI может использоваться,
чтобы работать с реляционными данными и с данными о документе.</p>

<h3><a name="mysql-shell-features"></a>3.8.1. Особенности MySQL Shell</h3>
<p>Следующие особенности доступны в MySQL Shell.</p>
<h4><a name="idm139965420722176"></a>Интерактивное выполнение кода</h4>
<p>MySQL Shell обеспечивает интерактивный режим выполнения кода, где Вы
вводите код в ответ на подсказку MySQL Shell в диалоговом режиме.</p>

<h4><a name="idm139965420720736"></a>Поддерживаемые языки</h4>
<p>MySQL Shell обрабатывает код на следующих языках: JavaScript, Питон и SQL.
Любой введенный код обработан как один из этих языков, основываясь на языке,
который является в настоящее время активным. Есть также определенные команды,
которые обработаны, как <span><span>команды оболочки</span></span>, которые
позволяют Вам сконфигурировать MySQL Shell или получить информацию. Для
получения дополнительной информации см.
<a href="#mysql-shell-commands">раздел 3.8.4.1</a>.</p>

<h4><a name="idm139965420717920"></a>Пакетное выполнение кода</h4>
<p>В дополнение к интерактивному выполнению кода MySQL Shell может также
взять код из различных источников и обработать это. Этот метод обработки кода
неинтерактивным способом называют <span><em>Пакетным выполнением</em></span>.
</p>

<p>Поскольку пакетный режим выполнения предназначен для обработки скрипта
единственного языка, это ограничено наличием минимального
неотформатированного вывода и отключением выполнения команд. Чтобы избежать
этих ограничений, используйте опцию командной строки
<a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_interactive"
target="_top"><code>--interactive</code></a>, которая говорит MySQL Shell
выполнить ввод, как будто это был интерактивный сеанс. В этом режиме ввод
обработан построчно, как если бы каждая строка была введена в интерактивном
сеансе. Для получения дополнительной информации см.
<a href="#mysql-shell-batch-mode-interactive">раздел 3.8.3.5</a>.
</p>

<h4><a name="idm139965420712912"></a>Выходные форматы</h4>
<p>MySQL Shellобеспечивает вывод в различных форматах в зависимости от того,
как используется: разделенный табуляциями, табличный и JSON.</p>

<h4><a name="idm139965420710688"></a>Поддержка множественных строк</h4>
<p>Код из множественных строк может быть написан, используя команду,
позволяющую MySQL Shell кэшировать много строк и затем выполнить их как
единственный запрос. Для получения дополнительной информации см.
<a href="#mysql-shell-multiple-line-support">раздел 3.8.3.5.1</a>.
</p>

<h4><a name="idm139965420708416"></a>Сохраненные сеансы</h4>
<p>MySQL Shell поддерживает список данных о соединении для различных
серверов. Вы можете соединиться с сервером, используя эти сохраненные сеансы.
Список сохраненных сеансов может быть отредактирован. См.
<a href="#mysql-shell-stored-sessions">раздел 3.8.5</a>.</p>

<h4><a name="idm139965420706160"></a>Журнал приложения</h4>
<p>MySQL Shell может быть сконфигурирован, чтобы зарегистрировать информацию
о процессе выполнения. Для получения дополнительной информации см.
<a href="#mysql-shell-application-log">раздел 3.8.6</a>.</p>

<h4><a name="idm139965420703904"></a>X DevAPI</h4>
<p>Код, написанный в MySQL Shell использует X DevAPI и обрабатывается на
Python или JavaScript.</p>

<h4><a name="idm139965420701056"></a>Поддержка X Protocol</h4>
<p>MySQL Shell разработан, чтобы предоставить интегрированный клиент
командной строки для всех продуктов MySQL, которые поддерживают X Protocol.
Особенности развития MySQL Shell разработаны для сеансов, используя
X Protocol. MySQL Shell может также соединиться с серверами MySQL, которые не
поддерживают X Protocol, используя старый протокол MySQL. Минимальный набор
особенностей X DevAPI доступен для сеансов, создаваемых,
используя протокол MySQL.</p>

<h4><a name="idm139965420698640"></a>Глобальный сеанс</h4>
<p>Взаимодействие с Сервером MySQL сделано через объект сеанса. Для Питон и
JavaScript, сеанс может быть создан через функции
<code>getSession</code> и <code>getNodeSession</code> модуля mysqlx. Если
сеанс создается в режиме JavaScript, используя какой-либо из этих методов,
это доступно только в режиме JavaScript. То же самое происходит, если сеанс
создается в режиме Питона. Ни один из этих сеансов не может
использоваться в режиме SQL.</p>

<p>Для режима SQL понятие глобального сеанса поддержано MySQL Shell.
Глобальный сеанс создается, когда информацию о соединении передают MySQL
Shell, используя параметры командной строки или при
использовании команды <code>\connect</code>.</p>

<p>Глобальный сеанс используется, чтобы выполнить запросы в режиме SQL, и тот
же самый сеанс доступен в режимах Питона или JavaScript. Когда глобальный
сеанс создается, переменная <code>session</code> установлен в языках
скриптов, таким образом, Вы можете выполнить код на различных языках,
переключая активный режим. Для получения дополнительной информации, см.
<a href="#mysql-shell-sessions">раздел 3.8.2.1</a>.</p>

<h3><a name="mysql-shell-getting-started"></a>3.8.2. Работа с MySQL Shell
</h3>
<p>Этот раздел описывает, как начать работать с MySQL Shell. Этот раздел
предполагает, что у Вас есть сервер MySQL, выполняющий X Plugin и что Вы
установили MySQL Shell, см.
<a href="#document-store-setting-up">раздел 3.3</a>.</p>

<h4><a name="mysql-shell-sessions"></a>3.8.2.1. Сеансы MySQL Shell</h4>
<p>Этот раздел объясняет различные типы сеансов в MySQL Shell, как
создать и сконфигурировать их.</p>

<h5><a name="mysql-shell-sessions-introduction"></a>3.8.2.1.1.
Объяснение сеансов MySQL Shell</h5>
<p>MySQL Shell является объединенным интерфейсом, чтобы управлять сервером
MySQL посредством языков скриптов, таких как JavaScript или Питон. Чтобы
поддержать совместимость с предыдущими версиями, SQL может также быть
выполнен в определенных режимах. Соединение с сервером MySQL требуется. В
MySQL Shell эти соединения обработаны объектом <span><em>сеанса</em></span>.
</p>

<p>Следующие различные типы объектов сеанса доступны:</p>
<ul><li><p><span><em>XSession</em></span>: Используйте этот тип сеанса для
новой разработки приложений. Это предлагает лучшую интеграцию с cервером
MySQL и поэтому используется по умолчанию. Выполнение SQL не поддерживается,
поэтому это не совместимо с MySQL Shell в <span><em>режиме SQL</em></span>.
</li>

<li><span><em>Node Session</em></span>: Используйте этот тип сеанса для
выполнения SQL на сервере MySQL с X Protocol. Выполнение SQL доступно
с этим типом сеанса, поэтому это может использоваться в
<span><em>режиме SQL</em></span> MySQL Shell.</p>

<p>Этот тип сеанса должен использоваться только, когда соединение <span><em>
непосредственно</em></span> с MySQL сервером с поддержкой X Protocol.</li>
<li><span><em>Classic Session</em></span>: Используйте этот тип сеанса,
чтобы взаимодействовать с серверами MySQL, у которых нет X Protocol.
Выполнение SQL доступно с этим типом сеанса, поэтому это может использоваться
в <span><em>режиме SQL</em></span> MySQL Shell.</p>

<p>API разработки, доступный для этого типа сеанса, очень ограничен.
Например, нет никаких операций CRUD, никакой обработки наборов и
привязка не поддерживается.</p></li></ul>

<h5><a name="mysql-shell-choose-session-type"></a>3.8.2.1.2.
Выбор типа сеанса MySQL Shell</h5>
<p>MySQL Shell создает объект XSession по умолчанию. Чтобы выбрать, какой тип
сеанса должен быть создан, используйте одну из этих опций:</p>

<ul><li><p>
<a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_node"
target="_top"><code>--node</code></a> создает Node Session.</li>
<li><a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_classic"
target="_top"><code>--classic</code></a> создает Classic Session.</li>
<li>
<a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_x"
target="_top"><code>--x</code></a> создает XSession.</p></li></ul>

<h4><a name="mysql-shell-connections"></a>3.8.2.2. Соединения MySQL Shell
</h4>
<p>MySQL Shell может быть сконфигурирован, чтобы соединиться с сервером
MySQL, выполняющим X Plugin, используя параметры командной строки при запуске
или непосредственно в MySQL Shell. Адрес сервера MySQL может быть определен,
используя отдельные параметры, такие как пользователь, имя хоста и порт, или
используя Uniform Resource Identifier (URI) в формате
<code>user@host:port/schema</code>, например, <code>
mike@myserver:33060/testDB</code>. Следующие разделы описывают эти методы.
</p>

<p>Независимо от метода, которым Вы хотите соединиться, важно понять, как
пароли будут обработаны MySQL Shell.</p>
<p>По умолчанию соединение требует пароля. Пароль требуется при приглашении
ко входу в систему. Чтобы определить учетную запись без пароля, используют
опцию <a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_password"
target="_top"><code>--password</code></a> или <code>:</code>
после <code>user</code> в URI.</p>

<p>Если Вы не определяете параметры для соединения, следующие значения
по умолчанию используются:</p>
<ul><li><p>Имя пользователя текущей системы.</li>
<li>Имя хоста localhost.</li>
<li>port по умолчанию 33060 для X Session или 3306 для Classic session.
</p></li></ul>

<p>MySQL Shell соединения, используя X Protocol
<span><em>всегда</em></span> применяют TCP, использование Linux sockets не
поддерживается. MySQL Shell соединения, использующие протокол MySQL,
могут использовать Linux sockets с помощью опции
<a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_socket"
target="_top"><code>--socket</code></a>.</p>

<h5><a name="mysql-shell-connection-using-uri"></a>3.8.2.2.1.
Соединение с помощью строки URI</h5>
<p>Вы конфигурируете сервер MySQL, с которым соединяется MySQL Shell,
передавая данные о соединении в строковом формате, используя опцию
<a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_uri"
target="_top"><code>--uri</code></a>.</p>

<p>Используйте следующий формат:
<pre>
[<em><code>dbuser</code></em>[:[<em><code>dbpassword</code></em>]]@]<em><code>host</code></em>[:<em><code>port</code></em>][/<em><code>schema</code></em>]
</pre>
Описание этих опций:</p>

<ul><li><p><em><code>dbuser</code></em>: определяет учетную запись
пользователя MySQL, которая будет использоваться для процесса аутентификации.
</li>
<li><em><code>dbpassword</code></em>: определяет пароль dbuser, который будет
использоваться для процесса аутентификации. Хранение пароля в
URI не рекомендуется.</p>

</li><li><p><em><code>host</code></em>: определяет хост, с которым
соединяется объект сеанса. Если не определен,
по умолчанию использутеся <span><em>localhost</em></span>.</li>

<li><em><code>port</code></em>: определяет порт. Если не определен, 33060
используется по умолчанию для X Protocol и 3306 для обычного MySQL.</li>
<li><em><code>schema</code></em>: указывает на базу данных, которая будет
установлена по умолчанию, когда сеанс установлен.</p></li></ul>

<p>Если никакой пароль не определен, используя URI, то пароль запрошен.
Следующие примеры показывают, как использовать эти
параметры командной строки:</p>

<ul><li><p>Соединитесь с Node Session на порту 33065.
<pre>
shell&gt; <strong><code>mysqlsh --uri <em><code>user</code></em>@localhost:33065 --node</code></strong>
</pre></li><li><p>

Соединитесь с Classic Session.
<pre>
shell&gt; <strong><code>mysqlsh --uri <em><code>user</code></em>@localhost --classic</code></strong>
</pre></li></ul>

<p>Хотя использование учетной записи без пароля не рекомендуется, Вы можете
определить пользователя без пароля, используя <em><code>:</code></em> после
имени пользователя, например:
<pre>
shell&gt; <strong><code>mysqlsh --uri <em><code>user</code></em>:@localhost</code></strong>
</pre>
В дополнение к определению URI вручную, Вы можете использовать сохраненный
сеанс. См. <a href="#mysql-shell-stored-sessions">раздел 3.8.5</a>.
</p>

<h5><a name="mysql-shell-connection-using-parameters"></a>3.8.2.2.2.
Соединение, используя отдельные параметры</h5>
<p>В дополнение к определению параметров соединения, используя URI, также
возможно определить данные о соединении, используя отдельные параметры
для каждого значения.</p>

<p>Используйте следующие параметры:</p>
<ul><li><p>
<a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_dbuser"
target="_top"><code>--dbuser</code></a>
(<code>-u</code>) <em><code>значение</code></em></li>

<li>
<a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_dbpassword"
target="_top"><code>--dbpassword</code></a>
<em><code>значение</code></em></li>

<li>
<a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_host"
target="_top"><code>--host</code></a> (<code>-h</code>)
<em><code>значение</code></em></li>

<li>
<a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_port"
target="_top"><code>--port</code></a> (<code>-P</code>)
<em><code>значение</code></em></li>

<li>
<a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_schema"
target="_top"><code>--schema</code></a>
(<code>-D</code>) <em><code>значение</code></em></li>

<li>
<a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_session-type"
target="_top"><code>--session-type</code></a>
<em><code>значение</code></em>. Удалено в версии 1.0.4.</li>

<li>
<a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_password"
target="_top"><code>--password</code></a>
(<code>-p</code>)</p></li></ul>

<p>Первые 5 параметров соответствуют маркерам, используемым в формате URI,
описанном в <a href="#mysql-shell-connection-using-uri">разделе
3.8.2.2.1</a>.</p>

<p>Параметр
<a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_password"
target="_top"><code>--password</code></a> указывает, что пользователь должен
соединиться <span><em>без</em></span> пароля.</p>

<p>Для совместимости следующие псевдонимы поддержаны для некоторых параметров:
</p>
<ul><li><p>
<a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_user" target="_top"><code>--user</code></a>
эквивалентен <a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_dbuser"
target="_top"><code>--dbuser</code></a>.</li>

<li><a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_password" target="_top"><code>--password</code></a>
эквивалентен <a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_dbpassword"
target="_top"><code>--dbpassword</code></a>.</li>

<li><a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_database" target="_top"><code>--database</code></a>
эквивалентен <a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_schema"
target="_top"><code>--schema</code></a>.</li></ul>

<p>Установить XSession с указанным пользователем на порту 33065:
<pre>
shell&gt; <strong><code>mysqlsh -u <em><code>user</code></em> -h localhost -P 33065</code></strong>
</pre>

Установить Classic Session с указанным пользователем:
<pre>
shell&gt; <strong><code>mysqlsh -u <em><code>user</code></em> -h localhost --classic</code></strong>
</pre>

Установить Node Session с указанным пользователем:
<pre>
shell&gt; <strong><code>mysqlsh --node -u <em><code>user</code></em> -h localhost</code></strong>
</pre>

<h5><a name="mysql-shell-ssl-connections"></a>3.8.2.2.3.
Применение SSL для безопасных соединений</h5>
<p>Использование SSL возможно, когда соединение по SSL включено на сервере
MySQL. Чтобы сконфигурировать соединение SSL, используйте следующие
параметры командной строки:</p>

<ul><li><p><code>--ssl</code>: Это включает или отключает соединения через
SSL. Если установлено в 0, другие параметры командной строки, относящиеся к
SSL будут проигнорированы.</li>

<li><code>--ssl-ca=<em><code>filename</code></em></code>: Путь к файлу в
формате PEM, который содержит список центров сертификации
SSL, которым доверяют.</li>

<li><code>--ssl-cert=<em><code>filename</code></em></code>:
Имя файла сертификата SSL в формате PEM, чтобы использовать для
создания безопасного соединения.</li>

<li><code>--ssl-key=<em><code>filename</code></em></code>:
Название файла ключа SSL в формате PEM, чтобы использовать для
создания безопасного соединения.</li></ul>
<p>Опция <code>--ssl</code>, как предполагается, 1 (включено), если другие
опции SSL установлены.</p>

<h5><a name="mysql-shell-mixing-uri-and-parameters"></a>3.8.2.2.4.
Соединение, использующее URI и отдельные параметры</h5>
<p>Когда опция <a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_uri"
target="_top"><code>--uri</code></a> определена в комбинации с некоторыми из
отдельных параметров, адрес, определенный опцией
<a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_uri"
target="_top"><code>--uri</code></a>, используется в качестве основных данных
о соединении, а значения, обеспеченные, используя отдельные параметры,
переопределяют соответствующее значение из URI. Если использована опция
<a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_user"
target="_top"><code>--user</code></a>, она заменяет любого пользователя,
определенного как часть URI.</p>

<p>Например, чтобы установить XSession и переопределить
<em><code>user</code></em> из URI можно так:
<pre>
shell&gt; <strong><code>mysqlsh --uri <em><code>user</code></em>@localhost:33065 --user <em><code>otheruser</code></em></code></strong>
</pre>

<h5><a name="mysql-shell-create-session-using-shell"></a>3.8.2.2.5.
Создание сеанса используя команды Shell</h5>
<p>Если Вы открываете MySQL Shell, не определяя параметры соединения, MySQL
Shell открывается без установленного глобального сеанса. Возможно установить
глобальный сеанс после запуска MySQL Shell, используя
следующие <span><em>команды Shell</em></span>:</p>

<ul><li><p><code>\connect URI</code>: Создает XSession.</li>
<li><code>\connect -n URI</code>: Создает Node Session.</li>
<li><code>\connect -c URI</code>: Создает Classic Session.</p></li></ul>

<p>Сконфигурируйте соединение, используя параметр URI, который следует тому
же синтаксису, что касается параметра командной строки
<a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_uri"
target="_top"><code>--uri</code></a>. Для дополнительной информации см.
<a href="#mysql-shell-connection-using-uri">раздел 3.8.2.2.1</a>.
</p>

<p>Например:
<pre>
mysql-js&gt; <strong><code>\connect root@localhost</code></strong>
Creating XSession to root@localhost...
Enter password: ****
No default schema selected.
mysql-js&gt;
</pre>

<h6><a name="mysql-shell-using-ssl-connections"></a>3.8.2.2.5.1.
Создание безопасного сеанса используя SSL</h6>
<p>Чтобы установить соединение SSL, параметр URI, который передают командам
оболочки, должен включать информацию SSL как параметры URL. Например:
<pre>
mysql-js&gt; <strong><code>\connect root@localhost?ssl_ca=/path/to/ca/file&amp;\
ssl_cert=/path/to/cert/file&amp;ssl_key=/path/to/key/file</code></strong>
Creating XSession to root@localhost...
Enter password: ****
No default schema selected.
mysql-js&gt;
</pre>

<h5><a name="mysql-connections-in-javascript-and-python"></a>3.8.2.2.6.
Соединения в JavaScript и Питон</h5>
<p>Когда соединение сделано, используя параметры командной строки или при
использовании любой из команд оболочки, глобальный объект сеанса создается.
Этот сеанс глобален, потому что когда-то созданный, он может использоваться в
любом из режимов выполнения MySQL Shell.</p>

<p>Любой глобальный объект сеанса доступен в режимах JavaScript или Питона,
потому что переменная <span><strong>session</strong></span> хранит
ссылку на него.</p>

<p>В режиме SQL могут использоваться сеансы Node и Classic, потому что они
оба поддерживают выполнение SQL. В режиме SQL не может
использоваться только XSession.</p>

<p>В дополнение к глобальному объекту сеансы могут быть установлены и
назначены различным переменным при использовании функций, доступных в модулях
mysql и mysqlx JavaScript и Питона.</p>

<p>Например, следующие функции обеспечены этими модулями:</p>
<ul><li><p><span><strong>mysql.getSession(connectionData[,password])
</strong></span></li>

<li><span><strong>mysqlx.getNodeSession(connectionData[,password])
</strong></span></li>
<li><span><strong>mysql.getClassicSession(connectionData[,password])
</strong></span></p></li></ul>

<p>Первая из этих функций используется, чтобы создать XSession. Второе
Node Session, которая соединяется с X Protocol и позволяет выполнение SQL.
Последняя возвращает объект Classic Session, который использует традиционный
протокол MySQL и имеет очень ограниченный API.</p>

<p><span><em>connectionData</em></span> может быть URI, как определено выше,
или набор параметров соединения. См.
<a href="#mysql-shell-connection-using-uri">раздел 3.8.2.2.1</a>.
</p>

<p>Следующий пример показывает, как создать Node Session с X Protocol:
<pre>
mysql-js&gt; <strong><code>var mysqlx=require('mysqlx').mysqlx;</code></strong>
mysql-js&gt; <strong><code>var session=mysqlx.getNodeSession('root@localhost');</code></strong>
mysql-js&gt; <strong><code>print(session)</code></strong>
&lt;NodeSession:root@localhost&gt;
mysql-js&gt;
</pre>

Следующий пример показывает, как создать Node Session с X Protocol
так, чтобы Вы могли выполнить SQL:
<pre>
mysql-js&gt; <strong><code>var mysqlx=require('mysqlx').mysqlx;</code></strong>
mysql-js&gt; var session=mysqlx.getNodeSession({host: 'localhost', dbUser: 'root'});
mysql-js&gt; <strong><code>print(session)</code></strong>
&lt;NodeSession:root@localhost&gt;
mysql-js&gt;
</pre>

Следующий пример показывает, как создать Classic Session:
<pre>
mysql-js&gt; <strong><code>var mysql=require('mysql').mysql;</code></strong>
mysql-js&gt; <strong><code>var session = mysql.getClassicSession('root@localhost:3307');</code></strong>
mysql-js&gt; <strong><code>print(session)</code></strong>
&lt;ClassicSession:root@localhost:3307&gt;
mysql-js&gt;
</pre>

<h6><a name="mysql-shell-using-ssl-connection-data"></a>3.8.2.2.6.1.
SSL для безопасных соединений</h6>
<p>Чтобы установить соединение SSL, установите информацию
SSL в connectionData. Например:
<pre>
mysql-js&gt; <strong><code>var mysqlx=require('mysqlx').mysqlx;</code></strong>
mysql-js&gt; <strong><code>var session=mysqlx.getNodeSession({host: 'localhost',
  dbUser: 'root',
  dbPassword: 'mypasswd',
  ssl_ca: "path_to_ca_file",
  ssl_cert: "path_to_cert_file",
  ssl_key: "path_to_key_file"});</code></strong>
mysql-js&gt; <strong><code>print(session)</code></strong>
&lt;NodeSession:root@localhost&gt;
mysql-js&gt;
</pre>

<h5><a name="mysql-shell-global-variables"></a>3.8.2.2.7.
Глобальные переменные MySQL Shell</h5>
<p>MySQL Shell резервирует определенные переменные как глобальные, которые
назначены обычно используемым объектам в скриптах. Этот раздел описывает
доступные глобальные переменные и обеспечивает примеры работы с
ними. Глобальные переменные:</p>

<ul><li><p><code>session</code> представляет глобальный сеанс, если
он был установлен.</li>
<li><code>db</code> представляет схему, если она была определена,
например, через URI.</p></li></ul>

<p>MySQL Shell обеспечивает интерактивную расшифровку ошибок для общих
ситуаций, связанных с использованием глобальных переменных. Например:</p>
<ul><li><p>Попытка использовать неопределенную
глобальную переменную <code>session</code>.</li>

<li>Попытка получить несуществующую схему через <code>session</code>.</li>
<li>Попытка использовать неопределенную глобальную переменную
<code>db</code>.</p></li></ul>

<h6><a name="mysql-shell-undefined-global-session"></a>
Неопределенный глобальный сеанс</h6>
<p>Глобальная переменная <code>session</code> установлена, когда глобальный
сеанс установлен. Когда глобальный сеанс установлен, запрос
<code>session</code> в MySQL Shell выводит на экран тип сеанса и его URI:
<pre>
mysql-js&gt; session
&lt;XSession:root@localhost:33060&gt;
mysql-js&gt;
</pre>

Если никакой глобальный сеанс не был установлен, MySQL Shell выводит
на экран следующее:
<pre>
mysql-js&gt; session
&lt;Undefined&gt;
mysql-js&gt;
</pre>

Если Вы пытаетесь использовать переменную <code>session</code>, когда никакой
глобальный сеанс не установлен, происходит ошибка, и будет запрошена
информация для его создания. Если сеанс успешно установлен, он назначен
переменной <code>session</code>. Надо иметь в виду, что:</p>

<ul><li><p>Начальная подсказка объясняет, что никакой глобальный сеанс не
установлен и спрашивает, нужно ли его создать.</li>
<li>Если Вы хотите установить глобальный сеанс, запрашивается тип сеанса.
</li>
<li>URI или псевдоним сохраненного сеанса требуется.</li>
<li>Запрашивается пароль, если он нужен.</p></li></ul>

<p>Например:
<pre>
mysql-js&gt; session.uri
The global session is not set, do you want to establish a session? [y/N]: y
Please specify the session type:

1) X
2) Node
3) Classic

Type: 2
Please specify the MySQL server URI (or $slias): root@localhost
Enter password:*******
root@localhost:33060
mysql-js&gt;
</pre>

<h6><a name="mysql-shell-undefined-db-variable"></a>
Неопределенная переменная db</h6>
<p>Глобальная переменная <code>db</code> установлена, когда глобальный сеанс
установлен, и схема значения по умолчанию сконфигурирована. Например,
используя URI как <code>root@localhost/sakila</code> устанавливается
глобальный сеанс с сервером MySQL на <code>localhost</code>, порт 33060,
пользователь <code>root</code>, схема <code>sakila</code> к глобальной
переменной <code>db</code>. Как только схема определена,
<code>db</code> в подсказке MySQL Shell печатает имя схемы следующим образом:
<pre>
mysql-js&gt; db
&lt;Schema:world_x&gt;
mysql-js&gt;
</pre>

Если нет никакого глобального установленного сеанса, следующее
выведено на экран:
<pre>
mysql-js&gt; db
&lt;Undefined&gt;
mysql-js&gt;
</pre>

Если Вы пытаетесь использовать переменную <code>db</code>, когда никакой
глобальный сеанс не был установлен, следующая ошибка выведена на экран:
<pre>
mysql-js&gt; db.getCollections()
LogicError: The db variable is not set, establish a global session first.
at (shell):1:2
in db.getCollections()
^
</pre>

Если глобальный сеанс был установлен, но Вы пытаетесь использовать
неопределенную <code>db</code>, Вы будете запрошены относительно определения
активной схемы, обеспечивая имя этой схемы. Если это получается, переменная
<code>db</code> будет установлена в определенную схему. Например:
<pre>
mysql-js&gt; db.getCollections()
The db variable is not set, do you want to set the active schema? [y/N]:y
Please specify the schema:world_x
[
&lt;Collection:countryinfo&gt;
]
mysql-js&gt; db
&lt;Schema:world_x&gt;
mysql-js&gt;
</pre>

<h6><a name="mysql-shell-retrieving-a-nonexistent-schema"></a>
Получение несуществующей схемы</h6>
<p>Если Вы пытаетесь использовать <code>session</code> чтобы получить
несуществующую схему, предоставляется возможность создать схему:
<pre>
mysql-js&gt; var mySchema = session.getSchema('my_test')
The schema my_test does not exist, do you want to create it? [y/N]: y

mysql-js&gt; mySchema
&lt;Schema:my_test&gt;
mysql-js&gt;
</pre>

Во всех случаях, если Вы не предоставляете информацию, запрошенную, чтобы
решить каждую проблему, на экран выведен надлежащий результат выполнения
требуемого запроса о неопределенной переменной.</p>

<h3><a name="mysql-shell-code-execution"></a>3.8.3.
Выполнение кода в MySQL Shell</h3>
<p>Этот раздел объясняет, как выполнение кода работает в MySQL Shell.</p>

<h4><a name="mysql-shell-interactive-code-execution"></a>3.8.3.1.
Интерактивное выполнение кода</h4>
<p>Режим по умолчанию MySQL Shell обеспечивает интерактивное выполнение
операций базы данных, которые Вы вводите в командной строке. Эти операции
могут быть написаны на JavaScript, Питоне или SQL в зависимости от типа
используемого сеанса. Когда задание выполнено, результаты работы
выведены на экран.</p>

<p>Как с любым другим языком, MySQL Shell очень строг относительно
синтаксиса. Например, следующий отрывок JavaScript читает и
печатает документы в наборе:
<pre>
var mysqlx = require('mysqlx').mysqlx;
var mySession = mysqlx.getSession('user:pwd@localhost');
var result = mySession.world_x.countryinfo.find().execute();
var record = result.fetchOne();
while(record) {
  print(record);
  record = result.fetchOne();
}
</pre>

Как замечено выше, вызов <code>find()</code> сопровождается функцией
<code>execute()</code>. Команды базы данных CRUD фактически выполнены на
сервере MySQLтолько, когда вызван <code>execute()</code>. Однако, работая с
MySQL Shell в интерактивном режиме, <code>execute()</code> неявно вызван
всякий раз, когда Вы нажимаете <code>Return</code>. Тогда результаты работы
получены и выведены на экран. Правила для того, когда Вы должны вызвать
<code>execute()</code> сами, следующие:</p>

<ul><li><p>Используя MySQL Shell таким образом, вызов <code>execute()</code>
становится опциональным на:</p>
<ul><li><p><code>Collection.add()</code></li>
<li><code>Collection.find()</code></li>
<li><code>Collection.remove()</code></li>
<li><code>Collection.modify()</code></li>
<li><code>Table.insert()</code></li>
<li><code>Table.select()</code></li>
<li><code>Table.delete()</code></li>
<li><code>Table.update()</code></li>
<li><code>NodeSession.sql()</code></p></li></ul></li>

<li><p>Автоматическое выполнение отключено, если объект назначен переменной.
В таком запросе вызовите <code>execute()</code> принудительно,
чтобы выполнить работу.</li>

<li>Когда строка обработана, и функция возвращает любой из доступных объектов
<code>Result</code>, информация, содержавшаяся в объекте Result,
автоматически выведена на экран. Функции, которые возвращают
объект Result, включают:</p>

<ul><li><p>Выполнение SQL и операции CRUD (перечислены выше).</li>
<li>Операционная обработка и функции завершения сеансовых объектов в обоих
модулях, mysql и mysqlx:</p>

<ul><li><p><code>startTransaction()</code></li>
<li><code>commit()</code></li>
<li><code>rollback()</code></li>
<li><code>dropSchema()</code></li>
<li><code>dropTable()</code></li>
<li><code>dropCollection()</code></li>
<li><code>dropView()</code></li>
<li><code>ClassicSession.runSql()</code></p></li></ul></li></ul></li></ul>

<p>Исходя из вышеупомянутых правил, запросы, необходимые в MySQL Shell в
интерактивном режиме, чтобы установить сеанс, запросить и напечатать
документы в наборе, выглядят так:
<pre>
mysql-js&gt; <strong><code>var mysqlx = require('mysqlx').mysqlx;</code></strong>
mysql-js&gt; <strong><code>var mySession = mysqlx.getSession('user:pwd@localhost');</code></strong>
</pre>

Вызов <code>execute()</code> не нужен, объект Result автоматически напечатан.
<pre>
mysql-js&gt; <strong><code>mySession.world_x.countryinfo.find();</code></strong>
</pre>

<h4><a name="mysql-shell-batch-code-execution"></a>3.8.3.2.
Пакетное выполнение кода</h4>
<p>Так же, как интерактивное выполнение кода, MySQL Shell обеспечивает и
пакетное выполнение кода из:
<ul><li><p>Файл, загруженный для обработки.</li>
<li>Файл, содержащий код, который перенаправлен к стандартному
вводу для выполнения.</li>
<li>Код из другого источника, который перенаправлен к стандартному
вводу для выполнения.</p></li></ul>

<p>Например:</p>
<p>Загрузка SQL из файла для пакетной обработки данных.
<pre>
shell&gt; <strong><code>mysqlsh --file code.js</code></strong>
</pre>

Перенаправление файла к стандартному вводу для выполнения.
<pre>
shell&gt; <strong><code>mysqlsh &lt; code.js</code></strong>
</pre>

Перенаправление кода к стандартному вводу для выполнения.
<pre>
shell&gt; <strong><code>echo "show databases;" | mysqlsh --sql --uri root@192.168.1.141:33060</code></strong>
</pre>

<h5><a name="mysql-shell-executable-scripts"></a>Исполняемые скрипты</h5>
<p>Начиная с версии 1.0.4 в Linux Вы можете создать выполняемые скрипты,
которые выполняются с помощью MySQL Shell добавлением в первую строку
скрипта символа <code>#!</code>. Эта строка должна обеспечить весь путь к
MySQL Shell и включать опцию
<a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_file"
target="_top"><code>--file</code></a>, например так:
<pre>
#!/usr/local/mysql-shell/bin/mysqlsh --file
print("Hello World\n");
</pre>
Файл скрипта должен быть отмечен как выполняемый в файловой системе.
Выполнение скрипта вызывает MySQL Shell, и это выполняет содержание скрипта.
</p>

<h4><a name="mysql-shell-output-formats"></a>3.8.3.3. Выходные форматы</h4>
<p>Вывод команд, обработанных на сервере, может быть отформатирован
по-разному. Этот раздел детализирует различные доступные выходные форматы.
</p>

<h5><a name="mysql-shell-output-table-format"></a>3.8.3.3.1. Таблица</h5>
<p>Формат таблицы используется по умолчанию, когда MySQL Shell находится в
интерактивном режиме. Вывод представлен как отформатированная таблица для
лучшего представления и анализа.
<pre>
mysql-sql&gt; <strong><code>select * from sakila.actor limit 3;</code></strong>
+----------+------------+-----------+--------------------+
| actor_id | first_name | last_name | last_update        |
+----------+------------+-----------+--------------------+
|1         | PENELOPE   | GUINESS   | 2006-02-15 4:34:33 |
|2         | NICK       | WAHLBERG  | 2006-02-15 4:34:33 |
|3         | ED         | CHASE     | 2006-02-15 4:34:33 |
+----------+------------+-----------+--------------------+
3 rows in set (0.00 sec)

mysql-sql&gt;
</pre>
Чтобы получить этот выходной формат, работая в пакетном режиме, используйте
опцию <a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_table"
target="_top"><code>--table</code></a>.</p>

<h5><a name="mysql-shell-output-tab-format"></a>3.8.3.3.2.
Разделение табуляциями</h5>
<p>Этот формат используется по умолчанию MySQL Shell в пакетном режиме, чтобы
вывести данные для автоматизированного анализа.
<pre>
&gt;<strong><code>echo "select * from sakila.actor limit 3;" | mysqlsh --classic --uri root@192.168.1.141:33460</code></strong>
actor_idfirst_namelast_name last_update
1 PENELOPE GUINESS  2006-02-15 4:34:33
2 NICK     WAHLBERG 2006-02-15 4:34:33
3 ED       CHASE    2006-02-15 4:34:33
</pre>

<h5><a name="mysql-shell-json-output"></a>3.8.3.3.3. Формат вывода JSON</h5>
<p>MySQL Shell поддерживает формат JSON для вывода, это доступно в
интерактивном и в пакетном режиме. Этот выходной формат может быть включен,
используя опцию <a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_json"
target="_top"><code>--json</code></a>:
</p>

<p><span><strong>Формат JSON в пакетном режиме:</strong></span>
<pre>
shell&gt;<strong><code>echo "select * from sakila.actor limit 3;" | mysqlsh --json --sqlc --uri root@192.168.1.141:3306</code></strong>
{"duration":"0.00 sec","info":"","row_count":3,"rows":[[1,"PENELOPE","GUINESS",{"year":2006,"month":1,"day":15,"hour":4,"minute":34,"second":33.0}],[2,"NICK","WAHLBERG",{"year":2006,"month":1,"day":15,"hour":4,"minute":34,"second":33.0}],[3,"ED","CHASE",{"year":2006,"month":1,"day":15,"hour":4,"minute":34,"second":33.0}]],"warning_count":0}

shell&gt;<strong><code>echo "select * from sakila.actor limit 3;" | mysqlsh --json=raw --sqlc --uri root@192.168.1.141:3306</code></strong>
{"duration":"0.00 sec","info":"","row_count":3,"rows":[[1,"PENELOPE","GUINESS",{"year":2006,"month":1,"day":15,"hour":4,"minute":34,"second":33.0}],[2,"NICK","WAHLBERG",{"year":2006,"month":1,"day":15,"hour":4,"minute":34,"second":33.0}],[3,"ED","CHASE",{"year":2006,"month":1,"day":15,"hour":4,"minute":34,"second":33.0}]],"warning_count":0}

shell&gt;<strong><code>echo "select * from sakila.actor limit 3;" | mysqlsh --json=pretty --sqlc --uri root@192.168.1.141:3306</code></strong>
{"duration": "0.00 sec", "info": "", "row_count": 3,
 "rows": [
 [1, "PENELOPE", "GUINESS",
  {"year": 2006, "month": 1, "day": 15, "hour": 4, "minute": 34,
   "second": 33.0}
 ],
 [2, "NICK", "WAHLBERG",
  {"year": 2006, "month": 1, "day": 15, "hour": 4, "minute": 34,
   "second": 33.0}
 ],
 [3, "ED", "CHASE",
  {"year": 2006, "month": 1, "day": 15, "hour": 4, "minute": 34,
   "second": 33.0}
 ]], "warning_count": 0
}
shell&gt;
</pre>

<span><strong>Формат JSON в интерактивном режиме (запуск с --json=raw):
</strong></span>
<pre>
mysql-sql&gt; <strong><code>select * from sakila.actor limit 3;</code></strong>
{"duration":"0.00 sec","info":"","row_count":3,"rows":[[1,"PENELOPE","GUINESS",{"year":2006,"month":1,"day":15,"hour":4,"minute":34,"second":33.0}],[2,"NICK","WAHLBERG",{"year":2006,"month":1,"day":15,"hour":4,"minute":34,"second":33.0}],[3,"ED","CHASE",{"year":2006,"month":1,"day":15,"hour":4,"minute":34,"second":33.0}]],"warning_count":0}

mysql-sql&gt;
</pre>

<span><strong>Формат JSON в интерактивном режиме (запуск с --json=pretty)
</strong></span>
<pre>
mysql-sql&gt; <strong><code>select * from sakila.actor limit 3;</code></strong>
{"duration": "0.00 sec", "info": "", "row_count": 3,
 "rows": [
  [1, "PENELOPE", "GUINESS",
   {"year": 2006, "month": 1, "day": 15, "hour": 4, "minute": 34,
    "second": 33.0}
  ],
  [2, "NICK", "WAHLBERG",
   {"year": 2006, "month": 1, "day": 15, "hour": 4, "minute": 34,
    "second": 33.0}
  ],
  [3, "ED", "CHASE",
   {"year": 2006, "month": 1, "day": 15, "hour": 4, "minute": 34,
    "second": 33.0}
  ]
 ],"warning_count": 0
}
mysql-sql&gt;
</pre>

<h5><a name="mysql-shell-output-metadata"></a>3.8.3.3.4.
Метаданные о результате</h5>
<p>Когда работа выполнена, в дополнение к любым возвращенным результатам,
некоторая дополнительная информация доступна. Это включает информацию, такую
как число затронутых строк, предупреждений, продолжительности и так далее,
когда любое из этих условий истина:
<ul><li><p>Формат JSON используется для вывода.</li>
<li>MySQL Shell работает в интерактивном режиме.</p></li></ul>

<h4><a name="mysql-shell-active-language"></a>3.8.3.4. Активный язык</h4>
<p>MySQL Shell может выполнить код на SQL, JavaScript или Питон, но только
один язык может быть активным. Активный режим определяет, как именно
обработаны исполняемые команды:</p>

<ul><li><p>Используя режим SQL, запросы обработаны как SQL, что означает, что
их посылают на сервер MySQL для выполнения.</li>
<li>Используя режим JavaScript, запросы обработаны как JavaScript.</li>
<li>Используя режим Python, запросы обработаны как Python.</p></li></ul>

<p>Выполняя MySQL Shell в интерактивном режиме, активируйте определенный
язык, вводя команды: <code>\sql</code>, <code>\js</code>, <code>\py</code>.
</p>

<p>Выполняя MySQL Shell в пакетном режиме, активируйте определенный язык,
передавая любой из этих параметров командной строки:
<a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_js"
target="_top"><code>--js</code></a>,
<a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_py"
target="_top"><code>--py</code></a> или
<a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_sql"
target="_top"><code>--sql</code></a>. Режимом по умолчанию, если ни один не
определен, является JavaScript.</p>

<p>Используйте MySQL Shell, чтобы выполнить контент файла
<code>code.sql</code> как SQL:
<pre>
shell&gt; <strong><code>mysqlsh --sql &lt; code.sql</code></strong>
</pre>

<p>Используйте MySQL Shell, чтобы выполнить контент файла
<code>code.js</code> как JavaScript:
<pre>
shell&gt; <strong><code>mysqlsh &lt; code.js</code></strong>
</pre>

<p>Используйте MySQL Shell, чтобы выполнить контент файла
<code>code.py</code> как Python:
<pre>
shell&gt; <strong><code>mysqlsh --py &lt; code.py</code></strong>
</pre>

<h4><a name="mysql-shell-batch-mode-interactive"></a>3.8.3.5.
Как пакетный режим сделать интерактивным</h4>
<p>Этот раздел описывает выполнение кода в пакетном режиме.</p>
<ul><li><p>В пакетном режиме вся логика команд, описанная выше, недоступна,
только допустимый код для активного языка может быть выполнен.</li>

<li>Обработка запроса SQL использует следующую логику: чтение,
выполнение, печать результата.</li>
<li>При обработке не-SQL кода, он загружен полностью из входного источника и
выполнен как модуль.</p></li></ul>

<p>Используйте параметр командной строки
<a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_interactive"
target="_top"><code>--interactive</code></a> (или <code>-i</code>), чтобы
сконфигурировать MySQL Shell, чтобы обработать входной источник, как будто
обработка запущена в интерактивном режиме: это активирует все опции,
обеспеченные интерактивным режимом, который будет использоваться в
пакетной обработке данных.</p>
<p>В этом случае, независимо от того, что это за источник, он будет считан
построчно и обработан интерактивно.</p>

<h5><a name="mysql-shell-multiple-line-support"></a>3.8.3.5.1.
Поддержка нескольких строк</h5>
<p>Возможно определить запросы из нескольких строк. При работе в режиме
Питона или JavaScript, многострочный режим автоматически включен, когда блок
запросов начинается с функциональных определений, условных операторов,
циклов и так далее. В режиме SQL многострочный режим запускается, когда
появляется команда <code>\</code>. Как только многострочный режим запущен,
вводимые заявления кэшируются. Например:
<pre>
mysql-sql&gt; <strong><code>\</code></strong>
... <strong><code>create procedure get_actors()</code></strong>
... <strong><code>begin</code></strong>
... <strong><code>  select first_name from sakila.actor;</code></strong>
... <strong><code>end</code></strong>
...
mysql-sql&gt;
</pre>

<h3><a name="mysql-shell-configuring"></a>3.8.4. Конфигурирование MySQL Shell
</h3>
<p>Этот раздел объясняет, как сконфигурировать MySQL Shell, используя команды
выполнимые из интерактивного редактора кода и параметров командной строки.
Для описания параметров командной строки MySQL Shell см.
<a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html" target="_top">
<span><strong>mysqlsh</strong></span></a>.</p>

<h4><a name="mysql-shell-commands"></a>3.8.4.1. Команды MySQL Shell</h4>
<p>MySQL Shell обеспечивает команды, которые позволяют Вам изменить
окружающую среду выполнения редактора кода, например сконфигурировать
активный язык программирования или соединение с MySQL Server. Следующая
таблица приводит команды, которые доступны независимо от в настоящее время
выбираемого языка. Поскольку команды должны быть доступными независимо от
<span><em>режима исполнения</em></span>, они
начинаются с escape-последовательности <code>\</code>.</p>

<table border="1"><thead><tr><th scope="col">Команда</th>
<th scope="col">Псевдоним</th><th scope="col">Описание</th></tr></thead>
<tbody><tr><td><p><code>\help</code></p></td>
<td><p><code>\h</code> или <code>\?</code></p></td>
<td><p>Справка о командах MySQL Shell.</p></td></tr>

<tr><td><p><code>\quit</code></p></td><td><p><code>\q</code> или
<code>\exit</code></p></td><td><p>Выход из MySQL Shell.</p></td></tr>
<tr><td><p><code>\</code></p></td><td> </td><td><p>В режиме SQL включает
многострочный режим. Код кэшируется и будет выполнен, когда
вводится пустая строка.</p></td></tr>

<tr><td><p><code>\status</code></p></td><td> </td><td><p>
Показывает текущий статус MySQL Shell.</p></td></tr>
<tr><td><p><code>\js</code></p></td><td> </td><td><p>
Режим выполнения JavaScript.</p></td></tr>

<tr><td><p><code>\py</code></p></td><td> </td><td><p>
Режим выполнения Python.</p></td></tr>
<tr><td><p><code>\sql</code></p></td><td> </td><td><p>
Режим выполнения SQL.</p></td></tr>

<tr><td><p><code>\connect</code></p></td><td><p><code>\cx</code>
</p></td><td><p>Соединится с сервером MySQL по URI,
используя XSession (X Protocol).</p></td></tr>

<tr><td><p><code>\connect_node</code></p></td><td><p>
<code>\cn</code></p></td><td><p>
Удалено в версии 1.0.4, используйте <code>\connect -n</code>.
Соединится с сервером MySQL по URI, используя Node session.</p></td></tr>

<tr><td><p><code>\connect_classic</code></p></td><td><p>
<code>\cc</code></p></td><td><p>Удалено в версии 1.0.4, используйте
<code>\connect -c</code>. Соединится с сервером MySQL по URI, используя
Classic session (MySQL).</p></td></tr>

<tr><td><p><code>\use</code></p></td><td> </td><td><p>
Определяет схему, чтобы использовать.</p></td></tr>
<tr><td><p><code>\source</code></p></td><td><p><code>\.</code>
</p></td><td><p>Выполнит файл скрипта, используя активный язык.</p></td></tr>

<tr><td><p><code>\warnings</code></p></td><td><p>
<code>\W</code></p></td><td><p>
Покажет любые предупреждения, произведенные запросом</p></td></tr>

<tr><td><p><code>\nowarnings</code></p></td><td><p>
<code>\w</code></p></td><td><p>
Не показывать предупреждения, произведенные запросом.</p></td></tr>

<tr><td><p><code>\lsconn</code></p></td><td><p>
<code>\lsc</code></p></td><td><p>
Напечатать данные о соединении для сохраненных сеансов.</p></td></tr>

<tr><td><p><code>\saveconn</code></p></td><td><p><code>\savec</code>
</p></td><td><p>Сохранить данные соединения сеанса, опционально используется
<code>-f</code>, чтобы вызвать перезапись существующего соединения.
</p></td></tr>

<tr><td><p><code>\addconn</code></p></td><td><p>
<code>\addc</code></p></td><td><p>Удалено в версии 1.0.4, см.
<code>\saveconn</code>. Сохранить данные соединения сеанса.</p></td></tr>

<tr><td><p><code>\rmconn</code></p></td><td> </td><td><p>
Удаляет сохраненный сеанс.</p></td></tr>
<tr><td><p><code>\chconn</code></p></td><td> </td><td><p>
Удалено в версии 1.0.4, см. <code>\saveconn</code>.
Обновляет сохраненный сеанс.</p></td></tr></tbody></table>

<h5><a name="idm139965420279328"></a>Команда Help</h5>
<p>Команда <code>\help</code> может использоваться с или без параметров.
Когда используется без параметров, общая справка будет
напечатана, включая информацию о:
<ul><li><p>Доступных командах.</li>
<li>Доступных командах для активного режима.</p></li></ul>

<p>Когда используется с параметром, он должен быть допустимой командой. Если
это так, справка для определенной команды напечатана, включая:</p>
<ul><li><p>Описание.</li>
<li>Поддерживаемые псевдонимы, если есть.</li>
<li>Дополнительная справка, если есть.</p></li></ul>

<p>Например:
<pre>
<strong><code>\help connect</code></strong>
</pre>
Если параметр не является допустимой командой, общая справка напечатана.</p>

<h5><a name="idm139965420269472"></a>Команда Connect</h5>
<p>Команда <code>\connect</code> используется, чтобы соединиться с сервером
MySQL, используя URI. Эта команда создает соединение через
X Protocol по умолчанию. Например:
<pre>
<strong><code>\connect root@localhost:3306</code></strong>
</pre>
Если пароль требуется, он будет запрошен.</p>

<p>Используйте опцию <code>-n</code>, чтобы создать Node session, используя
X Protocol, чтобы соединиться с единственным сервером. Например:
<pre>
<strong><code>\connect -n root@localhost:3306</code></strong>
</pre>

Используйте опцию <code>-c</code>, чтобы создать Classic session,
позволяющую использовать протокол MySQL, чтобы выполнять команды SQL
непосредственно на сервере. Например:
<pre>
<strong><code>\connect -c root@localhost:3306</code></strong>
</pre>

<h5><a name="idm139965420259920"></a>Команда Source</h5>
<p>Команда <code>\source</code> используется, чтобы выполнить код из скрипта
в данном пути. Например:
<pre>
<strong><code>\source /tmp/mydata.sql</code></strong>
</pre>
Это может использоваться, чтобы выполнить SQL, JavaScript или Python.
Код в файле выполнен, используя активный язык, таким образом, чтобы
обработать SQL, MySQL Shell должен быть в режиме SQL.</p>

<p>Поскольку код выполнен, используя активный язык, выполняя скрипт на ином
языке, чем в настоящее время выбранный, можно
получить неожиданные результаты.</p>

<h5><a name="idm139965420254928"></a>Команда Use</h5>
<p>Команда <code>\use</code> позволяет Вам выбрать, какая схема
является активной, например:
<pre>
<strong><code>\use <em><code>schema_name</code></em></code></strong>
</pre>

Команда <code>\use</code> требует, чтобы глобальный сеанс был активным. Если
глобальный сеанс XSession, команда <code>\use</code> только устанавливает
<code>db</code> к объекту, представляющему
<em><code>schema_name</code></em>, но не устанавливает текущую схему на базе
данных. Если глобальный сеанс NodeSession или ClassicSession, команда
<code>\use</code> устанавливает текущую схему в указанную
<em><code>schema_name</code></em> и обновляет переменную <code>db</code>
к объекту, который представляет выбранную схему.</p>

<h3><a name="mysql-shell-stored-sessions"></a>3.8.5. Сохраненные сеансы</h3>
<p>Этот раздел описывает, как MySQL Shell хранит постоянный список данных о
соединении для сеансов, идентифицированных именем сеанса.</p>

<p>Есть два подхода, чтобы управлять и использовать
сохраненные данные соединения:</p>
<ul><li><p>Через команды MySQL Shell.</li>
<li>Через встроенный объект, доступный для JavaScript и Python.</p></li></ul>

<p>С этими опциями Вы можете добавить, обновить, удалить, перечислить и
использовать хранящие данные соединения. Соединения сохранены как текстовый
файл в каталоге MySQL Shell, обычно находящемся в пользовательском каталоге.
</p>

<p>Имя файла: <code>stored_sessions.json</code></p>
<p>В Windows типичное местоположение:
<pre>
%APPDATA%\MySQL\mysqlsh\stored_sessions.json
</pre>

В Unix типичное местоположение:
<pre>
~/.mysqlsh/stored_sessions.json
</pre>

<h4><a name="mysql-shell-stored-session-shell-commands"></a>3.8.5.1.
Сохраненные команды сеанса MySQL Shell</h4>
<p>Следующие команды используются, чтобы работать с сохраненными
сеансами в MySQL Shell.</p>

<h5><a name="mysql-shell-stored-session-adding-connection"></a>
Добавление соединения</h5>
<p>Добавить данные о соединении для использования сеанса:
<pre>
\saveconn name [URI]
</pre>

<ul><li><p><em><code>name</code></em>: Важный параметр, имя, которое
назначено соединению. Отметьте, что это должно
быть допустимым идентификатором:</p>
<ul><li><p>Начинается с буквенного символа.</li>
<li>Содержит только алфавитно-цифровые символы и подчеркивание.</li></ul></li>

<li><p><em><code>URI</code></em>: Дополнительный параметр, содержащий данные
о соединении в формате URI. Если не определен, и глобальный сеанс является
активным, URI для глобального сеанса используется вместо этого.</li>

<li><code>-f</code>: Дополнительный параметр, чтобы вызвать перезапись
существующего соединения. Если предпринята попытка сохранить соединение, но
<em><code>name</code></em> занято, происходит ошибка. Используйте этот
параметр, чтобы вызвать сохранение соединения, которое переопределяет то, что
было ранее сохранено под данным именем сеанса.</p></li></ul>

<h5><a name="mysql-shell-stored-session-updating-a-connection"></a>
Обновление сохраненного соединения</h5>
<p>Чтобы обновить данные о соединении для определенного сеанса:
<pre>
\saveconn -f <em><code>name</code></em> URI
</pre>

<ul><li><p><em><code>name</code></em>: Имя соединения.</li>
<li><code>URI</code>: Содержит данные о соединении, которые заменяют
соединение для обозначенного имени сеанса.</p></li></ul>

<h5><a name="mysql-shell-stored-session-removing-connection"></a>
Удаление сохраненного соединения</h5>
<p>Удалить соединение можно так:
<pre>
\rmconn <em><code>name</code></em>
</pre>
<ul><li><p><em><code>name</code></em>: Имя соединения.</p></li></ul>

<h5><a name="mysql-shell-stored-session-listing-connections"></a>
Просмотр списка соединений</h5>
<p>Чтобы просмотреть перечень соединений, скомандуйте:
<pre>
\lsconn
</pre>

<h5><a name="mysql-shell-stored-session-using-connections"></a>
Использование сохраненного соединения</h5>
<p>Сохраненные соединения могут использоваться, чтобы создать глобальный
сеанс командой <code>\connect <em><code>name</code></em></code>. Сохраненный
сеанс загружен и используется, чтобы создать глобальный сеанс. При
использовании сохраненного соединения посредством команды оболочки, Вы будете
запрошены о пароле, если он отсутствует в данных соединения.</p>

<h4><a name="mysql-shell-stored-session-scripting"></a>3.8.5.2.
Скрипты сохраненных сеансов</h4>
<p>Встроенный объект доступен, чтобы управлять и использовать сохраненные
соединения через JavaScript или Python: <code>shell.storedSessions</code>.</p>

<h5><a name="mysql-shell-stored-session-scripting-adding"></a>3.8.5.2.1.
Добавление сохраненного соединения</h5>
<p>Добавить новое соединение можно так:
<pre>
shell.storedSessions.add(name, connectionData[, override])
</pre>

<ul><li><p><em><code>name</code></em>: Имя соединения. Это должно
быть допустимым идентификатором.</li>
<li><code>connectionData</code>: Содержит информацию о соединении и может
быть или строкой в формате URI, или картой данных о соединении, содержащей
любое из следующих значений:</p>

<ul><li><p>Хост.</li>
<li>Порт.</li>
<li>dbUser</li>
<li>dbPassword</li>
<li>Схема.</li>
<li>ssl_ca</li>
<li>ssl_cert</li>
<li>ssl_key</p>
<p>Чтобы сохранить данные соединения, по крайней мере параметры хост и dbUser
должны быть определены, остальные дополнительные.</p></li></ul>

</li><li><p><span><strong>override</strong></span>: Дополнительный булев
параметр, используемый, чтобы указать на желаемое поведение в случае, если
уже есть данные соединения, связанные с тем же самым именем.
Значение по умолчанию: false.</p>

<ul><li><p>Если override = false, а данные о соединении с тем же самым именем
уже существуют, произойдет ошибка.</li>
<li>В том же самом скрипте, если новые данные о соединении переопределяют
предыдущие данные, ошибки не будет.</p></li></ul></li></ul>

<h5><a name="mysql-shell-updating-stored-connection"></a>3.8.5.2.2.
Обновление сохраненного соединения</h5>
<p>Чтобы обновить данные о соединении для определенного сеанса:
<pre>
shell.storedSessions.update(name, connectionData)
</pre>

<ul><li><p><span><strong>name</strong></span>: Имя, которое идентифицирует
данные о соединении. Отметьте, что это должно быть допустимым идентификатором.
</li>

<li><span><strong>connectionData</strong></span>: Содержит данные о
соединении и может быть или строкой в формате URI, или
картой данных о соединении.</p></li></ul>

<h5><a name="mysql-shell-removing-stored-connection"></a>3.8.5.2.3.
Удаление сохраненного соединения</h5>
<p>Чтобы удалить соединение:
<pre>
shell.storedSessions.remove(name)
</pre>
<ul><li><p><span><strong>name</strong></span>: Имя соединения,
которое будет удалено.</p></li></ul>

<h5><a name="mysql-shell-listing-stored-connections"></a>3.8.5.2.4.
Перечисление сохраненных соединений</h5>
<p>Чтобы получить список сохраненных соединений, используйте:
<pre>
shell.storedSessions
</pre>

<h5><a name="mysql-shell-using-stored-connection"></a>3.8.5.2.5.
Использование сохраненного соединения</h5>
<p>Когда объект <code>shell.storedSessions</code> инициализирован, он
загружает данные сеанса и создает свойство, чтобы получить доступ к ним как
<code>shell.storedSessions.<em><code>name</code></em></code>:
<pre>
var session = mysqlx.getSession(shell.storedSessions.name)
</pre>

Когда используется этот путь, если у данных о соединении нет никакого пароля,
его не требуют. Обязанность разработчиков обеспечить пароль используя данные
сеанса или как дополнительный параметр следующим образом:
<pre>
var session = mysqlx.getSession(shell.storedSessions.name, password)
</pre>

<h3><a name="mysql-shell-application-log"></a>3.8.6.
Журнал приложения MySQL Shell</h3>
<p>Этот раздел объясняет журнал приложения.</p>

<h4><a name="mysql-shell-application-log-introduction"></a>3.8.6.1.
Журнал приложения</h4>
<p>MySQL Shell может быть сконфигурирован, чтобы произвести файл журнала
приложения с информацией о проблемах. Вы можете использовать эту информацию,
чтобы проверить статус MySQL Shell в то время, как это работает.</p>
<p>Местоположение файла системного журнала: пользовательский путь
конфигурации, сам файл называется <code>mysqlsh.log</code>.</p>

<h5><a name="idm139965420166336"></a>Файл системного журнала в Windows</h5>
<p>В Windows путь по умолчанию к файлу системного журнала
<code>%APPDATA%\MySQL\mysqlsh\mysqlsh.log</code>.</p>

<p>Найти местоположение <code>%APPDATA%</code> на Вашей системе можно так:
<pre>
C:&gt;<strong><code>echo %APPDATA%</code></strong>
C:\Users\exampleuser\AppData\Roaming
</pre>

В Windows путь определен результатом объединения пути к папке
<code>%APPDATA%</code> для пользователя и <code>MySQL\mysqlsh</code>.
Используя вышеупомянутый пример, мы получим:
<pre>
C:\Users\exampleuser\AppData\Roaming\MySQL\mysqlsh\mysqlsh.log
</pre>

<h5><a name="idm139965420159184"></a>Файл системного журнала в Unix-системах
</h5>
<p>Для Unix путь по умолчанию
<code>~/.mysqlsh/mysqlsh.log</code>, где <span><span>~</span></span>
представляет корневой каталог пользователя. Переменная окружения
<code>HOME</code> также представляет корневой каталог пользователя.
Добавление <code>.mysqlsh</code> к корневому каталогу пользователя определяет
путь по умолчанию к журналам. Например:
<pre>
C:&gt;<strong><code>echo $HOME</code></strong>
/home/exampleuser
shell&gt; <strong><code>less /home/exampleuser/.mysqlsh/mysqlsh.log</code></strong>
</pre>

Эти пути могут быть переопределены на всех платформах, определяя переменную
окружения <code>MYSQL_USER_CONFIG_PATH</code>. Значение этой переменной
заменяет <code>%APPDATA%</code> в Windows или <code>$HOME</code> в Unix.</p>

<p>По умолчанию журналирование отключено в MySQL Shell. Чтобы включить его,
примените параметр командной строки
<a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_log-level"
target="_top"><code>--log-level</code></a>, запуская MySQL Shell. Например:
<pre>
shell&gt; <strong><code>mysqlsh --log-level=4</code></strong>
</pre>
Число, назначенное <a href="../../../dev.mysql.com/doc/refman/5.7/en/mysqlsh.html#option_mysqlsh_log-level"
target="_top"><code>--log-level</code></a> управляет уровнем детализации в
журнале. Следующие уровни журналирования поддержаны:</p>

<table border="1">
<thead><tr><th scope="col">Уровень журналирования</th>
<th scope="col">Значение</th></tr></thead>
<tbody><tr><td><p>1</p></td><td><p>Ничего, значение по умолчанию.
</p></td></tr>
<tr><td><p>2</p></td><td><p>Внутренняя ошибка.</p></td></tr>
<tr><td><p>3</p></td><td><p>Ошибка.</p></td></tr>
<tr><td><p>4</p></td><td><p>Предупреждение.</p></td></tr>
<tr><td><p>5</p></td><td><p>Информация.</p></td></tr>
<tr><td><p>6</p></td><td><p>Отладка.</p></td></tr>
<tr><td><p>7</p></td><td><p>Отладка2.</p></td></tr>
<tr><td><p>8</p></td><td><p>Отладка3.</p></td></tr></tbody></table>

<p>Формат журнала простой текст, записи содержат метку времени и описание
проблемы, наряду с уровнем журнала из вышеупомянутого списка. Например:
<pre>
2016-04-05 22:23:01: Error: Default Domain: (shell):1:8: MySQLError: You have an error
in your SQL syntax; check the manual that corresponds to your MySQL server version for
the right syntax to use near '' at line 1 (1064) in session.sql("select * from t
limit").execute().all();
</pre>

<h3><a name="mysql-shell-customizing"></a>3.8.7. Настройка MySQL Shell</h3>
<p>MySQL Shell предлагает настроить поведение и среду выполнения кода через
скрипты запуска, которые выполнены, когда приложение запускается. Это
позволяет сделать следующее:</p>

<ul><li><p>Добавить дополнительные пути поиска для модулей Python
или JavaScript.</li>
<li>Переопределить подсказку по умолчанию, используемую режимами
Python и JavaScript.</li>
<li>Определить глобальные функции или переменные.</li>
<li>Любую другую возможную инициализацию через JavaScript или Python.
</p></li></ul>

<h4><a name="mysql-shell-creating-startup-scripts"></a>3.8.7.1.
Работа со стартовыми скриптами</h4>
<p>Когда MySQL Shell входит в режим JavaScript или Питона, он ищет скрипты
запуска, которые будут выполнены. Это скрипты на JavaScript или Python
содержащие инструкции, которые будут выполнены, когда
соответствующий режим инициализирован.</p>

<p>Скрипты запуска нужно назвать следующим образом:</p>
<ul><li><p>Для JavaScript: <code>mysqlshrc.js</code></li>
<li>Для Python: <code>mysqlshrc.py</code></p></li></ul>

<p>MySQL Shell ищет эти файлы по следующим путям (в порядке выполнения).</p>
<p>В Windows:</p>
<ol type="1"><li><p><code>%PROGRAMDATA%MySQLmysqlshmysqlshrc.[js|py]</code>
</li>
<li><code>%MYSQLSH_HOME%sharedmysqlshmysqlshrc.[js|py]</code></li>
<li><code>&lt;mysqlsh binary path&gt;mysqlshrc.[js|py]</code></li>
<li><code>%APPDATA%MySQLmysqlshmysqlshrc.[js|py]</code></p></li></ol>

<p>В Linux и OSX:</p>
<ol type="1"><li><p><code>/etc/mysql/mysqlsh/mysqlshrc.[js|py]</code></li>
<li><code>$MYSQLSH_HOME/shared/mysqlsh/mysqlshrc.[js|py]</code></li>
<li><code>&lt;mysqlsh binary path&gt;/mysqlshrc.[js|py]</code></li>
<li><code>$HOME/.mysqlsh/mysqlshrc.[js|py]</code></p></li></ol>

<p>Переменная окружения <code>MYSQLSH_HOME</code> определяет корневой каталог
стандартной установки MySQL Shell. Если <code>MYSQLSH_HOME</code> не
определена, это будет автоматически вычислено, основываясь на местоположении
исполняемого файла MySQL Shell, поэтому на многих стандартных установках нет
необходимости определять <code>MYSQLSH_HOME</code> отдельно.</p>

<p>Если <code>MYSQLSH_HOME</code> не определена и исполняемый файл MySQL
Shell не находится в стандартной структуре папок установки, тогда путь,
определенный в опции 3 в вышеупомянутых списках, используется. Используя
стандартную установку или если <code>MYSQLSH_HOME</code> указывает на
стандартную структуру папок установки, тогда путь, определенный в опции 3, не
используется. Списки выше также определяют порядок поиска путей, если что-то
определено в двух различных скриптах.
Скрипт, выполняемый позже, имеет приоритет.</p>

<h4><a name="mysql-shell-adding-module-search-paths"></a>3.8.7.2.
Добавление путей поиска модуля</h4>
<p>Есть два способа добавить дополнительные пути поиска модуля:</p>
<ul><li><p>Через переменные окружения.</li>
<li>Через стартовые скрипты.</p></li></ul>

<h5><a name="mysql-shell-environment-variables"></a>3.8.7.2.1.
Переменные окружения</h5>
<p>Python использует переменную окружения <code>PYTHONPATH</code>, чтобы
позволить расширять пути поиска для модулей. Значение этой переменной
представляет собой список путей, отделенных:</p>
<ul><li><p>Символ двоеточия в Linux и OSX.</li>
<li>Символ точки с запятой в Windows.</p></li></ul>

<p>Чтобы достичь этого в JavaScript MySQL Shell поддерживает дополнительные
пути модуля JavaScript, используя переменную окружения
<code>MYSQLSH_JS_MODULE_PATH</code>. Значение этой переменной
представляет собой список путей, отделенных точкой с запятой.</p>

<h5><a name="mysql-shell-startup-scripts"></a>3.8.7.2.2. Стартовые скрипты
</h5>
<p>Добавление путей поиска модуля может быть достигнуто для обоих языков
через соответствующий стартовый скрипт.</p>

<p>Для Python поправьте файл <code>mysqlshrc.py</code> и добавьте
необходимые пути в массив <code>sys.path</code>.
<pre>
# Import the sys module
import sys

# Append the additional module paths
sys.path.append('~/custom/python')
sys.path.append('~/other/custom/modules')
</pre>

Для JavaScript та же самая задача решается добавлением кода в файл
<code>mysqlshrc.js</code>, чтобы добавить необходимые пути в предопределенный
массив <code>shell.js_module_paths</code>.
<pre>
// Append the additional module paths
shell.js.module_paths[shell.js.module_paths.length] = '~/custom/js';
shell.js.module_paths[shell.js.module_paths.length] = '~/other/custom/modules';
</pre>

<h4><a name="mysql-shell-overriding-the-default-prompt"></a>3.8.7.3.
Переопределение подсказки по умолчанию</h4>
<p>MySQL Shell использует свою подсказку по умолчанию для обоих языков: для
Python (<code>mysql-py&gt;</code>) и для JavaScript (<code>mysql-js&gt;
</code>).</p>

<p>Вы можете настроить подсказку для каждого языка, используя функцию
<code>shell.custom_prompt()</code>. Эта функция должна возвратить строку,
которая используется в качестве подсказки. Чтобы иметь пользовательскую
подсказку при запуске MySQL Shell, определите эту функцию в скрипте запуска.
Следующий пример показывает, как эта функциональность может использоваться.
</p>

<p>В Python <code>shell.custom_prompt()</code> может быть определена как:
<pre>
# Import the sys module
from time import gmtime, strftime

def my_prompt():
  ret_val = strftime("%H:%M:%S", gmtime())
  if session and session.isOpen():
     data = shell.parseUri(session.getUri())
     ret_val = "%s-%s-%s-py&gt; " % (ret_val, data.dbUser, data.host)
  else: ret_val = "%s-disconnected-py&gt; " % ret_val
  return ret_val
  shell.custom_prompt = my_prompt
</pre>

<p>В JavaScript <code>shell.custom_prompt()</code> может быть определена как:
<pre>
shell.custom_prompt = function()
{
  var now = new Date();
  var ret_val = now.getHours().toString()+ ":" +
                now.getMinutes().toString() + ":" +
                now.getSeconds().toString();
  if (session &amp;&amp; session.isOpen()) {
     var data = shell.parseUri(session.getUri());
     ret_val += "-" + data.dbUser + "-" + data.host + "-js&gt; ";
  }
  else ret_val += "-disconnected-js&gt; ";
  return ret_val;
}
</pre>

Следующий пример демонстрирует использование пользовательских функций,
определенных выше в скрипте запуска. Подсказки показывают время текущей
системы, а если сеанс открыт, текущего пользователя и хост:
<pre>
Welcome to MySQL Shell 1.0.4 Development Preview

Copyright (c) 2016, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of
their respective owners.

Type '\help', '\h' or '\?' for help.

Currently in JavaScript mode. Use \sql to switch to SQL mode and execute queries.
14:34:32-disconnected-js&gt; \py
Switching to Python mode...

19:34:39-disconnected-py&gt; \connect root:@localhost
Creating an X Session to root@localhost:33060
No default schema selected.

19:34:50-root-localhost-py&gt; \js
Switching to JavaScript mode...
14:34:57-root-localhost-js&gt;
</pre>

</index></td><td width="20%">
<script type="text/javascript">
    var begun_auto_colors           = new Array();
    var begun_auto_fonts_size       = new Array();
    var begun_auto_pad              =       97517308;     // идентификатор площадки
    var begun_auto_limit            =              5;     // число объявлений выводимых на площадке
    var begun_auto_width            =            250;     // ширина блока объявлений
    begun_auto_colors[0]            =      '#0000CC';     // цвет ссылки объявлений
    begun_auto_colors[1]            =      '#000000';     // цвет текста объявления
    begun_auto_colors[2]            =      '#00CC00';     // цвет домена объявления
    begun_auto_colors[3]            =      '#FFFFFF';     // цвет фона блока объявлений
    begun_auto_fonts_size[0]        =          '9pt';     // р-мер шрифта ссылки объявлений
    begun_auto_fonts_size[1]        =          '9pt';     // р-мер шрифта текста объявления
    begun_auto_fonts_size[2]        =          '8pt';     // р-мер шрифта домена объявления
    begun_auto_fonts_size[3]        =          '8pt';     // р-мер шрифта заглушки
    var begun_block_type            =     'Vertical';     // тип блока
    var begun_rambler_type          =              1;     // цвет блока поиска Рамблер
    begun_koi8 = 1;
</script>
<script src="../../../autocontext.begun.ru/autocontext.js"
type="text/javascript"></script>
</td></tr></table>

<p><table><tr><td>
<form method="get" name="fform" onSubmit="fsearch(strf.value); return false;">
<input type="hidden" name="clid" value="39177">
<b>Поиск</b><table><tr>
<td><input type="text" name="strf" size="15" style="font-size: 9pt" /></td></tr>
<tr><td><font size="-1"><input type="radio" name="myradio" value="0"
checked id="at_site"/>
<label for="at_site">На сайте</label><br>
<input type="radio" name="myradio" value="1" id="at_ya">
<label for="at_ya">В Яндексе</label></font></td></tr>
<tr><td><input type="submit" value="Найти" style="font-size: 9pt"/></td></tr>
</table></form></td>
<td>&nbsp;</td><td><script language="JavaScript"
src="../../../b190.takru.com/in.php@id=199275">
</script></td></tr></table></p>

<p><center><table><tr><td><font size="+1"><B>Найди своих коллег!</B></font><BR>
<script language="javascript"
src="../../../rldp.lovemesweet.ru/banner/db.js.php@rows=01&cols=05&bg=33FF33&sex=0&afrom=18&ato=99&headgif=&sf=1&nwnd=1&pmin=0&cid=RU&tid=0&smu=0&tcl1=000000&tcl2=FF0000">
</script></td>

<td><iframe src="../../../www.linuxcenter.ru/trans/list.phtml@ref=121965&n=5&price=yes"
frameborder="0" vspace="0" hspace="0" width="300" height="350" marginwidth="0"
marginheight="0" scrolling="no"></iframe></td></tr></table></center></p>

<P><FONT SIZE=-1>Вы можете <A HREF="mailto:alexey.v.pautov@mail.ru">
направить письмо</A> администратору этой странички, Алексею Паутову.</FONT>
<A HREF="mailto:alexey.v.pautov@mail.ru"><IMG SRC="img/email.gif"
ALT="mailto:alexey.v.pautov@mail.ru" BORDER=0 valign="center" HEIGHT=35
WIDTH=105 ALIGN=ABSCENTER></A></P>

<script type="text/javascript" src="../../../bin-layer.ru/popup-686-1.js">
</script>

</body>
</html>
