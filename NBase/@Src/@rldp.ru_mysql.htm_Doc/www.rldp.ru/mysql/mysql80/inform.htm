<html>
<head>
  <META NAME="Author" CONTENT="Alexey V. Pautov">
  <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=koi8-r">
  <title>Глава 22. Таблицы INFORMATION_SCHEMA</title>
<meta name="generator" content="DocBook XSL Stylesheets + chunker.py v1.9.2" />
</head>

<body>
<script type="text/javascript">
nN = navigator.appName;
function fsearch(str)
{
  if (document.fform.myradio[0].checked) {
     open('../../../yandex.ru/sitesearch@text=' + str + '&site=' +
          document.location.hostname);
  } else {open('../../../yandex.ru/sitesearch@text=' + str);}
}

function MouseUpHandler(e)
{
  if (nN == 'Netscape' || nN == 'Opera') {
     if (document.getSelection()) {
        str = document.getSelection();
        newstr = str.replace(/\n+/g, ' ');
        str = newstr.replace(/\ +/g, ' ');
        if (str.length > 100) {
           var i;
           i = 0;
           str = str.slice(0, 100);
           i = str.lastIndexOf(' ');
           if (i > 0){str = str.slice(0, i);}
        }
        document.fform.strf.value = str;
     }
  } else if(nN == 'Microsoft Internet Explorer') {
    if (document.selection.createRange()) {
       var range = document.selection.createRange();
       var str = range.text;
    }
    if (str) {
       str = str.replace(/\ +/g, " ");
       document.fform.strf.value = str;
    }
  }
  return true;
}
if (window.Event) {document.captureEvents(Event.MOUSEUP);}
document.onmouseup = MouseUpHandler;
</script>

<center><table><tr><td><a href="../../default.htm">
<IMG SRC="../../img/b_book.gif" ALT="RussianLDP" HEIGHT=48 WIDTH=55
ALIGN=ABSCENTER></a></td>

<td><!--Rating@Mail.ru COUNTEr-->
<a target=_top href="../../../top.mail.ru/jump@from=1364238">
<img src="../../../d1.cd.b4.a1.top.list.ru/counter@id=1364238;t=230"
border=0 height=31 width=88 alt="Рейтинг@Mail.ru"/></a>
</td><!--/COUNTER-->

<td><!-- begin of Top100 code -->
<script id="top100Counter" type="text/javascript"
src="../../../cnt.rambler.ru/top100.jcn@1448139"></script>
<noscript><a href="../../../top100.rambler.ru/top100/default.htm">
<img src="../../../cnt.rambler.ru/top100.cnt@1448139" alt="Rambler's Top100"
width="81" height="63" border="0" /></a></noscript>
<!-- end of Top100 code --></td>

<td><!-- HotLog -->
<script type="text/javascript" language="javascript">
hotlog_js="1.0";
hotlog_r=""+Math.random()+"&s=525943&im=127&r="+escape(document.referrer)+
"&pg="+escape(window.location.href);
document.cookie="hotlog=1; path=/"; hotlog_r+="&c="+(document.cookie?"Y":"N");
</script>
<script type="text/javascript" language="javascript1.1">
hotlog_js="1.1";hotlog_r+="&j="+(navigator.javaEnabled()?"Y":"N")
</script>

<script type="text/javascript" language="javascript1.2">
hotlog_js="1.2";
hotlog_r+="&wh="+screen.width+'x'+screen.height+"&px="+
(((navigator.appName.substring(0,3)=="Mic"))?
screen.colorDepth:screen.pixelDepth)</script>

<script type="text/javascript" language="javascript1.3">
hotlog_js="1.3"</script>
<script type="text/javascript" language="javascript">
hotlog_r+="&js="+hotlog_js;
document.write("<a href='../../../click.hotlog.ru/@525943' target='_top'>
<img "+" src='http://hit27.hotlog.ru/cgi-bin/hotlog/count?"+
hotlog_r+"&' border=0 width=88 height=31 alt=HotLog><\/a>")</script>

<noscript>
<a href="../../../click.hotlog.ru/@525943" target="_top">
<img src="../../../hit27.hotlog.ru/cgi-bin/hotlog/count@s=525943&im=127"
border="0" width="88" height="31" alt="HotLog"></a></noscript></td>
<!-- /HotLog -->

<td><!--LiveInternet counter--><script type="text/javascript"><!--
document.write("<a href='../../../www.liveinternet.ru/click' "+
"target=_blank><img src='http://counter.yadro.ru/hit?t52.15;r"+
escape(document.referrer)+((typeof(screen)=="undefined")?"":
";s"+screen.width+"*"+screen.height+"*"+(screen.colorDepth?
screen.colorDepth:screen.pixelDepth))+";u"+escape(document.URL)+
";"+Math.random()+"' alt='' title='LiveInternet: показано число просмотров и"+
" посетителей за 24 часа' "+"border=0 width=88 height=31><\/a>")//-->
</script></td></tr>
<!--/LiveInternet-->

<tr><td><FONT SIZE=-1><b>WebMoney:&nbsp;</b><br>
WMZ Z294115950220&nbsp;<br>
WMR R409981405661&nbsp;<br>
WME E134003968233&nbsp;</FONT></td>

<td><FONT SIZE=-1><b>Visa&nbsp;</b><br>
4274 3200 2453 6495&nbsp;</FONT></td>
</tr></table></center>
<P><index><table><tr><td>

<h1><a name="information-schema"></a>Глава 22. Таблицы INFORMATION_SCHEMA
</h1>
<p><code>INFORMATION_SCHEMA</code> обеспечивает доступ к <span>метаданным
</span> о базе данных, информации о сервере MySQL, такой как название базы
данных или таблицы, типе данных столбца или привилегиях доступа. Другие
термины, которые иногда используются для этой информации, являются
<span>словарем данных</span> и <span>системным каталогом</span>.</p>

<h2><a name="idm139965295889120"></a>Замечания о применении
INFORMATION_SCHEMA</h2>
<p><code>INFORMATION_SCHEMA</code> база данных в пределах каждого экземпляра
MySQL, место, которое хранит информацию обо всех других базах данных, которые
поддерживает сервер MySQL. <code>INFORMATION_SCHEMA</code>
содержит несколько таблиц только для чтения. Они фактически представления, не
базовые таблицы, таким образом нет никаких файлов, связанных с ними,
и Вы не можете установить триггеры на них. Кроме того, нет никакого каталога
базы данных с этим именем.</p>

<p>Хотя Вы можете выбрать <code>INFORMATION_SCHEMA</code> как базу данных по
умолчанию с помощью <a href="sql.htm#use"><code>USE</code></a>, Вы можете
только читать содержание таблиц, операции
<a href="sql.htm#insert"><code>INSERT</code></a>,
<a href="sql.htm#update"><code>UPDATE</code></a> или
<a href="sql.htm#delete"><code>DELETE</code></a> не работают.</p>

<h2><a name="idm139965295880112"></a>Пример</h2>
<p>Вот пример запроса, который получает информацию из
<code>INFORMATION_SCHEMA</code>:
<pre>
mysql&gt; SELECT table_name, table_type, engine
                 FROM information_schema.tables
                 WHERE table_schema = 'db5' ORDER BY table_name;
+------------+------------+--------+
| table_name | table_type | engine |
+------------+------------+--------+
| fk         | BASE TABLE | InnoDB |
| fk2        | BASE TABLE | InnoDB |
| goto       | BASE TABLE | MyISAM |
| into       | BASE TABLE | MyISAM |
| k          | BASE TABLE | MyISAM |
| kurs       | BASE TABLE | MyISAM |
| loop       | BASE TABLE | MyISAM |
| pk         | BASE TABLE | InnoDB |
| t          | BASE TABLE | MyISAM |
| t2         | BASE TABLE | MyISAM |
| t3         | BASE TABLE | MyISAM |
| t7         | BASE TABLE | MyISAM |
| tables     | BASE TABLE | MyISAM |
| v          | VIEW       | NULL   |
| v2         | VIEW       | NULL   |
| v3         | VIEW       | NULL   |
| v56        | VIEW       | NULL   |
+------------+------------+--------+
17 rows in set (0.01 sec)
</pre>

Объяснение: запрос просит список всех таблиц в базе данных <code>db5</code> и
показывает только три столбца данных: название таблицы, ее тип и
ее механизм хранения.</p>

<h2><a name="idm139965295872608"></a>Соображения о наборе символов</h2>
<p>Определение для символьных столбцов (например,
<code>TABLES.TABLE_NAME</code>) вообще
<code>VARCHAR(<em><code>N</code></em>) CHARACTER SET utf8</code>, где
<em><code>N</code></em> минимум 64. MySQL использует сопоставление по
умолчанию для этого набора символов (<code>utf8_general_ci</code>)
для всех поисков, отображений, сравнений и других строковых операций
на таких столбцах.</p>

<p>Поскольку некоторые объекты MySQL представлены как файлы, поиски в
строковых столбцах <code>INFORMATION_SCHEMA</code> могут быть затронуты
чувствительностью к регистру файловой системы. Для получения дополнительной
информации см. <a href="global.htm#charset-collation-information-schema">
раздел 11.1.8.7</a>.</p>

<h2><a name="idm139965295866240"></a>INFORMATION_SCHEMA как
альтернатива запросу SHOW</h2>
<p>Запрос <code>SELECT ... FROM INFORMATION_SCHEMA</code> предназначен как
более последовательный способ обеспечить доступ к информации, предоставленной
различными запросами <a href="sql.htm#show"><code>SHOW</code></a>
(<a href="sql.htm#show-databases"><code>SHOW DATABASES</code></a>,
<a href="sql.htm#show-tables"><code>SHOW TABLES</code></a> и т. д.).
Использование <a href="sql.htm#select"><code>SELECT</code></a> имеет эти
преимущества, по сравнению с <a href="sql.htm#show"><code>SHOW</code></a>:</p>

<ul><li><p>Это соответствует правилам Кодда, потому что весь доступ
сделан на таблицах.</li>
<li>Вы можете использовать знакомый синтаксис
<a href="sql.htm#select"><code>SELECT</code></a>
и должны только изучить некоторые имена таблиц и столбцов.</li>

<li>Конструктор не должен волноваться о добавляющих ключевых словах.</li>
<li>Вы можете фильтровать, сортировать, связывать и преобразовать результаты
запросов <code>INFORMATION_SCHEMA</code> в любой формат в соответствии с
потребностями приложения: например, структура данных или текстовое
представление для анализа.</li>

<li>Этот метод является более взаимодействующим с другими системами базы
данных. Например, пользователи Oracle Database
знакомы с запросами таблиц в словаре данных об Oracle.</p></li></ul>

<p>Поскольку <a href="sql.htm#show"><code>SHOW</code></a>
знакомо и широко используемо, запросы
<a href="sql.htm#show"><code>SHOW</code></a> остаются альтернативой.
Фактически, наряду с выполнением <code>INFORMATION_SCHEMA</code>
есть улучшения в <a href="sql.htm#show"><code>SHOW</code></a>, как описано в
<a href="#extended-show">разделе 22.31</a>.</p>

<h2><a name="idm139965295845504"></a>Привилегии</h2>
<p>Каждый пользователь MySQL имеет право получить доступ к этим таблицам, но
может видеть только строки в таблицах, которые соответствуют объектам, для
которых у пользователя есть надлежащие привилегии доступа. В некоторых
случаях (например, столбец <code>ROUTINE_DEFINITION</code> в таблице
<a href="#routines-table"><code>INFORMATION_SCHEMA.ROUTINES</code>
</a>) пользователи, у которых есть недостаточные привилегии, видят
<code>NULL</code>. Эти ограничения не применяются к таблицам
<a href="innodb.htm"><code>InnoDB</code></a>, Вы можете видеть их только с
привилегией <a href="security.html#priv_process"><code>PROCESS</code></a>.
</p>

<p>Те же самые привилегии относятся к выбору информации из
<code>INFORMATION_SCHEMA</code> и рассмотрению той же самой информации через
<a href="sql.htm#show"><code>SHOW</code></a>. В любом случае у Вас должна
быть некоторая привилегия на объекте, чтобы видеть информацию о нем.</p>

<h2><a name="idm139965295836384"></a>Соображения о производительности</h2>
<p>Запросы <code>INFORMATION_SCHEMA</code>, которые ищут информацию больше,
чем от одной базы данных, могли бы занять много времени и воздействовать на
работу. Чтобы проверить эффективность запроса, Вы можете использовать
<a href="sql.htm#explain"><code>EXPLAIN</code></a>. Для информации об
использовании вывода <a href="sql.htm#explain"><code>EXPLAIN</code></a> в
плане настройки запросов <code>INFORMATION_SCHEMA</code> см.
<a href="optimiz.htm#information-schema-optimization">раздел 9.2.4</a>.</p>

<h2><a name="idm139965295830448"></a>Соображения стандартов</h2>
<p>Выполнение структуры таблиц <code>INFORMATION_SCHEMA</code>
в MySQL следует ANSI/ISO SQL:2003 standard Part 11 <em>Schemata</em>. Наше
намерение: приблизительное согласие с SQL:2003 core feature F021
<em>Basic information schema</em>.</p>

<p>Пользователи SQL-сервера 2000 (который также следует стандарту) могут
заметить сильное сходство. Однако, MySQL опустил много столбцов, которые не
важны для нашего выполнения, и добавили столбцы, которые являются
MySQL-определенными. Один такой столбец <code>ENGINE</code> в таблице
<a href="#tables-table"><code>INFORMATION_SCHEMA.TABLES</code></a>.
</p>

<p>Хотя другие DBMS используют множество имен, как
<code>syscat</code> или <code>system</code>, стандартное
имя <code>INFORMATION_SCHEMA</code>.</p>

<p>Чтобы избегать использования любого имени, которое сохранено в стандарте,
в DB2, SQL Server или Oracle, мы поменяли имена
<span>MySQL extension</span>. Например, мы изменили
<code>COLLATION</code> на <code>TABLE_COLLATION</code>
в <a href="#tables-table"><code>TABLES</code></a>.
См. список зарезервированных слов в конце этой статьи:
<a href="../../../https@web.archive.org/web/20070428032454/www.dbazine.com/db2/db2-disarticles/gulutzan5"
target="_top">
https://web.archive.org/web/20070428032454/http://www.dbazine.com/db2/db2-disarticles/gulutzan5</a>.
</p>

<h2><a name="idm139965295816992"></a>Соглашения в ссылочных разделах
INFORMATION_SCHEMA</h2>
<p>Следующие разделы описывают каждую из таблиц и столбцов в
<code>INFORMATION_SCHEMA</code>. Для каждого столбца есть три сведения:</p>

<ul><li><p><span><code>INFORMATION_SCHEMA</code> Name</span>
указывает на название столбца в <code>INFORMATION_SCHEMA</code>.
Это соответствует стандартному имени SQL, если поле
<span>Remarks</span> не говорит <span>MySQL extension</span>.</li>

<li><span><a href="sql.htm#show"><code>SHOW</code></a> Name</span>
указывает на эквивалентное имя поля в самом близком запросе
<a href="sql.htm#show"><code>SHOW</code></a>, если такой есть.</li>

<li><span>Remarks</span> обеспечивает дополнительную информацию где
применимо. Если эта область <code>NULL</code>, это означает, что значение
столбца всегда <code>NULL</code>. Если эта область говорит
<span>MySQL extension</span>, столбец является расширением
MySQL к стандартному SQL.</p></li></ul>

<p>Много разделов указывают, что <a href="sql.htm#show"><code>SHOW</code></a>
эквивалентен <a href="sql.htm#select"><code>SELECT</code></a>, который
получает информацию от <code>INFORMATION_SCHEMA</code>. Для
<a href="sql.htm#show"><code>SHOW</code></a>, которые показывают информацию
для базы данных по умолчанию, если Вы опускаете <code>FROM
<em><code>db_name</code></em></code>, Вы можете часто выбирать информацию для
базы данных по умолчанию, добавляя выражение
<code>AND TABLE_SCHEMA = SCHEMA()</code> в предложении <code>WHERE</code>
запроса, который получает информацию от <code>INFORMATION_SCHEMA</code>.</p>

<h2><a name="idm139965295794896"></a>Соответствующая информация</h2>
<p>Эти разделы обсуждают дополнительные
темы <code>INFORMATION_SCHEMA</code>:</p>

<ul><li><p>Информация о таблицах <code>INFORMATION_SCHEMA</code>,
определенных для <a href="innodb.htm"><code>InnoDB</code></a>:
<a href="#innodb-i_s-tables">раздел 22.30</a>.</li>

<li>Ответы на вопросы, которые часто задают
относительно <code>INFORMATION_SCHEMA</code>:
<a href="faqs.html#faqs-information-schema">раздел A.7</a>.</li>

<li>Запросы и оптимизация <code>INFORMATION_SCHEMA</code>:
<a href="optimiz.htm#information-schema-optimization">раздел 9.2.4</a>.</li>

<li>Эффект сопоставления на <code>INFORMATION_SCHEMA</code>:
<a href="global.htm#charset-collation-information-schema">раздел 11.1.8.7
</a>.</p></li></ul>

<h2><a name="character-sets-table"></a>22.1. Таблица
INFORMATION_SCHEMA CHARACTER_SETS</h2>
<p>Таблица <a href="#character-sets-table"><code>CHARACTER_SETS
</code></a> предоставляет информацию о доступных наборах символов.</p>

<table border="1">
<thead><tr><th scope="col"><code>INFORMATION_SCHEMA</code> Name</th>
<th scope="col"><a href="sql.htm#show"><code>SHOW</code></a> Name</th>
<th scope="col">Remarks</th></tr></thead>
<tbody><tr><td scope="row"><code>CHARACTER_SET_NAME</code></td>
<td><code>Charset</code></td><td> </td></tr>
<tr><td scope="row"><code>DEFAULT_COLLATE_NAME</code></td>
<td><code>Default collation</code></td><td> </td></tr>
<tr><td scope="row"><code>Описание</code></td>
<td><code>Описание</code></td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>MAXLEN</code></td>
<td><code>Maxlen</code></td><td>MySQL extension</td></tr></tbody></table>

<p>Следующие запросы эквивалентны:
<pre>
SELECT * FROM INFORMATION_SCHEMA.CHARACTER_SETS
         [WHERE CHARACTER_SET_NAME LIKE '<em><code>wild</code></em>']
SHOW CHARACTER SET [LIKE '<em><code>wild</code></em>']
</pre>

<h2><a name="collations-table"></a>22.2. Таблица
INFORMATION_SCHEMA COLLATIONS</h2>
<p>Таблица <a href="#collations-table"><code>COLLATIONS</code></a>
предоставляет информацию о сопоставлениях для каждого набора символов.</p>

<table border="1">
<thead><tr><th scope="col"><code>INFORMATION_SCHEMA</code> Name</th>
<th scope="col"><a href="sql.htm#show"><code>SHOW</code></a> Name</th>
<th scope="col">Remarks</th></tr></thead>
<tbody><tr><td scope="row"><code>COLLATION_NAME</code></td>
<td><code>Collation</code></td><td> </td></tr>
<tr><td scope="row"><code>CHARACTER_SET_NAME</code></td>
<td><code>Charset</code></td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>ID</code></td><td><code>Id</code></td>
<td>MySQL extension</td></tr>
<tr><td scope="row"><code>IS_DEFAULT</code></td><td><code>Default</code></td>
<td>MySQL extension</td></tr>
<tr><td scope="row"><code>IS_COMPILED</code></td><td><code>Compiled</code>
</td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>SORTLEN</code></td><td><code>Sortlen</code></td>
<td>MySQL extension</td></tr></tbody></table>

<ul><li><p><code>COLLATION_NAME</code> имя сопоставления.</li>
<li><code>CHARACTER_SET_NAME</code> название набора символов, с
которым связано сопоставление.</li>
<li><code>ID</code> ID сопоставления.</li>

<li><code>IS_DEFAULT</code> указывает, является ли сопоставление значением по
умолчанию для своего набора символов.</li>
<li><code>IS_COMPILED</code> указывает, собран ли набор символов в сервере.
</li>
<li><code>SORTLEN</code> связан с количеством памяти, требуемой, чтобы
сортировать строки, выраженные в наборе символов.</p></li></ul>

<p>Информация о сопоставлении также доступна из
<a href="sql.htm#show-collation"><code>SHOW COLLATION</code></a>.
Следующие запросы эквивалентны:
<pre>
SELECT COLLATION_NAME FROM INFORMATION_SCHEMA.COLLATIONS
       [WHERE COLLATION_NAME LIKE '<em><code>wild</code></em>']
SHOW COLLATION [LIKE '<em><code>wild</code></em>']
</pre>

<h2><a name="collation-character-set-applicability-table"></a>22.3.
Таблица INFORMATION_SCHEMA COLLATION_CHARACTER_SET_APPLICABILITY</h2>
<p>Таблица <a href="#collation-character-set-applicability-table">
<code>COLLATION_CHARACTER_SET_APPLICABILITY</code></a> показывает, какой
набор символов для какого сопоставления применим. Столбцы эквивалентны первым
двум полям, которые Вы получите в выводе
<a href="sql.htm#show-collation"><code>SHOW COLLATION</code></a>.</p>

<table border="1">
<thead><tr><th scope="col"><code>INFORMATION_SCHEMA</code> Name</th>
<th scope="col"><a href="sql.htm#show"><code>SHOW</code></a> Name</th>
<th scope="col">Remarks</th></tr></thead>
<tbody><tr><td scope="row"><code>COLLATION_NAME</code></td>
<td><code>Collation</code></td><td> </td></tr>
<tr><td scope="row"><code>CHARACTER_SET_NAME</code></td>
<td><code>Charset</code></td><td> </td></tr></tbody></table>

<h2><a name="columns-table"></a>22.4. Таблица INFORMATION_SCHEMA COLUMNS</h2>
<p>Таблица <a href="#columns-table"><code>COLUMNS</code></a>
предоставляет информацию о столбцах в таблицах.</p>

<table border="1">
<thead><tr><th scope="col"><code>INFORMATION_SCHEMA</code> Name</th>
<th scope="col"><a href="sql.htm#show"><code>SHOW</code></a> Name</th>
<th scope="col">Remarks</th></tr></thead>
<tbody><tr><td scope="row"><code>TABLE_CATALOG</code></td><td> </td><td>
<code>def</code></td></tr>
<tr><td scope="row"><code>TABLE_SCHEMA</code></td><td> </td><td> </td></tr>
<tr><td scope="row"><code>TABLE_NAME</code></td><td> </td><td> </td></tr>
<tr><td scope="row"><code>COLUMN_NAME</code></td><td><code>Field</code></td>
<td> </td></tr>
<tr><td scope="row"><code>ORDINAL_POSITION</code></td><td> </td><td>см.
примечания</td></tr>
<tr><td scope="row"><code>COLUMN_DEFAULT</code></td><td><code>Default</code>
</td><td> </td></tr>
<tr><td scope="row"><code>IS_NULLABLE</code></td><td><code>Null</code></td>
<td> </td></tr>
<tr><td scope="row"><code>DATA_TYPE</code></td><td><code>Type</code></td>
<td> </td></tr>
<tr><td scope="row"><code>CHARACTER_MAXIMUM_LENGTH</code></td><td><code>Type
</code></td><td> </td></tr>
<tr><td scope="row"><code>CHARACTER_OCTET_LENGTH</code></td><td> </td>
<td> </td></tr>
<tr><td scope="row"><code>NUMERIC_PRECISION</code></td><td><code>Type</code>
</td><td> </td></tr>
<tr><td scope="row"><code>NUMERIC_SCALE</code></td><td><code>Type</code></td>
<td> </td></tr>
<tr><td scope="row"><code>DATETIME_PRECISION</code></td><td><code>Type</code>
</td><td> </td></tr>
<tr><td scope="row"><code>CHARACTER_SET_NAME</code></td><td> </td><td> </td>
</tr>
<tr><td scope="row"><code>COLLATION_NAME</code></td><td><code>Collation
</code></td><td> </td></tr>
<tr><td scope="row"><code>COLUMN_TYPE</code></td><td><code>Type</code></td>
<td>MySQL extension</td></tr>
<tr><td scope="row"><code>COLUMN_KEY</code></td><td><code>Key</code></td>
<td>MySQL extension</td></tr>
<tr><td scope="row"><code>EXTRA</code></td><td><code>Extra</code></td>
<td>MySQL extension</td></tr>
<tr><td scope="row"><code>PRIVILEGES</code></td><td><code>Privileges</code>
</td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>COLUMN_COMMENT</code></td><td><code>Comment</code>
</td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>GENERATION_EXPRESSION</code></td><td> </td>
<td>MySQL extension</td></tr></tbody></table>

<p><span><strong>Примечания</strong></span>:</p>
<ul><li><p>В <a href="sql.htm#show"><code>SHOW</code></a> <code>Type</code>
включает значения нескольких отличающихся столбцов
<a href="#columns-table"><code>COLUMNS</code></a>.</li>

<li><code>ORDINAL_POSITION</code> необходимо, потому что Вы могли бы хотеть
сказать <code>ORDER BY ORDINAL_POSITION</code>. В отличие от
<a href="sql.htm#show"><code>SHOW</code></a>,
<a href="sql.htm#select"><code>SELECT</code></a>
не имеет автоматического упорядочивания.</li>

<li><code>CHARACTER_OCTET_LENGTH</code> должно быть то же самое, что и
<code>CHARACTER_MAXIMUM_LENGTH</code>, за исключением
многобайтовых наборов символов.</li>

<li><code>CHARACTER_SET_NAME</code> может быть получен из
<code>Collation</code>. Например, если Вы говорите
<code>SHOW FULL COLUMNS FROM t</code> и Вы видите в столбце
<code>Collation</code> значение <code>latin1_swedish_ci</code>,
набор символов то, что перед первым подчеркиванием: <code>latin1</code>.</li>

<li><code>GENERATION_EXPRESSION</code> непусто для произведенных столбцов и
выводит на экран выражение, используемое, чтобы вычислить значения столбцов.
Для информации о произведенных столбцах см.
<a href="sql.htm#create-table-generated-columns">
раздел 14.1.15.5</a>.</li>

<li>Столбец <code>EXTRA</code> содержит <code>VIRTUAL GENERATED</code> или
<code>VIRTUAL STORED</code> для произведенных столбцов.</p></li></ul>
<p>Следующие запросы почти эквивалентны:
<pre>
SELECT COLUMN_NAME, DATA_TYPE, IS_NULLABLE, COLUMN_DEFAULT
       FROM INFORMATION_SCHEMA.COLUMNS
       WHERE table_name = '<em><code>tbl_name</code></em>'
       [AND table_schema = '<em><code>db_name</code></em>']
       [AND column_name LIKE '<em><code>wild</code></em>']
SHOW COLUMNS FROM <em><code>tbl_name</code></em>
     [FROM <em><code>db_name</code></em>]
     [LIKE '<em><code>wild</code></em>']
</pre>

<h2><a name="column-privileges-table"></a>22.5.
Таблица INFORMATION_SCHEMA COLUMN_PRIVILEGES</h2>
<p>Таблица <a href="#column-privileges-table"><code>
COLUMN_PRIVILEGES</code></a> предоставляет информацию о привилегиях столбца.
Эта информация прибывает из таблицы <code>mysql.columns_priv</code>.</p>

<table border="1">
<thead><tr><th scope="col"><code>INFORMATION_SCHEMA</code> Name</th>
<th scope="col"><a href="sql.htm#show"><code>SHOW</code></a> Name</th>
<th scope="col">Remarks</th></tr></thead>
<tbody><tr><td scope="row"><code>GRANTEE</code></td><td> </td>
<td><code>'<em><code>user_name</code></em>'@'<em><code>host_name</code></em>'
</code>value</td></tr>
<tr><td scope="row"><code>TABLE_CATALOG</code></td><td> </td><td><code>def
</code></td></tr>
<tr><td scope="row"><code>TABLE_SCHEMA</code></td><td> </td><td> </td></tr>
<tr><td scope="row"><code>TABLE_NAME</code></td><td> </td><td> </td></tr>
<tr><td scope="row"><code>COLUMN_NAME</code></td><td> </td><td> </td></tr>
<tr><td scope="row"><code>PRIVILEGE_TYPE</code></td><td> </td><td> </td></tr>
<tr><td scope="row"><code>IS_GRANTABLE</code></td><td> </td>
<td> </td></tr></tbody></table>

<ul><li><p>В выводе из
<a href="sql.htm#show-columns"><code>SHOW FULL COLUMNS</code></a> все
привилегии в одном поле и в нижнем регистре, например,
<code>select,insert,update,references</code>. В
<a href="#column-privileges-table">
<code>COLUMN_PRIVILEGES</code></a>
есть одна привилегия на строку в верхнем регистре.</li>

<li><code>PRIVILEGE_TYPE</code> содержать одно (и только одно)
из этих значений: <a href="security.html#priv_select"><code>SELECT</code>
</a>, <a href="security.html#priv_insert"><code>INSERT</code></a>,
<a href="security.html#priv_update"><code>UPDATE</code></a>,
<a href="security.html#priv_references"><code>REFERENCES</code></a>.</li>

<li>Если пользователь имеет привилегию
<a href="security.html#priv_grant-option"><code>GRANT OPTION</code></a>,
<code>IS_GRANTABLE</code> будет <code>YES</code>. Иначе
<code>IS_GRANTABLE</code> будет <code>NO</code>. Вывод не перечисляет
<a href="security.html#priv_grant-option"><code>GRANT OPTION</code></a>
как отдельную привилегию.</p></li></ul>

<p>Следующие запросы <span><em>НЕ</em></span> эквивалентны:
<pre>
SELECT ... FROM INFORMATION_SCHEMA.COLUMN_PRIVILEGES
SHOW GRANTS ...
</pre>

<h2><a name="engines-table"></a>22.6.
Таблица INFORMATION_SCHEMA ENGINES</h2>
<p>Таблица <a href="#engines-table"><code>ENGINES</code></a>
предоставляет информацию о механизмах хранения.</p>

<table border="1">
<thead><tr><th scope="col"><code>INFORMATION_SCHEMA</code> Name</th>
<th scope="col"><a href="sql.htm#show"><code>SHOW</code></a> Name</th>
<th scope="col">Remarks</th></tr></thead>
<tbody><tr><td scope="row"><code>ENGINE</code></td><td><code>Engine</code>
</td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>SUPPORT</code></td><td><code>Support</code></td>
<td>MySQL extension</td></tr>
<tr><td scope="row"><code>COMMENT</code></td><td><code>Comment</code></td>
<td>MySQL extension</td></tr>
<tr><td scope="row"><code>TRANSACTIONS</code></td><td><code>Transactions
</code></td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>XA</code></td><td><code>XA</code></td>
<td>MySQL extension</td></tr>
<tr><td scope="row"><code>SAVEPOINTS</code></td><td><code>Savepoints</code>
</td><td>MySQL extension</td></tr></tbody></table>

<ul><li><p>Таблица <a href="#engines-table"><code>ENGINES</code>
</a> нестандартная. Ее содержание соответствует столбцам
<code>SHOW ENGINES</code>. Для описания его столбцов см.
<a href="sql.htm#show-engines">раздел 14.7.5.16</a>.</p></li></ul>

<h2><a name="events-table"></a>22.7. Таблица INFORMATION_SCHEMA EVENTS</h2>
<p>Таблица <a href="#events-table"><code>EVENTS</code></a>
предоставляет информацию о запланированных событиях, которые обсуждаются в
<a href="stored.htm#event-scheduler">разделе 21.4</a>. Значения соответствуют
<code>SHOW Name</code> именам столбцов
<a href="sql.htm#show-events"><code>SHOW EVENTS</code></a>.</p>

<table border="1">
<thead><tr><th scope="col"><code>INFORMATION_SCHEMA</code> Name</th>
<th scope="col"><a href="sql.htm#show"><code>SHOW</code></a> Name</th>
<th scope="col">Remarks</th></tr></thead>
<tbody><tr><td scope="row"><code>EVENT_CATALOG</code></td><td> </td>
<td><code>def</code>, MySQL extension</td></tr>
<tr><td scope="row"><code>EVENT_SCHEMA</code></td><td><code>Db</code></td>
<td>MySQL extension</td></tr>
<tr><td scope="row"><code>EVENT_NAME</code></td><td><code>Name</code></td>
<td>MySQL extension</td></tr>
<tr><td scope="row"><code>DEFINER</code></td><td><code>Definer</code></td>
<td>MySQL extension</td></tr>
<tr><td scope="row"><code>TIME_ZONE</code></td><td><code>Time zone</code>
</td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>EVENT_BODY</code></td><td> </td><td>MySQL extension
</td></tr>
<tr><td scope="row"><code>EVENT_DEFINITION</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>EVENT_TYPE</code></td><td><code>Type</code></td>
<td>MySQL extension</td></tr>
<tr><td scope="row"><code>EXECUTE_AT</code></td><td><code>Execute at</code>
</td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>INTERVAL_VALUE</code></td><td><code>Interval value
</code></td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>INTERVAL_FIELD</code></td><td><code>Interval field
</code></td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>SQL_MODE</code></td><td> </td><td>MySQL extension
</td></tr>
<tr><td scope="row"><code>STARTS</code></td><td><code>Starts</code></td><td>
MySQL extension</td></tr>
<tr><td scope="row"><code>ENDS</code></td><td><code>Ends</code></td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>STATUS</code></td><td><code>Status</code></td><td>
MySQL extension</td></tr>
<tr><td scope="row"><code>ON_COMPLETION</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>CREATED</code></td><td> </td><td>MySQL extension
</td></tr>
<tr><td scope="row"><code>LAST_ALTERED</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>LAST_EXECUTED</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>EVENT_COMMENT</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>ORIGINATOR</code></td><td><code>Originator</code>
</td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>CHARACTER_SET_CLIENT</code></td><td>
<code>character_set_client</code></td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>COLLATION_CONNECTION</code></td><td>
<a href="server.htm#sysvar_collation_connection"><code>collation_connection
</code></a></td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>DATABASE_COLLATION</code></td><td><code>Database
Collation</code></td><td>MySQL extension</td></tr></tbody></table>

<ul><li><p>Таблица <a href="#events-table"><code>EVENTS</code></a>
нестандартная.</li>
<li><code>EVENT_CATALOG</code>: Значение этого столбца всегда
<code>def</code>.</li>

<li><code>EVENT_SCHEMA</code>: Название схемы (базы данных), которой
принадлежит это событие.</li>
<li><code>EVENT_NAME</code>: Имя события.</li>

<li><code>DEFINER</code>: Учетная запись пользователя, который создал
событие, в формате <code>'<em><code>user_name</code></em>'@'<em><code>
host_name</code></em>'</code>.</li>

<li><code>TIME_ZONE</code>: Часовой пояс события, который является
часовым поясом, используемым для того, чтобы запланировать выполнение
события. Значение по умолчанию <code>SYSTEM</code>.</li>

<li><code>EVENT_BODY</code>: Язык, который используется для запросов в
предложении <a href="sql.htm#do"><code>DO</code></a> события,
в MySQL 8.0 это всегда <code>SQL</code>.</p>

<p>Этот столбец не должен быть перепутан со столбцом с тем же именем
(сейчас это <code>EVENT_DEFINITION</code>), который
существовал в более ранних версиях MySQL.</li>

<li><code>EVENT_DEFINITION</code>: Текст запроса SQL, составляющего
предложение <a href="sql.htm#do"><code>DO</code></a> события. Другими
словами, что будет событием выполнено.</li>

<li><code>EVENT_TYPE</code>: Тип повторения события <code>ONE TIME</code>
(одноразовое) или <code>RECURRING</code> (повторение).</li>
<li><code>EXECUTE_AT</code>: Для одноразового события это значение
<a href="types.htm#datetime"><code>DATETIME</code></a>, определенное в
предложении <code>AT</code> запроса
<a href="sql.htm#create-event"><code>CREATE EVENT</code></a>, которым
создали событие или последнего <a href="sql.htm#alter-event"><code>ALTER
EVENT</code></a>, которым его меняли. Значение, показанное в этом столбце,
отражает дополнение или вычитание любого значения
<code>INTERVAL</code> включено в <code>AT</code> события.
Например, если событие создается, используя
<code>ON SCHEDULE AT CURRENT_TIMESTAMP + '1:6' DAY_HOUR</code> в
2006-02-09 14:05:30, значение, показанное в этом столбце, будет
<code>'2006-02-10 20:05:30'</code>.</p>

<p>Если синхронизация определена
<code>EVERY</code> вместо <code>AT</code> (то есть, если событие
повторяется), значение этого столбца <code>NULL</code>.</li>

<li><code>INTERVAL_VALUE</code>: Для повторяемых событий
этот столбец содержит числовую часть предложения <code>EVERY</code>.</p>
<p>Для одноразового события (определенного через <code>AT</code>)
этот столбец <code>NULL</code>.</li>

<li><code>INTERVAL_FIELD</code>: Для повторяемых событий
этот столбец содержит модульную часть <code>EVERY</code>. Таким образом, этот
столбец содержит такое значение, как
'<a href="types.htm#year"><code>YEAR</code></a>',
'<code>QUARTER</code>', '<code>DAY</code>' или нечто подобное.</p>
<p>Для одноразового события этот столбец <code>NULL</code>.</li>

<li><code>SQL_MODE</code>: Режим SQL, когда событие было создано или
изменено. Именно в нем оно и выполнится. Для разрешенных значений см.
<a href="server.htm#sql-mode">раздел 6.1.8</a>.</li>

<li><code>STARTS</code>: Для повторяемых событий, определение которых
включает <code>STARTS</code>, этот столбец содержит значение
<a href="types.htm#datetime"><code>DATETIME</code></a>. Как со столбцом
<code>EXECUTE_AT</code>, это значение решает любые используемые выражения.
Если предложения <code>STARTS</code> нет, этот столбец <code>NULL</code>.
</li>

<li><code>ENDS</code>: Для повторяемых событий, определение которых
включает <code>ENDS</code>, этот столбец содержит значение
<a href="types.htm#datetime"><code>DATETIME</code></a>. Как со столбцом
<code>EXECUTE_AT</code>, это значение решает любые используемые выражения.
Если предложения <code>ENDS</code> нет, этот столбец <code>NULL</code>.</li>

<li><code>STATUS</code>: Одно из трех значений: <code>ENABLED</code>,
<code>DISABLED</code> или <code>SLAVESIDE_DISABLED</code>.</p>
<p><code>SLAVESIDE_DISABLED</code> указывает, что создание события
произошло на другом сервере MySQL, действующем как ведущее устройство
репликации, и событие скопировалось к текущему серверу MySQL, который
действует как ведомое устройство, но теперь событие не запускается на ведомом
устройстве. См. <a href="replica.htm#replication-features-invoked">раздел
19.4.1.12</a>.</li>

<li><code>ON_COMPLETION</code>: Одно из двух значений:
<code>PRESERVE</code> или <code>NOT PRESERVE</code>.</li>
<li><code>CREATED</code>: Дата и время, когда событие создано. Значение
<a href="types.htm#datetime"><code>TIMESTAMP</code></a>.</li>

<li><code>LAST_ALTERED</code>: Дата и время, когда событие в последний раз
редактировалось. Значение <a href="types.htm#datetime"><code>TIMESTAMP</code>
</a>. Если событие не было изменено начиная с его создания, этот столбец
содержит то же самое значение, что и <code>CREATED</code>.</li>

<li><code>LAST_EXECUTED</code>: Дата и время, когда событие в последний раз
выполнялось. Значение <a href="types.htm#datetime"><code>DATETIME</code></a>.
Если событие никогда не выполнялось, этот столбец <code>NULL</code>.</p>

<p><code>LAST_EXECUTED</code> указывает, когда событие стартовало. В
результате столбец <code>ENDS</code> никогда не меньше
<code>LAST_EXECUTED</code>.</li>

<li><code>EVENT_COMMENT</code>: Текст комментария, если у события он есть.
В противном случае значение этого столбца пустая строка.</li>
<li><code>ORIGINATOR</code>: ID сервера MySQL, на котором создавалось
событие. Значение по умолчанию 0. Используется в репликации.</li>

<li><code>CHARACTER_SET_CLIENT</code>: Значение сеансовой переменной
<a href="server.htm#sysvar_character_set_client"><code>character_set_client
</code></a>, когда событие создавалось.</li>

<li><code>COLLATION_CONNECTION</code>: Значение сеансовой переменной
<a href="server.htm#sysvar_collation_connection"><code>collation_connection
</code></a>, когда событие создавалось.</li>
<li><code>DATABASE_COLLATION</code>: Сопоставление базы данных, с
которой связано событие.</p></li></ul>

<p><span><strong>Пример</strong></span>: Предположите что пользователь
<code>jon@ghidora</code> создал событие <code>e_daily</code>, а потом его
отредактировал несколько минут спустя, используя
<a href="sql.htm#alter-event"><code>ALTER EVENT</code></a>,
как показано здесь:
<pre>
DELIMITER |

CREATE EVENT e_daily ON SCHEDULE EVERY 1 DAY
       COMMENT 'Saves total number of sessions then clears the table each day'
       DO BEGIN
       INSERT INTO site_activity.totals (time, total)
       SELECT CURRENT_TIMESTAMP, COUNT(*) FROM site_activity.sessions;
       DELETE FROM site_activity.sessions;
   END |
DELIMITER ;
ALTER EVENT e_daily ENABLE;
</pre>
Отметьте, что комментарии могут охватить много строк.</p>

Этот пользователь может тогда выполнить следующий запрос
<a href="sql.htm#select"><code>SELECT</code></a>
и получает показанный вывод:
<pre>
mysql&gt; SELECT * FROM INFORMATION_SCHEMA.EVENTS
     &gt;          WHERE EVENT_NAME = 'e_daily' AND
     &gt;          EVENT_SCHEMA = 'myschema'\G
*************************** 1. row ***************************
   EVENT_CATALOG: def
EVENT_SCHEMA: test
EVENT_NAME: e_daily
   DEFINER: me@localhost
 TIME_ZONE: SYSTEM
EVENT_BODY: SQL
EVENT_DEFINITION: BEGIN
INSERT INTO site_activity.totals (time, total)
SELECT CURRENT_TIMESTAMP, COUNT(*)
  FROM site_activity.sessions;
DELETE FROM site_activity.sessions;
  END
EVENT_TYPE: RECURRING
EXECUTE_AT: NULL
  INTERVAL_VALUE: 1
  INTERVAL_FIELD: DAY
  SQL_MODE:
STARTS: 2008-09-03 12:13:39
  ENDS: NULL
STATUS: ENABLED
   ON_COMPLETION: NOT PRESERVE
   CREATED: 2008-09-03 12:13:39
LAST_ALTERED: 2008-09-03 12:13:39
   LAST_EXECUTED: NULL
   EVENT_COMMENT: Saves total number of sessions then clears the
table each day
ORIGINATOR: 1
CHARACTER_SET_CLIENT: latin1
COLLATION_CONNECTION: latin1_swedish_ci
  DATABASE_COLLATION: latin1_swedish_ci
</pre>

Времена в таблице <a href="#events-table"><code>EVENTS</code></a>
выведены, используя часовой пояс событий или текущий часовой пояс сеанса, как
описано в <a href="stored.htm#events-metadata">разделе 21.4.4</a>.</p>

<h2><a name="files-table"></a>22.8. Таблица INFORMATION_SCHEMA FILES</h2>
<p>Таблица <a href="#files-table"><code>FILES</code></a>
предоставляет информацию о файлах, в которых хранятся данные о
табличном пространстве MySQL.</p>

<p><a href="#files-table"><code>INFORMATION_SCHEMA.FILES</code></a>
предоставляет сведения о файлах данных
<a href="../../../dev.mysql.com/doc/refman/5.7/en/mysql-cluster.html"
target="_top"><code>NDB</code></a> и <code>InnoDB</code>.</p>

<table border="1">
<thead><tr><th scope="col"><code>INFORMATION_SCHEMA</code> Name</th>
<th scope="col"><a href="sql.htm#show"><code>SHOW</code></a> Name</th>
<th scope="col">Remarks</th></tr></thead>
<tbody><tr><td scope="row"><code>FILE_ID</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>FILE_NAME</code></td><td> </td><td>MySQL extension
</td></tr>
<tr><td scope="row"><code>FILE_TYPE</code></td><td> </td><td>MySQL extension
</td></tr>
<tr><td scope="row"><code>TABLESPACE_NAME</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>TABLE_CATALOG</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>TABLE_SCHEMA</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>TABLE_NAME</code></td><td> </td><td>MySQL extension
</td></tr>
<tr><td scope="row"><code>LOGFILE_GROUP_NAME</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>LOGFILE_GROUP_NUMBER</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>ENGINE</code></td><td> </td><td>MySQL extension
</td></tr>
<tr><td scope="row"><code>FULLTEXT_KEYS</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>DELETED_ROWS</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>UPDATE_COUNT</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>FREE_EXTENTS</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>TOTAL_EXTENTS</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>EXTENT_SIZE</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>INITIAL_SIZE</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>MAXIMUM_SIZE</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>AUTOEXTEND_SIZE</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>CREATION_TIME</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>LAST_UPDATE_TIME</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>LAST_ACCESS_TIME</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>RECOVER_TIME</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>TRANSACTION_COUNTER</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>VERSION</code></td><td> </td><td>MySQL extension
</td></tr>
<tr><td scope="row"><code>ROW_FORMAT</code></td><td> </td><td>MySQL extension
</td></tr>
<tr><td scope="row"><code>TABLE_ROWS</code></td><td> </td><td>MySQL extension
</td></tr>
<tr><td scope="row"><code>AVG_ROW_LENGTH</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>DATA_LENGTH</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>MAX_DATA_LENGTH</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>INDEX_LENGTH</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>DATA_FREE</code></td><td> </td><td>MySQL extension
</td></tr>
<tr><td scope="row"><code>CREATE_TIME</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>UPDATE_TIME</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>CHECK_TIME</code></td><td> </td><td>MySQL extension
</td></tr>
<tr><td scope="row"><code>CHECKSUM</code></td><td> </td><td>MySQL extension
</td></tr>
<tr><td scope="row"><code>STATUS</code></td><td> </td><td>MySQL extension
</td></tr>
<tr><td scope="row"><code>EXTRA</code></td><td> </td><td>MySQL extension</td>
</tr></tbody></table>

<p>Следующие примечания относятся к <code>InnoDB</code>. Поля
<a href="#files-table"><code>INFORMATION_SCHEMA.FILES</code></a>,
которые не описаны ниже, не применимы к
<code>InnoDB</code> и имеют значение <code>NULL</code>.</p>

<ul><li><p>Данные, о которых сообщает
<a href="#files-table"><code>INFORMATION_SCHEMA.FILES</code></a>,
берутся из кэш-памяти <code>InnoDB</code> для открытых файлов. Для
<a href="#innodb-sys-datafiles-table"><code>
INFORMATION_SCHEMA.INNODB_SYS_DATAFILES</code></a> источником данных является
внутренняя таблица <code>SYS_DATAFILES</code>
словаря данных <code>InnoDB</code>.</li>

<li>Данные, о которых сообщает
<a href="#files-table"><code>INFORMATION_SCHEMA.FILES</code></a>
включает временные данные о табличном пространстве. Эти данные недоступны
во внутренней таблице <code>SYS_DATAFILES</code> словаря данных
и поэтому не сообщаются <a href="#innodb-sys-datafiles-table">
<code>INNODB_SYS_DATAFILES</code></a>.</li>

<li>Данные о табличном пространстве отмены сообщаются
<a href="#files-table"><code>INFORMATION_SCHEMA.FILES</code></a>
когда отдельные табличные пространства отмены сконфигурированы, используя
опцию <a href="innodb.htm#sysvar_innodb_undo_tablespaces"><code>
innodb_undo_tablespaces</code></a>.</li>

<li><code>FILE_ID</code> ID табличного пространства, также называемое
<code>space_id</code> или <code>fil_space_t::id</code>.</li>
<li><code>FILE_NAME</code> название файла с данными. У файла на
таблицу и общих табличных пространств есть расширение <code>.ibd</code>.
Табличные пространства отмены имеют префикс <code>undo</code>.
Системное табличное пространство имеет префикс <code>ibdata</code>.
Временные табличные пространства имеет префикс <code>ibtmp</code>.
Имя файла включает путь к файлу, который может быть указан относительно
каталога данных MySQL (<a href="server.htm#sysvar_datadir"><code>datadir
</code></a>).</li>

<li><code>FILE_TYPE</code> тип файла табличного пространства. Есть три
возможных типа файла для файлов <code>InnoDB</code>. <code>TABLESPACE</code>
тип файла для любой системы, общий или файл табличного пространства файла на
таблицу, который содержит таблицы, индексы или другие формы пользовательских
данных. <code>TEMPORARY</code> тип файла для временных табличных пространств.
<code>UNDO LOG</code> тип файла для табличных пространств журнала отмены,
которые содержат отчеты отмены. По умолчанию отчеты отмены сохранены в
системном табличном пространстве. Отдельные табличные пространства журнала
отмены могут быть добавлены, используя опцию
<a href="innodb.htm#sysvar_innodb_undo_tablespaces"><code>
innodb_undo_tablespaces</code></a>.</li>

<li><code>TABLESPACE_NAME</code> название SQL табличного пространства. Общее
имя табличного пространства <code>SYS_TABLESPACES.NAME</code>.
Для других файлов табличного пространства имена начинаются с
<code>innodb_</code>, such as <code>innodb_system</code>,
<code>innodb_undo</code> и <code>innodb_file_per_table</code>.
Формат имени табличного пространства файла на таблицу
<code>innodb_file_per_table_<em><code>##</code></em></code>,
где <em><code>##</code></em> ID табличного пространства.</li>

<li><code>ENGINE</code> механизм хранения. Для <code>InnoDB</code>
значение всегда <code>InnoDB</code>.</li>
<li><code>FREE_EXTENTS</code> число полностью свободных экстентов в
текущем файле с данными.</li>

<li><code>TOTAL_EXTENTS</code> число полных объемов, используемых в текущем
файле с данными. Любой частичный экстент в конце файла не посчитан.</li>
<li><code>EXTENT_SIZE</code> 1048576 (1MB) для файлов с размером страниц в
4k, 8k или 16k. Размер экстента 2097152 (2MB) для файлов с размером страниц
32k и 4194304 (4MB) для файлов с размером страниц 64k.
<a href="#files-table"><code>INFORMATION_SCHEMA.FILES</code></a>
не сообщает размер страницы <code>InnoDB</code>. Он определен в опции
<a href="innodb.htm#sysvar_innodb_page_size"><code>innodb_page_size</code>
</a>. Размер экстента может также быть получен из
<a href="#innodb-sys-tablespaces-table"><code>
INNODB_SYS_TABLESPACES</code></a>, где
<code>FILES.FILE_ID = INNODB_SYS_TABLESPACES.SPACE_ID</code>.</li>

<li><code>INITIAL_SIZE</code> начальный размер файла в байтах.</li>
<li><code>MAXIMUM_SIZE</code> максимальное количество байтов, позволенных в
файле. Значение <code>NULL</code> для всех файлов с данными за исключением
предопределенных системных файлов с данными табличного пространства.
Максимальный системный размер файла табличного пространства определен
<a href="innodb.htm#sysvar_innodb_data_file_path"><code>innodb_data_file_path
</code></a>. Максимальный временный размер файла табличного пространства
определен <a href="innodb.htm#sysvar_innodb_temp_data_file_path"><code>
innodb_temp_data_file_path</code></a>. Значение <code>NULL</code>
для предопределенного системного файла с данными табличного пространства
указывает, что предел размера файла не был определен явно.</li>

<li><code>AUTOEXTEND_SIZE</code> размер авторасширения, определенный
<a href="innodb.htm#sysvar_innodb_data_file_path"><code>innodb_data_file_path
</code></a> для системного табличного пространства или определенный
<a href="innodb.htm#sysvar_innodb_temp_data_file_path"><code>
innodb_temp_data_file_path</code></a> для временных табличных пространств.
</li>

<li><code>DATA_FREE</code> общая сумма свободного пространства (в байтах) для
всего табличного пространства. У предопределенных системных табличных
пространств, которые включают системное табличное пространство и временные
табличные пространства, может быть один или более файлов с данными.</li>

<li><code>STATUS</code> <code>NORMAL</code> по умолчанию. Табличные
пространства файла на таблицу могут сообщить <code>IMPORTING</code>,
который указывает, что табличное пространство еще не доступно.</li>

<li>Следующий запрос возвращает все данные, подходящие для
табличных пространств <code>InnoDB</code>.
<pre>
mysql&gt; SELECT FILE_ID, FILE_NAME, FILE_TYPE, TABLESPACE_NAME,
                 FREE_EXTENTS, TOTAL_EXTENTS, EXTENT_SIZE, INITIAL_SIZE,
                 MAXIMUM_SIZE, AUTOEXTEND_SIZE, DATA_FREE, STATUS ENGINE
                 FROM INFORMATION_SCHEMA.FILES \G
</pre></li></ul>

<h2><a name="status-table"></a>22.9. Таблицы
INFORMATION_SCHEMA GLOBAL_STATUS и SESSION_STATUS</h2>
<p>Значение переменной <a href="server.htm#sysvar_show_compatibility_56">
<code>show_compatibility_56</code></a> затрагивает информацию, доступную из
таблиц, описанных здесь. Для деталей см. описание этой переменной в
<a href="server.htm#server-system-variables">разделе 6.1.5</a>.</p>

<p>Информация, доступная из таблиц, описанных здесь, также доступна из
Performance Schema. Таблицы <code>INFORMATION_SCHEMA</code> устарели в
предпочтении к Performance Schema и будут удалены в будущем выпуске MySQL.
Для совета относительно перемещения от <code>INFORMATION_SCHEMA</code> на
Performance Schema см.
<a href="perfor.htm#performance-schema-variable-table-migration">раздел
23.17</a>.</p>

<p>Таблицы <a href="#status-table"><code>GLOBAL_STATUS</code></a>
и <a href="#status-table"><code>SESSION_STATUS</code></a>
предоставляют информацию о переменных состояния сервера. Их содержание
соответствует информации, произведенной запросами
<a href="sql.htm#show-status"><code>SHOW GLOBAL STATUS</code></a> и
<a href="sql.htm#show-status"><code>SHOW SESSION STATUS</code></a> (см.
<a href="sql.htm#show-status">раздел 14.7.5.35</a>).</p>

<table border="1">
<thead><tr><th scope="col"><code>INFORMATION_SCHEMA</code> Name</th>
<th scope="col"><a href="sql.htm#show"><code>SHOW</code></a> Name</th>
<th scope="col">Remarks</th></tr></thead>
<tbody><tr><td scope="row">VARIABLE_NAME</td><td>Variable_name</td><td> </td>
</tr>
<tr><td scope="row">VARIABLE_VALUE</td><td>Value</td><td> </td>
</tr></tbody></table>
<ul><li><p>Столбец <code>VARIABLE_VALUE</code> для каждой из этих таблиц
определен как <code>VARCHAR(1024)</code>.</p></li></ul>

<h2><a name="variables-table"></a>22.10. Таблицы
INFORMATION_SCHEMA GLOBAL_VARIABLES и SESSION_VARIABLES</h2>
<p>Значение переменной <a href="server.htm#sysvar_show_compatibility_56">
<code>show_compatibility_56</code></a> затрагивает информацию, доступную из
таблиц, описанных здесь. Для деталей см. описание этой переменной в
<a href="server.htm#server-system-variables">разделе 6.1.5</a>.</p>

<p>Информация, доступная из таблиц, описанных здесь, также доступна из
Performance Schema. Таблицы <code>INFORMATION_SCHEMA</code> устарели в
предпочтении к Performance Schema и будут удалены в будущем выпуске MySQL.
Для совета относительно перемещения от <code>INFORMATION_SCHEMA</code> на
Performance Schema см.
<a href="perfor.htm#performance-schema-variable-table-migration">раздел
23.17</a>.</p>

<p>Таблицы <a href="#variables-table"><code>GLOBAL_VARIABLES</code>
</a> и <a href="#variables-table"><code>SESSION_VARIABLES</code>
</a> предоставляют информацию о переменных состояния сервера. Их содержание
соответствует информации, произведенной запросами
<a href="sql.htm#show-variables"><code>SHOW GLOBAL VARIABLES</code></a> и
<a href="sql.htm#show-variables"><code>SHOW SESSION VARIABLES</code></a> (см.
<a href="sql.htm#show-variables">раздел 14.7.5.39</a>).</p>

<table border="1">
<thead><tr><th scope="col"><code>INFORMATION_SCHEMA</code> Name</th>
<th scope="col"><a href="sql.htm#show"><code>SHOW</code></a> Name</th>
<th scope="col">Remarks</th></tr></thead>
<tbody><tr><td scope="row">VARIABLE_NAME</td><td>Variable_name</td>
<td> </td></tr>
<tr><td scope="row">VARIABLE_VALUE</td><td>Value</td><td> </td>
</tr></tbody></table>

<ul><li><p>Столбец <code>VARIABLE_VALUE</code> для каждой из этих таблиц
определен как <code>VARCHAR(1024)</code>. Для переменных с очень длинными
значениями, которые не полностью выведены на экран, надо использовать
<a href="sql.htm#select"><code>SELECT</code></a>, например:
<pre>
SELECT @@GLOBAL.innodb_data_file_path;
</pre></li></ul>

<h2><a name="key-column-usage-table"></a>22.11.
Таблица INFORMATION_SCHEMA KEY_COLUMN_USAGE</h2>
<p>Таблица <a href="#key-column-usage-table"><code>KEY_COLUMN_USAGE
</code></a> описывает, у каких ключевых столбцов есть ограничения.</p>

<table border="1">
<thead><tr><th scope="col"><code>INFORMATION_SCHEMA</code> Name</th>
<th scope="col"><a href="sql.htm#show"><code>SHOW</code></a> Name</th>
<th scope="col">Remarks</th></tr></thead>
<tbody><tr><td scope="row"><code>CONSTRAINT_CATALOG</code></td><td> </td><td>
<code>def</code></td></tr>
<tr><td scope="row"><code>CONSTRAINT_SCHEMA</code></td><td> </td><td> </td>
</tr>
<tr><td scope="row"><code>CONSTRAINT_NAME</code></td><td> </td><td> </td></tr>
<tr><td scope="row"><code>TABLE_CATALOG</code></td><td> </td><td><code>def
</code></td></tr>
<tr><td scope="row"><code>TABLE_SCHEMA</code></td><td> </td><td> </td></tr>
<tr><td scope="row"><code>TABLE_NAME</code></td><td> </td><td> </td></tr>
<tr><td scope="row"><code>COLUMN_NAME</code></td><td> </td><td> </td></tr>
<tr><td scope="row"><code>ORDINAL_POSITION</code></td><td> </td><td> </td>
</tr>
<tr><td scope="row"><code>POSITION_IN_UNIQUE_CONSTRAINT</code></td><td> </td>
<td> </td></tr>
<tr><td scope="row"><code>REFERENCED_TABLE_SCHEMA</code></td><td> </td>
<td> </td></tr>
<tr><td scope="row"><code>REFERENCED_TABLE_NAME</code></td><td> </td>
<td> </td></tr>
<tr><td scope="row"><code>REFERENCED_COLUMN_NAME</code></td><td> </td>
<td> </td></tr></tbody></table>

<ul><li><p>Если ограничение внешний ключ, то это столбец внешнего ключа, а не
столбец ссылки внешнего ключа.</li>
<li>Значение <code>ORDINAL_POSITION</code> это позиция столбца в пределах
ограничения, а не позиция столбца в пределах таблицы. Позиции столбца
пронумерованы, начиная с 1.</li>

<li>Значение <code>POSITION_IN_UNIQUE_CONSTRAINT</code> <code>NULL</code> для
ограничений уникального и первичного ключа. Для ограничений внешнего ключа
это порядковая позиция в ключе таблицы, на которую ссылаются.</p>

<p>Предположите, что есть два табличных имени <code>t1</code> и
<code>t3</code> со следующими определениями:
<pre>
CREATE TABLE t1 (s1 INT, s2 INT, s3 INT, PRIMARY KEY(s3)) ENGINE=InnoDB;
CREATE TABLE t3 (s1 INT, s2 INT, s3 INT, KEY(s1),
       CONSTRAINT CO FOREIGN KEY (s2) REFERENCES t1(s3)) ENGINE=InnoDB;
</pre>

Для этих двух таблиц <a href="#key-column-usage-table">
<code>KEY_COLUMN_USAGE</code></a> имеет две строки:</p>
<ul><li><p>
Одна строка с <code>CONSTRAINT_NAME</code> = <code>'PRIMARY'</code>,
<code>TABLE_NAME</code> = <code>'t1'</code>,
<code>COLUMN_NAME</code> = <code>'s3'</code>,
<code>ORDINAL_POSITION</code> = <code>1</code>,
<code>POSITION_IN_UNIQUE_CONSTRAINT</code> = <code>NULL</code>.</li>

<li>
Вторая строка с <code>CONSTRAINT_NAME</code> = <code>'CO'</code>,
<code>TABLE_NAME</code> = <code>'t3'</code>,
<code>COLUMN_NAME</code> = <code>'s2'</code>,
<code>ORDINAL_POSITION</code> = <code>1</code>,
<code>POSITION_IN_UNIQUE_CONSTRAINT</code> = <code>1</code>.
</p></li></ul></li></ul>

<h2><a name="optimizer-trace-table"></a>22.12. Таблица
INFORMATION_SCHEMA OPTIMIZER_TRACE</h2>
<p>Таблица <a href="#optimizer-trace-table"><code>OPTIMIZER_TRACE
</code></a> предоставляет информацию, произведенную трассировкой
оптимизатора. Чтобы включить трассировку, используйте переменную
<a href="server.htm#sysvar_optimizer_trace"><code>optimizer_trace</code></a>.
Подробности есть в руководстве
<a href="../../../dev.mysql.com/doc/internals/en/optimizer-tracing.html"
target="_top">MySQL Internals: Tracing the Optimizer</a>.</p>

<h2><a name="parameters-table"></a>22.13.
Таблица INFORMATION_SCHEMA PARAMETERS</h2>
<p>Таблица <a href="#parameters-table"><code>PARAMETERS</code></a>
предоставляет информацию о хранимой процедуре и функциональных параметрах и о
возвращаемых значениях для сохраненных функций. Информация о параметре
подобна содержанию столбца <code>param_list</code> в
таблице <code>mysql.proc</code>.</p>

<table border="1">
<thead><tr><th scope="col"><code>INFORMATION_SCHEMA</code> Name</th>
<th scope="col"><code>mysql.proc</code> Name</th><th scope="col">Remarks</th>
</tr></thead>
<tbody><tr><td scope="row"><code>SPECIFIC_CATALOG</code></td><td> </td>
<td><code>def</code></td></tr>
<tr><td scope="row"><code>SPECIFIC_SCHEMA</code></td><td><code>db</code></td>
<td>routine database</td></tr>
<tr><td scope="row"><code>SPECIFIC_NAME</code></td><td><code>name</code></td>
<td>routine name</td></tr>
<tr><td scope="row"><code>ORDINAL_POSITION</code></td><td> </td>
<td>1, 2, 3, ... для параметров, 0 для функций предложения
<code>RETURNS</code></td></tr>
<tr><td scope="row"><code>PARAMETER_MODE</code></td><td> </td>
<td><code>IN</code>, <code>OUT</code>, <code>INOUT</code>
(<code>NULL</code> для <code>RETURNS</code>)</td></tr>
<tr><td scope="row"><code>PARAMETER_NAME</code></td><td> </td>
<td>Имя параметра (<code>NULL</code> для <code>RETURNS</code>)</td></tr>
<tr><td scope="row"><code>DATA_TYPE</code></td><td> </td>
<td>same as for <a href="#columns-table"><code>COLUMNS</code></a>
table</td></tr>
<tr><td scope="row"><code>CHARACTER_MAXIMUM_LENGTH</code></td><td> </td>
<td>same as for <a href="#columns-table"><code>COLUMNS</code></a>
table</td></tr>
<tr><td scope="row"><code>CHARACTER_OCTET_LENGTH</code></td><td> </td>
<td>same as for <a href="#columns-table"><code>COLUMNS</code></a>
table</td></tr>
<tr><td scope="row"><code>NUMERIC_PRECISION</code></td><td> </td><td>same as
for <a href="#columns-table"><code>COLUMNS</code></a> table
</td></tr>
<tr><td scope="row"><code>NUMERIC_SCALE</code></td><td> </td><td>same as for
<a href="#columns-table"><code>COLUMNS</code></a> table</td></tr>
<tr><td scope="row"><code>DATETIME_PRECISION</code></td><td> </td><td>same as
for <a href="#columns-table"><code>COLUMNS</code></a> table</td>
</tr>
<tr><td scope="row"><code>CHARACTER_SET_NAME</code></td><td> </td><td>same as
for <a href="#columns-table"><code>COLUMNS</code></a> table</td>
</tr>
<tr><td scope="row"><code>COLLATION_NAME</code></td><td> </td><td>same as for
<a href="#columns-table"><code>COLUMNS</code></a> table</td></tr>
<tr><td scope="row"><code>DTD_IDENTIFIER</code></td><td> </td><td>same as for
<a href="#columns-table"><code>COLUMNS</code></a> table</td></tr>
<tr><td scope="row"><code>ROUTINE_TYPE</code></td><td>type</td><td>
same as for <a href="#routines-table"><code>ROUTINES</code></a>
table</td></tr></tbody></table>

<ul><li><p>Для последовательных параметров хранимой процедуры или функции
значения <code>ORDINAL_POSITION</code> 1, 2, 3 и т. д. Для сохраненной
функции есть также строка, которая описывает тип данных для предложения
<code>RETURNS</code>. Возвращаемое значение не истинный параметр, таким
образом, у строки, которая описывает его, есть эти уникальные характеристики:
</p>

<ul><li><p><code>ORDINAL_POSITION</code> 0.</li>
<li>Значения <code>PARAMETER_NAME</code> и
<code>PARAMETER_MODE</code> <code>NULL</code> потому, что у возвращаемого
значения нет никакого имени, и режим не применяется.</p></li></ul></li></ul>

<h2><a name="partitions-table"></a>22.14. Таблица
INFORMATION_SCHEMA PARTITIONS</h2>
<p>Таблица <a href="#partitions-table"><code>PARTITIONS</code></a>
предоставляет информацию о табличном разделении. См.
<a href="partit.htm">главу 20</a>.</p>

<table border="1">
<thead><tr><th scope="col"><code>INFORMATION_SCHEMA</code> Name</th>
<th scope="col"><a href="sql.htm#show"><code>SHOW</code></a> Name</th>
<th scope="col">Remarks</th></tr></thead>
<tbody><tr><td scope="row"><code>TABLE_CATALOG</code></td><td> </td>
<td>MySQL extension</td></tr>
<tr><td scope="row"><code>TABLE_SCHEMA</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>TABLE_NAME</code></td><td> </td><td>MySQL extension
</td></tr>
<tr><td scope="row"><code>PARTITION_NAME</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>SUBPARTITION_NAME</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>PARTITION_ORDINAL_POSITION</code></td><td> </td>
<td>MySQL extension</td></tr>
<tr><td scope="row"><code>SUBPARTITION_ORDINAL_POSITION</code></td><td> </td>
<td>MySQL extension</td></tr>
<tr><td scope="row"><code>PARTITION_METHOD</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>SUBPARTITION_METHOD</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>PARTITION_EXPRESSION</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>SUBPARTITION_EXPRESSION</code></td><td> </td><td>
MySQL extension</td></tr>
<tr><td scope="row"><code>PARTITION_DESCRIPTION</code></td><td> </td><td>
MySQL extension</td></tr>
<tr><td scope="row"><code>TABLE_ROWS</code></td><td> </td><td>MySQL extension
</td></tr>
<tr><td scope="row"><code>AVG_ROW_LENGTH</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>DATA_LENGTH</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>MAX_DATA_LENGTH</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>INDEX_LENGTH</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>DATA_FREE</code></td><td> </td><td>MySQL extension
</td></tr>
<tr><td scope="row"><code>CREATE_TIME</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>UPDATE_TIME</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>CHECK_TIME</code></td><td> </td><td>MySQL extension
</td></tr>
<tr><td scope="row"><code>CHECKSUM</code></td><td> </td><td>MySQL extension
</td></tr>
<tr><td scope="row"><code>PARTITION_COMMENT</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>NODEGROUP</code></td><td> </td><td>MySQL extension
</td></tr>
<tr><td scope="row"><code>TABLESPACE_NAME</code></td><td> </td><td>MySQL
extension</td></tr></tbody></table>

<ul><li><p>Таблица <a href="#partitions-table"><code>PARTITIONS
</code></a> нестандартная.</p>
<p>Каждый отчет в этой таблице соответствует отдельному разделу или
подразду разделенной таблицы.</li>

<li><code>TABLE_CATALOG</code>: Всегда <code>def</code>.</li>
<li><code>TABLE_SCHEMA</code>: Этот столбец содержит название базы данных,
которой принадлежит таблица.</li>

<li><code>TABLE_NAME</code>: Этот столбец содержит название
таблицы, содержащей разделение.</li>
<li><code>PARTITION_NAME</code>: Название разделения.</li>

<li><code>SUBPARTITION_NAME</code>: Если
<a href="#partitions-table"><code>PARTITIONS</code></a>
представляет подраздел, тогда этот столбец содержит название подраздела,
иначе это <code>NULL</code>.</li>

<li><code>PARTITION_ORDINAL_POSITION</code>: Все разделы индексированы в том
же самом порядке, как они определены, первый раздел имеет номер
<code>1</code>. Индексация может измениться, поскольку разделы могут быть
добавлены, удалены и реорганизованы. Показанное этим столбцом число отражает
текущий порядок, принимая во внимание любые изменения индексации.</li>

<li><code>SUBPARTITION_ORDINAL_POSITION</code>: Подразделы в пределах данного
раздела также индексированы в той же самой манере, как раздел
индексирован в пределах таблицы.a table.
</li>

<li><code>PARTITION_METHOD</code>: Одно из значений:
<code>RANGE</code>, <code>LIST</code>,
<code>HASH</code>, <code>LINEAR HASH</code>,
<code>KEY</code>, or <code>LINEAR KEY</code>.
То есть, один из доступных типов разделения как обсуждено в
<a href="partit.htm#partitioning-types">разделе 20.2</a>.</li>

<li><code>SUBPARTITION_METHOD</code>: Одно из значений:
<code>HASH</code>, <code>LINEAR HASH</code>,
<code>KEY</code>, or <code>LINEAR KEY</code>.
То есть, один из доступных типов подразделов как обсуждено в
<a href="partit.htm#partitioning-subpartitions">разделе 20.2.6</a>.</li>

<li><code>PARTITION_EXPRESSION</code>: Это выражение для функции разделения,
используемой в <a href="sql.htm#create-table"><code>CREATE TABLE</code></a>
или <a href="sql.htm#alter-table"><code>ALTER TABLE</code></a>, который
создало текущее разделение таблицы.</p>

<p>Например, считайте разделенную таблицу создаваемой в базе данных
<code>test</code>, используя этот запрос:
<pre>
CREATE TABLE tp (c1 INT, c2 INT, c3 VARCHAR(25))
       PARTITION BY HASH(c1 + c2) PARTITIONS 4;
</pre>

Столбец <code>PARTITION_EXPRESSION</code> в таблице PARTITIONS
имеет запись для разделения этой таблицы как <code>c1 + c2</code>:
<pre>
mysql&gt; SELECT DISTINCT PARTITION_EXPRESSION
     &gt;        FROM INFORMATION_SCHEMA.PARTITIONS
     &gt;        WHERE TABLE_NAME='tp' AND TABLE_SCHEMA='test';
+----------------------+
| PARTITION_EXPRESSION |
+----------------------+
| c1 + c2              |
+----------------------+
1 row in set (0.09 sec)
</pre></li>

<li><p><code>SUBPARTITION_EXPRESSION</code>: Это работает тем же самым
способом на выражении подразделения, которое определяет подразделы для
таблицы как <code>PARTITION_EXPRESSION</code> делает для выражения
разделения, используемого, чтобы определить разделы таблицы.</p>
<p>Если у таблицы нет никакого подразделения, то этот столбец
<code>NULL</code>.</li>

<li><code>PARTITION_DESCRIPTION</code>: Этот столбец используется для
разделов типа RANGE и LIST. Для <code>RANGE</code> это содержит набор
значений в разделе <code>VALUES LESS THAN</code>, которые могут быть целым
числом или <code>MAXVALUE</code>. Для <code>LIST</code>
этот столбец содержит значения, определенные в <code>VALUES IN</code>,
то есть список целочисленных значений, разделенных запятой.</p>

<p>Для разделения, метод <code>PARTITION_METHOD</code> которого
<code>RANGE</code> или <code>LIST</code>, этот
столбец всегда <code>NULL</code>.</li>

<li><code>TABLE_ROWS</code>: Число строк таблицы в разделе.</p>
<p>Для разделенных таблиц <a href="innodb.htm"><code>InnoDB</code></a>
количество строки в столбце <code>TABLE_ROWS</code> только ориентировочное,
используемое в оптимизации SQL и, возможно, всегда неточное.</li>

<li><code>AVG_ROW_LENGTH</code>: Средняя длина строк, сохраненных в этом
разделе или подразделе, в байтах.</p>
<p>Это то же самое, как <code>DATA_LENGTH</code> деленное на
<code>TABLE_ROWS</code>.</li>

<li><code>DATA_LENGTH</code>: Полная длина всех строк, сохраненных в этом
разделе или подразделе, в байтах, то есть, общее количество байтов,
сохраненных в разделе или подразделе.</li>

<li><code>MAX_DATA_LENGTH</code>: Максимальное количество байтов, которые
могут быть сохранены в этом разделе или подразделе.</li>
<li><code>INDEX_LENGTH</code>: Длина индексного файла для этого раздела
или подраздела в байтах.</li>

<li><code>DATA_FREE</code>: Число байтов, выделенных разделу или подразделу,
но не используемых.</li>
<li><code>CREATE_TIME</code>: Время создания раздела.</li>
<li><code>UPDATE_TIME</code>: Время, когда раздел был последний раз изменен.
</li>

<li><code>CHECK_TIME</code>: Время, когда таблица, которой принадлежит этот
раздел или подраздел, была проверена в последний раз.</p>
<p>Для разделенных таблиц <a href="innodb.htm"><code>InnoDB</code></a>
столбец всегда <code>NULL</code>.</li>

<li><code>CHECKSUM</code>: Значение контрольной суммы, если есть. Иначе
этот столбец <code>NULL</code>.</li>
<li><code>PARTITION_COMMENT</code>: Этот столбец содержит текст любого
комментария, сделанного для разделения.</p>

<p>В MySQL 8.0 максимальная длина для комментария разделения определена как
1024 символа и ширина отображения столбца <code>PARTITION_COMMENT</code> тоже
1024, чтобы соответствовать этому пределу (Bug #11748924, Bug #37728).
Значение по умолчанию для этого столбца пустая строка.</li>

<li><code>NODEGROUP</code>: Это nodegroup, которой принадлежит разделение.
Это относится только к таблицам MySQL Cluster. Для остальных ситуаций
значение этого столбца всегда <code>0</code>.</li>

<li><code>TABLESPACE_NAME</code>: Этот столбец содержит название табличного
пространства, которому принадлежит разделение. Значение этого
столбца всегда <code>DEFAULT</code>.</li>

<li>У неразделенной таблицы есть один отчет в
<a href="#partitions-table">
<code>INFORMATION_SCHEMA.PARTITIONS</code></a>. Однако, значения столбцов
<code>PARTITION_NAME</code>, <code>SUBPARTITION_NAME</code>,
<code>PARTITION_ORDINAL_POSITION</code>,
<code>SUBPARTITION_ORDINAL_POSITION</code>, <code>PARTITION_METHOD</code>,
<code>SUBPARTITION_METHOD</code>, <code>PARTITION_EXPRESSION</code>,
<code>SUBPARTITION_EXPRESSION</code> и <code>PARTITION_DESCRIPTION</code>
все <code>NULL</code>. Столбец <code>PARTITION_COMMENT</code>
в этом случае пустой.</p></li></ul>

<h2><a name="plugins-table"></a>22.15. Таблица INFORMATION_SCHEMA PLUGINS
</h2>
<p>Таблица <a href="#plugins-table"><code>PLUGINS</code></a>
предоставляет информацию о плагинах сервера.</p>

<table border="1">
<thead><tr><th scope="col"><code>INFORMATION_SCHEMA</code> Name</th>
<th scope="col"><a href="sql.htm#show"><code>SHOW</code></a> Name</th>
<th scope="col">Remarks</th></tr></thead>
<tbody><tr><td scope="row"><code>PLUGIN_NAME</code></td><td><code>Name</code>
</td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>PLUGIN_VERSION</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>PLUGIN_STATUS</code></td><td><code>Status</code>
</td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>PLUGIN_TYPE</code></td><td><code>Type</code></td>
<td>MySQL extension</td></tr>
<tr><td scope="row"><code>PLUGIN_TYPE_VERSION</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>PLUGIN_LIBRARY</code></td><td><code>Library</code>
</td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>PLUGIN_LIBRARY_VERSION</code></td><td> </td><td>
MySQL extension</td></tr>
<tr><td scope="row"><code>PLUGIN_AUTHOR</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>PLUGIN_DESCRIPTION</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>PLUGIN_LICENSE</code></td><td><code>License</code>
</td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>LOAD_OPTION</code></td><td> </td><td>MySQL
extension</td></tr></tbody></table>

<ul><li><p>Таблица <a href="#plugins-table"><code>PLUGINS</code>
</a> нестандартная.</li>
<li><code>PLUGIN_NAME</code> имя, используемое, чтобы обратиться к плагину в
запросах <a href="sql.htm#install-plugin"><code>INSTALL PLUGIN</code></a> и
<a href="sql.htm#uninstall-plugin"><code>UNINSTALL PLUGIN</code></a>.</li>

<li><code>PLUGIN_VERSION</code> версия общего описателя типа плагина.</li>
<li><code>PLUGIN_STATUS</code> указывает на состояние, одно из значений
<code>ACTIVE</code>, <code>INACTIVE</code>,
<code>DISABLED</code> или <code>DELETED</code>.</li>

<li><code>PLUGIN_TYPE</code> указывает на тип плагина:
<code>STORAGE ENGINE</code>, <code>INFORMATION_SCHEMA</code> или
<code>AUTHENTICATION</code>.</li>

<li><code>PLUGIN_TYPE_VERSION</code> версия определенного для
типа описателя плагина.</li>
<li><code>PLUGIN_LIBRARY</code> название совместно использованного файла
библиотеки плагина. Это имя, используемое, чтобы обратиться к файлу в
запросах <a href="sql.htm#install-plugin"><code>INSTALL
PLUGIN</code></a> и <a href="sql.htm#uninstall-plugin"><code>UNINSTALL
PLUGIN</code></a>. Этот файл расположен в каталоге, названном в системной
переменной <a href="server.htm#sysvar_plugin_dir"><code>plugin_dir</code></a>.
Если имя библиотеки <code>NULL</code>, плагин собран в сервере и не может
быть удален с применением <a href="sql.htm#uninstall-plugin"><code>
UNINSTALL PLUGIN</code></a>.</li>

<li><code>PLUGIN_LIBRARY_VERSION</code> указывает на версию API.</li>
<li><code>PLUGIN_AUTHOR</code> называет автора.</li>
<li><code>PLUGIN_DESCRIPTION</code> обеспечивает краткое описание плагина.
</li>

<li><code>PLUGIN_LICENSE</code> указывает, как плагин
лицензируется, например, <code>GPL</code>.</li>
<li><code>LOAD_OPTION</code> указывает, как плагин был загружен. Значения
<code>OFF</code>, <code>ON</code>, <code>FORCE</code> или
<code>FORCE_PLUS_PERMANENT</code>. См.
<a href="server.htm#server-plugin-loading">
раздел 6.6.2</a>.</p></li></ul>

<p>Для плагинов, установленных с <a href="sql.htm#install-plugin"><code>
INSTALL PLUGIN</code></a>, значения <code>PLUGIN_NAME</code> и
<code>PLUGIN_LIBRARY</code> также зарегистрированы в таблице
<code>mysql.plugin</code>.</p>

<p>Эти запросы эквивалентны:
<pre>
SELECT PLUGIN_NAME, PLUGIN_STATUS, PLUGIN_TYPE,
       PLUGIN_LIBRARY, PLUGIN_LICENSE FROM INFORMATION_SCHEMA.PLUGINS;
SHOW PLUGINS;
</pre></p>

<h2><a name="processlist-table"></a>22.16. Таблица
INFORMATION_SCHEMA PROCESSLIST</h2>
<p>Таблица <a href="#processlist-table"><code>PROCESSLIST</code>
</a> предоставляет информацию, с которой работают потоки.</p>

<table border="1">
<thead><tr><th scope="col"><code>INFORMATION_SCHEMA</code> Name</th>
<th scope="col"><a href="sql.htm#show"><code>SHOW</code></a> Name</th>
<th scope="col">Remarks</th></tr></thead>
<tbody><tr><td scope="row"><code>ID</code></td><td><code>Id</code></td>
<td>MySQL extension</td></tr>
<tr><td scope="row"><code>USER</code></td><td><code>User</code></td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>HOST</code></td><td><code>Host</code></td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>DB</code></td><td><code>db</code></td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>COMMAND</code></td><td><code>Command</code></td>
<td>MySQL extension</td></tr>
<tr><td scope="row"><code>TIME</code></td><td><code>Time</code></td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>STATE</code></td><td><code>State</code></td><td>
MySQL extension</td></tr>
<tr><td scope="row"><code>INFO</code></td><td><code>Info</code></td><td>MySQL
extension</td></tr></tbody></table>

<p>Для детального описания столбцов таблицы см.
<a href="sql.htm#show-processlist">раздел 14.7.5.29</a>.</p>
<ul><li><p>Таблица <a href="#processlist-table"><code>PROCESSLIST
</code></a> нестандартная.</li>

<li>Как вывод <a href="sql.htm#show"><code>SHOW</code></a>, таблица
<a href="#processlist-table"><code>PROCESSLIST</code></a>
покажет только информацию о Ваших собственных потоках, если Вы не будете
иметь привилегию <a href="security.html#priv_process"><code>PROCESS</code>
</a>, тогда Вы будете видеть информацию также о других потоках.
Как анонимный пользователь, Вы не можете видеть строки вообще.</li>

<li>Если запрос SQL относится к
<a href="#processlist-table"><code>
INFORMATION_SCHEMA.PROCESSLIST</code></a>, MySQL заполняет всю таблицу
однажды, когда выполнение запроса начинается, таким образом во время запроса
есть последовательность чтения. Нет никакой последовательности чтения для
транзакции с несколькими запросами.</li>

<li>Информация о процессе также доступна через
<a href="perfor.htm#threads-table"><code>performance_schema.threads</code>
</a>. Однако, доступ к <a href="perfor.htm#threads-table"><code>threads
</code></a> не требует mutex и оказывает минимальное влияние на работу
сервера. <a href="#processlist-table"><code>
INFORMATION_SCHEMA.PROCESSLIST</code></a> и
<a href="sql.htm#show-processlist"><code>SHOW PROCESSLIST</code></a>
имеют отрицательные исполнительные последствия, потому что они требуют mutex.
<a href="perfor.htm#threads-table"><code>threads</code></a> также покажет
сведения о фоновых потоках, которые
<a href="#processlist-table"><code>INFORMATION_SCHEMA.PROCESSLIST
</code></a> и <a href="sql.htm#show-processlist"><code>SHOW PROCESSLIST
</code></a> не выводят. Это означает, что <a href="perfor.htm#threads-table">
<code>threads</code></a> может использоваться, чтобы контролировать
активность, чего другие источники информации о потоках не могут.
</p></li></ul>

<p>Следующие запросы эквивалентны:
<pre>
SELECT * FROM INFORMATION_SCHEMA.PROCESSLIST
SHOW FULL PROCESSLIST
</pre>

<h2><a name="profiling-table"></a>22.17. Таблица
INFORMATION_SCHEMA PROFILING</h2>
<p>Таблица <a href="#profiling-table"><code>PROFILING</code></a>
предоставляет профилирующую информацию. Ее содержание соответствует
информации, произведенной <a href="sql.htm#show-profiles"><code>SHOW
PROFILES</code></a> и <a href="sql.htm#show-profile"><code>SHOW PROFILE
</code></a> (см. <a href="sql.htm#show-profiles">раздел 14.7.5.31</a>).
Таблица не пуста, если переменная сеанса
<a href="server.htm#sysvar_profiling">
<code>profiling</code></a> установлена в 1.</p>
<p>Эта таблица устарела и будет удалена в будущем выпуске MySQL. Используйте
Performance Schema вместо этого.</p>

<table border="1">
<thead><tr><th scope="col"><code>INFORMATION_SCHEMA</code> Name</th>
<th scope="col"><a href="sql.htm#show"><code>SHOW</code></a> Name</th>
<th scope="col">Remarks</th></tr></thead>
<tbody><tr><td scope="row"><code>QUERY_ID</code></td><td><code>Query_ID
</code></td><td> </td></tr>
<tr><td scope="row"><code>SEQ</code></td><td><code></code></td><td> </td>
</tr>
<tr><td scope="row"><code>STATE</code></td><td><code>Status</code></td>
<td> </td></tr>
<tr><td scope="row"><code>DURATION</code></td><td><code>Duration</code></td>
<td> </td></tr>
<tr><td scope="row"><code>CPU_USER</code></td><td><code>CPU_user</code></td>
<td> </td></tr>
<tr><td scope="row"><code>CPU_SYSTEM</code></td><td><code>CPU_system</code>
</td><td> </td></tr>
<tr><td scope="row"><code>CONTEXT_VOLUNTARY</code></td><td><code>
Context_voluntary</code></td><td> </td></tr>
<tr><td scope="row"><code>CONTEXT_INVOLUNTARY</code></td><td><code>
Context_involuntary</code></td><td> </td></tr>
<tr><td scope="row"><code>BLOCK_OPS_IN</code></td><td><code>Block_ops_in
</code></td><td> </td></tr>
<tr><td scope="row"><code>BLOCK_OPS_OUT</code></td><td><code>Block_ops_out
</code></td><td> </td></tr>
<tr><td scope="row"><code>MESSAGES_SENT</code></td><td><code>Messages_sent
</code></td><td> </td></tr>
<tr><td scope="row"><code>MESSAGES_RECEIVED</code></td><td><code>
Messages_received</code></td><td> </td></tr>
<tr><td scope="row"><code>PAGE_FAULTS_MAJOR</code></td><td><code>
Page_faults_major</code></td><td> </td></tr>
<tr><td scope="row"><code>PAGE_FAULTS_MINOR</code></td><td><code>
Page_faults_minor</code></td><td> </td></tr>
<tr><td scope="row"><code>SWAPS</code></td><td><code>Swaps</code></td>
<td> </td></tr>
<tr><td scope="row"><code>SOURCE_FUNCTION</code></td><td><code>
Source_function</code></td><td> </td></tr>
<tr><td scope="row"><code>SOURCE_FILE</code></td><td><code>Source_file</code>
</td><td> </td></tr>
<tr><td scope="row"><code>SOURCE_LINE</code></td><td><code>Source_line</code>
</td><td> </td></tr></tbody></table>

<ul><li><p><code>QUERY_ID</code> числовой идентификатор запроса.</li>
<li><code>SEQ</code> порядковый номер, указывающий на порядок
строк с тем же самым значением <code>QUERY_ID</code>.</li>

<li><code>STATE</code> статус профилирования, к которому
применяются измерения строки.</li>
<li><code>DURATION</code> указывает, сколько времени выполнение запроса было
в этом состоянии в секундах.</li>

<li><code>CPU_USER</code> и <code>CPU_SYSTEM</code> указывают
пользовательское и системное использование
центрального процессора в секундах.</li>

<li><code>CONTEXT_VOLUNTARY</code> и
<code>CONTEXT_INVOLUNTARY</code> указывают,
сколько переключений контекста произошло.</li>

<li><code>BLOCK_OPS_IN</code> и <code>BLOCK_OPS_OUT</code>
указывают число операций входа и выхода блока.</li>
<li><code>MESSAGES_SENT</code> и <code>MESSAGES_RECEIVED</code>
указывают число посланных и полученных коммуникационных сообщений.</li>

<li><code>PAGE_FAULTS_MAJOR</code> и <code>PAGE_FAULTS_MINOR</code>
указывают число главных и незначительных ошибок страницы.</li>
<li><code>SWAPS</code> сколько подкачек произошло.</li>

<li><code>SOURCE_FUNCTION</code>, <code>SOURCE_FILE</code> и
<code>SOURCE_LINE</code> предоставяют информацию, указывающую, где в исходном
коде профилируемое сосятоние выполняется.</p></li></ul>

<h2><a name="referential-constraints-table"></a>22.18. Таблица
INFORMATION_SCHEMA REFERENTIAL_CONSTRAINTS</h2>
<p>Таблица
<a href="#referential-constraints-table"><code>
REFERENTIAL_CONSTRAINTS</code></a> предоставляет информацию о внешних ключах.
</p>

<table border="1">
<thead><tr><th scope="col"><code>INFORMATION_SCHEMA</code> Name</th>
<th scope="col"><a href="sql.htm#show"><code>SHOW</code></a> Name</th>
<th scope="col">Remarks</th></tr></thead>
<tbody><tr><td scope="row">CONSTRAINT_CATALOG</td><td> </td><td>def</td></tr>
<tr><td scope="row">CONSTRAINT_SCHEMA</td><td> </td><td> </td></tr>
<tr><td scope="row">CONSTRAINT_NAME</td><td> </td><td> </td></tr>
<tr><td scope="row">UNIQUE_CONSTRAINT_CATALOG</td><td> </td><td>def</td></tr>
<tr><td scope="row">UNIQUE_CONSTRAINT_SCHEMA</td><td> </td><td> </td></tr>
<tr><td scope="row">UNIQUE_CONSTRAINT_NAME</td><td> </td><td> </td></tr>
<tr><td scope="row">MATCH_OPTION</td><td> </td><td> </td></tr>
<tr><td scope="row">UPDATE_RULE</td><td> </td><td> </td></tr>
<tr><td scope="row">DELETE_RULE</td><td> </td><td> </td></tr>
<tr><td scope="row">TABLE_NAME</td><td> </td><td> </td></tr>
<tr><td scope="row">REFERENCED_TABLE_NAME</td><td> </td>
<td> </td></tr></tbody></table>

<ul><li><p><code>TABLE_NAME</code> имеет то же самое значение, как
<code>TABLE_NAME</code> в <a href="#table-constraints-table"><code>
INFORMATION_SCHEMA.TABLE_CONSTRAINTS</code></a>.</li>

<li><code>CONSTRAINT_SCHEMA</code> и <code>CONSTRAINT_NAME</code>
идентифицируют внешний ключ.</li>
<li><code>UNIQUE_CONSTRAINT_SCHEMA</code>,
<code>UNIQUE_CONSTRAINT_NAME</code> и <code>REFERENCED_TABLE_NAME</code>
идентифицируют ключ, на который ссылаются.</li>

<li>Единственное допустимое значение в это время для
<code>MATCH_OPTION</code> <code>NONE</code>.</li>
<li>Возможные значения для <code>UPDATE_RULE</code> или
<code>DELETE_RULE</code>: <code>CASCADE</code>,
<code>SET NULL</code>, <code>SET DEFAULT</code>,
<code>RESTRICT</code> или <code>NO ACTION</code>.</p></li></ul>

<h2><a name="routines-table"></a>22.19. Таблица INFORMATION_SCHEMA ROUTINES
</h2>
<p>Таблица <a href="#routines-table"><code>ROUTINES</code></a>
предоставляет информацию о сохраненных подпрограммах (процедуры и функции).
Таблица <a href="#routines-table"><code>ROUTINES</code></a>
не включает определяемые пользователем функции (UDF).</p>

<p>Столбец <span><code>mysql.proc</code> Name</span> указывает
столбец таблицы <code>mysql.proc</code>, который соответствует столбцу
таблицы <a href="#routines-table"><code>INFORMATION_SCHEMA.ROUTINES
</code></a>, если такой есть.</p>

<table border="1">
<thead><tr><th scope="col"><code>INFORMATION_SCHEMA</code> Name</th>
<th scope="col"><code>mysql.proc</code> Name</th><th scope="col">Remarks</th>
</tr></thead>
<tbody><tr><td scope="row"><code>SPECIFIC_NAME</code></td><td><code>
specific_name</code></td><td> </td></tr>
<tr><td scope="row"><code>ROUTINE_CATALOG</code></td><td> </td><td><code>def
</code></td></tr>
<tr><td scope="row"><code>ROUTINE_SCHEMA</code></td><td><code>db</code></td>
<td> </td></tr>
<tr><td scope="row"><code>ROUTINE_NAME</code></td><td><code>name</code></td>
<td> </td></tr>
<tr><td scope="row"><code>ROUTINE_TYPE</code></td><td><code>type</code></td>
<td><code>{PROCEDURE|FUNCTION}</code></td></tr>
<tr><td scope="row"><code>DATA_TYPE</code></td><td> </td><td>same as for
<a href="#columns-table"><code>COLUMNS</code></a> table</td></tr>
<tr><td scope="row"><code>CHARACTER_MAXIMUM_LENGTH</code></td><td> </td>
<td>same as for <a href="#columns-table"><code>COLUMNS</code></a>
table</td></tr>
<tr><td scope="row"><code>CHARACTER_OCTET_LENGTH</code></td><td> </td>
<td>same as for <a href="#columns-table"><code>COLUMNS</code>
</a> table</td></tr>
<tr><td scope="row"><code>NUMERIC_PRECISION</code></td><td> </td><td>same as
for <a href="#columns-table"><code>COLUMNS</code></a>
table</td></tr>
<tr><td scope="row"><code>NUMERIC_SCALE</code></td><td> </td><td>same as for
<a href="#columns-table"><code>COLUMNS</code></a> table</td></tr>
<tr><td scope="row"><code>DATETIME_PRECISION</code></td><td> </td><td>same as
for <a href="#columns-table"><code>COLUMNS</code></a> table
</td></tr>
<tr><td scope="row"><code>CHARACTER_SET_NAME</code></td><td> </td><td>same as
for <a href="#columns-table"><code>COLUMNS</code></a> table
</td></tr>
<tr><td scope="row"><code>COLLATION_NAME</code></td><td> </td><td>same as for
<a href="#columns-table"><code>COLUMNS</code></a> table</td></tr>
<tr><td scope="row"><code>DTD_IDENTIFIER</code></td><td> </td><td>data type
descriptor</td></tr>
<tr><td scope="row"><code>ROUTINE_BODY</code></td><td> </td><td><code>SQL
</code></td></tr>
<tr><td scope="row"><code>ROUTINE_DEFINITION</code></td><td><code>body_utf8
</code></td><td> </td></tr>
<tr><td scope="row"><code>EXTERNAL_NAME</code></td><td> </td><td><code>NULL
</code></td></tr>
<tr><td scope="row"><code>EXTERNAL_LANGUAGE</code></td><td><code>language
</code></td><td><code>NULL</code></td></tr>
<tr><td scope="row"><code>PARAMETER_STYLE</code></td><td> </td><td><code>SQL
</code></td></tr>
<tr><td scope="row"><code>IS_DETERMINISTIC</code></td><td><code>
is_deterministic</code></td><td> </td></tr>
<tr><td scope="row"><code>SQL_DATA_ACCESS</code></td><td><code>
sql_data_access</code></td><td> </td></tr>
<tr><td scope="row"><code>SQL_PATH</code></td><td> </td><td><code>NULL</code>
</td></tr>
<tr><td scope="row"><code>SECURITY_TYPE</code></td><td><code>security_type
</code></td><td> </td></tr>
<tr><td scope="row"><code>CREATED</code></td><td><code>created</code></td>
<td> </td></tr>
<tr><td scope="row"><code>LAST_ALTERED</code></td><td><code>modified</code>
</td><td> </td></tr>
<tr><td scope="row"><code>SQL_MODE</code></td><td><code>sql_mode</code></td>
<td>MySQL extension</td></tr>
<tr><td scope="row"><code>ROUTINE_COMMENT</code></td><td><code>comment</code>
</td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>DEFINER</code></td><td><code>definer</code></td>
<td>MySQL extension</td></tr>
<tr><td scope="row"><code>CHARACTER_SET_CLIENT</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>COLLATION_CONNECTION</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>DATABASE_COLLATION</code></td><td> </td><td>MySQL
extension</td></tr></tbody></table>

<ul><li><p>MySQL вычисляет <code>EXTERNAL_LANGUAGE</code> так:</p>
<ul><li><p>Если <code>mysql.proc.language='SQL'</code>,
<code>EXTERNAL_LANGUAGE</code> <code>NULL</code></li>

<li>Иначе <code>EXTERNAL_LANGUAGE</code> то, что находится в
<code>mysql.proc.language</code>. Однако, у нас еще нет внешних языков, таким
образом, это всегда <code>NULL</code>.</p></li></ul></li>

<li><p><code>CREATED</code>: Дата и время, когда подпрограмма
создавалась. Это значение <a href="types.htm#datetime"><code>TIMESTAMP</code>
</a>.</li>

<li><code>LAST_ALTERED</code>: Дата и время, когда подпрограмма была
изменена в последний раз. Это значение <a href="types.htm#datetime"><code>
TIMESTAMP</code></a>. Если подпрограмма не была изменена, начиная с ее
создания этот столбец держит то же самое значение, как <code>CREATED</code>.
</li>

<li><code>SQL_MODE</code>: Режим SQL, когда подпрограмма была создана или
изменена, и под которым подпрограмма выполняется. Для разрешенных значений
см. <a href="server.htm#sql-mode">раздел 6.1.8</a>.</li>

<li><code>CHARACTER_SET_CLIENT</code>: Значение сеансовой переменной
<a href="server.htm#sysvar_character_set_client"><code>character_set_client
</code></a>, когда подпрограмма создавалась.</li>

<li><code>COLLATION_CONNECTION</code>: Значение сеансовой переменной
<a href="server.htm#sysvar_collation_connection"><code>collation_connection
</code></a>, когда подпрограмма создавалась.</li>

<li><code>DATABASE_COLLATION</code>: Сопоставление базы данных, с
которой связана подпрограмма.</li>
<li>Столбцы <code>DATA_TYPE</code>, <code>CHARACTER_MAXIMUM_LENGTH</code>,
<code>CHARACTER_OCTET_LENGTH</code>, <code>NUMERIC_PRECISION</code>,
<code>NUMERIC_SCALE</code>, <code>DATETIME_PRECISION</code>,
<code>CHARACTER_SET_NAME</code> и <code>COLLATION_NAME</code>
предоставляют информацию о типе данных для предложения <code>RETURNS</code>
сохраненных функций. Если сохраненная подпрограмма хранимая процедура, эти
столбцы все <code>NULL</code>.</li>

<li>Информация о типах данных <code>RETURNS</code> сохраненной функции
также доступна в таблице
<a href="#parameters-table"><code>PARAMETERS</code></a>.
Строка типа данных возвращаемого значения для функции может быть
идентифицирована как строка, которая имеет значение
<code>ORDINAL_POSITION</code> 0.</p></li></ul>

<h2><a name="schemata-table"></a>22.20. Таблица INFORMATION_SCHEMA SCHEMATA
</h2>
<p>Это база данных, таким образом, таблица
<a href="#schemata-table"><code>SCHEMATA</code></a>
предоставляет информацию о базах данных.</p>

<table border="1">
<thead><tr><th scope="col"><code>INFORMATION_SCHEMA</code> Name</th>
<th scope="col"><a href="sql.htm#show"><code>SHOW</code></a> Name</th>
<th scope="col">Remarks</th></tr></thead>
<tbody><tr><td scope="row"><code>CATALOG_NAME</code></td><td> </td><td>
<code>def</code></td></tr>
<tr><td scope="row"><code>SCHEMA_NAME</code></td><td>Database</td><td> </td>
</tr>
<tr><td scope="row"><code>DEFAULT_CHARACTER_SET_NAME</code></td><td> </td>
<td> </td></tr>
<tr><td scope="row"><code>DEFAULT_COLLATION_NAME</code></td><td> </td>
<td> </td></tr>
<tr><td scope="row"><code>SQL_PATH</code></td><td> </td><td><code>NULL</code>
</td></tr></tbody></table>

<p>Следующие запросы эквивалентны:
<pre>
SELECT SCHEMA_NAME AS `Database`
       FROM INFORMATION_SCHEMA.SCHEMATA
       [WHERE SCHEMA_NAME LIKE '<em><code>wild</code></em>']
SHOW DATABASES [LIKE '<em><code>wild</code></em>']
</pre>

<h2><a name="schema-privileges-table"></a>22.21. Таблица
INFORMATION_SCHEMA SCHEMA_PRIVILEGES</h2>
<p>Таблица <a href="#schema-privileges-table"><code>
SCHEMA_PRIVILEGES</code></a> предоставляет информацию о схеме (базе данных)
привилегий. Эта информация прибывает из таблицы <code>mysql.db</code>.</p>

<table border="1">
<thead><tr><th scope="col"><code>INFORMATION_SCHEMA</code> Name</th>
<th scope="col"><a href="sql.htm#show"><code>SHOW</code></a> Name</th>
<th scope="col">Remarks</th></tr></thead>
<tbody><tr><td scope="row"><code>GRANTEE</code></td><td> </td>
<td><code>'<em><code>user_name</code></em>'@'<em><code>host_name</code></em>'
</code> value, MySQL extension</td></tr>
<tr><td scope="row"><code>TABLE_CATALOG</code></td><td> </td><td><code>def
</code>, MySQL extension</td></tr>
<tr><td scope="row"><code>TABLE_SCHEMA</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>PRIVILEGE_TYPE</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>IS_GRANTABLE</code></td><td> </td><td>MySQL
extension</td></tr></tbody></table>
<ul><li><p>Это несатндартная таблица. Это берет свои значения из
таблицы <code>mysql.db</code>.</p></li></ul>

<h2><a name="statistics-table"></a>22.22. Таблицы
INFORMATION_SCHEMA STATISTICS и STATISTICS_DYNAMIC</h2>
<p>Таблица <a href="#statistics-table"><code>STATISTICS</code></a>
предоставляет информацию об индексах.</p>

<p>Столбцы в таблице <a href="#statistics-table"><code>STATISTICS
</code></a>, которые представляют табличную статистику, содержат кэшируемые
значения. Если переменная
<a href="server.htm#sysvar_information_schema_stats"><code>
information_schema_stats</code></a> равна <code>CACHED</code> (значение по
умолчанию), сервер получает кэшируемые значения для запросов на таблице
<a href="#statistics-table"><code>STATISTICS</code></a>.
Чтобы обновить кэшируемые значения для данной таблицы, надо использовать
<a href="sql.htm#analyze-table"><code>ANALYZE TABLE</code></a>. Чтобы
использовать последнюю статистику непосредственно от механизмов хранения,
следует установить <a href="server.htm#sysvar_information_schema_stats">
<code>information_schema_stats</code></a> в <code>LATEST</code>.
В этом случае сервер обрабатывает запросы на таблице
<a href="#statistics-table"><code>STATISTICS</code></a>
как запросы на <a href="#statistics-table"><code>STATISTICS_DYNAMIC
</code></a>. Для получения дополнительной информации см.
<a href="optimiz.htm#information-schema-optimization">раздел 9.2.4</a>.</p>

<table border="1">
<thead><tr><th scope="col"><code>INFORMATION_SCHEMA</code> Name</th>
<th scope="col"><a href="sql.htm#show"><code>SHOW</code></a> Name</th>
<th scope="col">Remarks</th></tr></thead>
<tbody><tr><td scope="row"><code>TABLE_CATALOG</code></td><td> </td>
<td><code>def</code></td></tr>
<tr><td scope="row"><code>TABLE_SCHEMA</code></td><td> </td><td>= Database
</td></tr>
<tr><td scope="row"><code>TABLE_NAME</code></td><td><code>Table</code></td>
<td> </td></tr>
<tr><td scope="row"><code>NON_UNIQUE</code></td><td><code>Non_unique</code>
</td><td> </td></tr>
<tr><td scope="row"><code>INDEX_SCHEMA</code></td><td> </td><td>= Database
</td></tr>
<tr><td scope="row"><code>INDEX_NAME</code></td><td><code>Key_name</code>
</td><td> </td></tr>
<tr><td scope="row"><code>SEQ_IN_INDEX</code></td><td><code>Seq_in_index
</code></td><td> </td></tr>
<tr><td scope="row"><code>COLUMN_NAME</code></td><td><code>Column_name</code>
</td><td> </td></tr>
<tr><td scope="row"><code>COLLATION</code></td><td><code>Collation</code>
</td><td> </td></tr>
<tr><td scope="row"><code>CARDINALITY</code></td><td><code>Cardinality</code>
</td><td> </td></tr>
<tr><td scope="row"><code>SUB_PART</code></td><td><code>Sub_part</code></td>
<td>MySQL extension</td></tr>
<tr><td scope="row"><code>PACKED</code></td><td><code>Packed</code></td><td>
MySQL extension</td></tr>
<tr><td scope="row"><code>NULLABLE</code></td><td><code>Null</code></td><td>
MySQL extension</td></tr>
<tr><td scope="row"><code>INDEX_TYPE</code></td><td><code>Index_type</code>
</td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>COMMENT</code></td><td><code>Comment</code></td>
<td>MySQL extension</td></tr>
<tr><td scope="row"><code>INDEX_COMMENT</code></td><td><code>Index_comment
</code></td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>IS_VISIBLE</code></td><td><code>Visible</code></td>
<td>MySQL extension</td></tr></tbody></table>

<ul><li><p>Нет никакой стандартной таблицы для индексов. Предыдущий список
подобен тому, который возвращается SQL Server 2000 для
<code>sp_statistics</code>, за исключением того, что мы заменили
<code>QUALIFIER</code> на <code>CATALOG</code> и
<code>OWNER</code> на <code>SCHEMA</code>.</p>

<p>Предыдущая таблица и вывод
<a href="sql.htm#show-index"><code>SHOW INDEX</code></a>
получены от того же самого источника. Таким образом, корреляция уже близка.
</p></li></ul>

<p>Следующие запросы эквивалентны:
<pre>
SELECT * FROM INFORMATION_SCHEMA.STATISTICS
         WHERE table_name = '<em><code>tbl_name</code></em>' AND
         table_schema = '<em><code>db_name</code></em>'
SHOW INDEX FROM <em><code>tbl_name</code></em>
     FROM <em><code>db_name</code></em>
</pre>

<h2><a name="tables-table"></a>22.23. Таблицы INFORMATION_SCHEMA TABLES и
TABLES_DYNAMIC</h2>
<p>Таблица <a href="#tables-table"><code>TABLES</code></a>
предоставляет информацию о таблицах в базах данных.</p>

<p>Столбцы в <a href="#tables-table"><code>TABLES</code></a>,
которые представляют табличную статистику, содержат кэшируемые значения. Если
переменная <a href="server.htm#sysvar_information_schema_stats"><code>
information_schema_stats</code></a> имеет значение
<code>CACHED</code> (по умолчанию это так), сервер получает кэшируемые
значения для запросов на таблице <a href="#tables-table"><code>
TABLES</code></a>. Чтобы обновить кэшируемые значения для данной таблицы,
надо использовать <a href="sql.htm#analyze-table"><code>ANALYZE TABLE</code>
</a>. Чтобы использовать последнюю статистику непосредственно от механизмов
хранения, установите <a href="server.htm#sysvar_information_schema_stats">
<code>information_schema_stats</code></a> в <code>LATEST</code>.
В этом случае сервер обрабатывает запросы на
<a href="#tables-table"><code>TABLES</code></a> как запросы на
<a href="#tables-table"><code>TABLES_DYNAMIC</code></a>.</p>

<table border="1">
<thead><tr><th scope="col"><code>INFORMATION_SCHEMA</code> Name</th>
<th scope="col"><a href="sql.htm#show"><code>SHOW</code></a> Name</th>
<th scope="col">Remarks</th></tr></thead>
<tbody><tr><td scope="row"><code>TABLE_CATALOG</code></td><td> </td><td>
<code>def</code></td></tr>
<tr><td scope="row"><code>TABLE_SCHEMA</code></td><td><code>Table_</code>...
</td><td> </td></tr>
<tr><td scope="row"><code>TABLE_NAME</code></td><td><code>Table_</code>...
</td><td> </td></tr>
<tr><td scope="row"><code>TABLE_TYPE</code></td><td> </td><td> </td></tr>
<tr><td scope="row"><code>ENGINE</code></td><td><code>Engine</code></td><td>
MySQL extension</td></tr>
<tr><td scope="row"><code>VERSION</code></td><td><code>Version</code></td>
<td>The <code>.frm</code> file version. With the removal of
<code>.frm</code> files in MySQL 8.0, this field
now reports a hardcoded value of <code>10</code>,
which is the last <code>.frm</code> file version
used in MySQL 5.7.</td></tr>
<tr><td scope="row"><code>ROW_FORMAT</code></td><td><code>Row_format</code>
</td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>TABLE_ROWS</code></td><td><code>Rows</code></td>
<td>MySQL extension</td></tr>
<tr><td scope="row"><code>AVG_ROW_LENGTH</code></td><td><code>Avg_row_length
</code></td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>DATA_LENGTH</code></td><td><code>Data_length</code>
</td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>MAX_DATA_LENGTH</code></td><td><code>
Max_data_length</code></td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>INDEX_LENGTH</code></td><td><code>Index_length
</code></td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>DATA_FREE</code></td><td><code>Data_free</code>
</td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>AUTO_INCREMENT</code></td><td><code>Auto_increment
</code></td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>CREATE_TIME</code></td><td><code>Create_time</code>
</td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>UPDATE_TIME</code></td><td><code>Update_time</code>
</td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>CHECK_TIME</code></td><td><code>Check_time</code>
</td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>TABLE_COLLATION</code></td><td><code>Collation
</code></td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>CHECKSUM</code></td><td><code>Checksum</code></td>
<td>MySQL extension</td></tr>
<tr><td scope="row"><code>CREATE_OPTIONS</code></td><td><code>Create_options
</code></td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>TABLE_COMMENT</code></td><td><code>Comment</code>
</td><td>MySQL extension</td></tr></tbody></table>

<ul><li><p>Обратитесь к <a href="sql.htm#show-table-status"><code>SHOW TABLE
STATUS</code></a> за описаниями полей.</li>
<li><code>TABLE_SCHEMA</code> и <code>TABLE_NAME</code> единственные поля в
<a href="sql.htm#show"><code>SHOW</code></a>, например,
<code>Table_in_db1</code>.</li>

<li><code>TABLE_TYPE</code> должно быть <code>BASE TABLE</code> или
<code>VIEW</code>. Таблица <a href="#tables-table"><code>TABLES
</code></a> не приводит таблицы <code>TEMPORARY</code>.</li>

<li>Для разделенных таблиц столбец <code>ENGINE</code>
показывает название механизма хранения, используемого всем разделением. Ранее
этот столбец показывал <code>PARTITION</code> для таких таблиц.</li>

<li>Столбец <code>TABLE_ROWS</code> <code>NULL</code>,
если таблица находится в базе данных <code>INFORMATION_SCHEMA</code>.</p>
<p>Для таблиц <a href="innodb.htm"><code>InnoDB</code></a> количество строк
только грубая оценка, используемая в оптимизации SQL. Это также истина, если
таблица <a href="innodb.htm"><code>InnoDB</code></a> разделена.</li>

<li>Столбец <code>DATA_FREE</code> показывает свободное пространство в байтах
для <code>InnoDB</code> таблицы.</li>
<li><code>UPDATE_TIME</code> выводит на экран значение timestamp для
последнего запроса <a href="sql.htm#update"><code>UPDATE</code></a>,
<a href="sql.htm#insert"><code>INSERT</code></a> или
<a href="sql.htm#delete"><code>DELETE</code></a>
выполненного на таблице <code>InnoDB</code>, которая не разделена.
Для MVCC значение timestamp отражает время
<a href="sql.htm#commit"><code>COMMIT</code></a>,
которое считают временем последнего обновления. Timestamp не сохранены, когда
сервер перезапущен или когда таблица удалена из кэша
словаря данных <code>InnoDB</code>.</li>

<li>Для разделенных таблиц <a href="innodb.htm"><code>InnoDB</code></a>
столбец <code>CHECK_TIME</code> всегда <code>NULL</code>.</li>
<li>Здесь ничего нет для набора символов значения по умолчанию таблицы.
<code>TABLE_COLLATION</code> близко, потому что имена сопоставления
начинаются с имени набора символов.</li>

<li>Столбец <code>CREATE_OPTIONS</code> показывает
<code>partitioned</code>, если таблица разделена.</p></li></ul>
<p>Следующие запросы эквивалентны:
<pre>
SELECT table_name FROM INFORMATION_SCHEMA.TABLES
       WHERE table_schema = '<em><code>db_name</code></em>'
       [AND table_name LIKE '<em><code>wild</code></em>']
SHOW TABLES FROM <em><code>db_name</code></em>
     [LIKE '<em><code>wild</code></em>']
</pre>

<h2><a name="tablespaces-table"></a>22.24.
Таблица INFORMATION_SCHEMA TABLESPACES</h2>
<p>Таблица <a href="#tablespaces-table"><code>TABLESPACES</code>
</a> предоставляет информацию об активных табличных пространствах.</p>

<table border="1">
<thead><tr><th scope="col"><code>INFORMATION_SCHEMA</code> Name</th>
<th scope="col"><a href="sql.htm#show"><code>SHOW</code></a> Name</th>
<th scope="col">Remarks</th></tr></thead>
<tbody><tr><td scope="row"><code>TABLESPACE_NAME</code></td><td> </td>
<td>MySQL extension</td></tr>
<tr><td scope="row"><code>ENGINE</code></td><td> </td><td>MySQL extension
</td></tr>
<tr><td scope="row"><code>TABLESPACE_TYPE</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>LOGFILE_GROUP_NAME</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>EXTENT_SIZE</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>AUTOEXTEND_SIZE</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>MAXIMUM_SIZE</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>NODEGROUP_ID</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>TABLESPACE_COMMENT</code></td><td> </td><td>MySQL
extension</td></tr></tbody></table>

<p>Таблица <code>INFORMATION_SCHEMA.TABLESPACES</code> не предоставляет
информацию о табличных пространствах <code>InnoDB</code>.
Для метаданных о табличном пространстве <code>InnoDB</code> см.
<a href="#innodb-sys-tablespaces-table"><code>
INNODB_SYS_TABLESPACES</code></a> и
<a href="#innodb-sys-datafiles-table"><code>INNODB_SYS_DATAFILES
</code></a>. Таблица <a href="#files-table"><code>
INFORMATION_SCHEMA.FILES</code></a> также обеспечивает
метаданные для <code>InnoDB</code>.</p>

<h2><a name="table-constraints-table"></a>22.25. Таблица
INFORMATION_SCHEMA TABLE_CONSTRAINTS</h2>
<p>Таблица <a href="#table-constraints-table"><code>
TABLE_CONSTRAINTS</code></a> описывает, у каких таблиц есть ограничения.</p>

<table border="1">
<thead><tr><th scope="col"><code>INFORMATION_SCHEMA</code> Name</th>
<th scope="col"><a href="sql.htm#show"><code>SHOW</code></a> Name</th>
<th scope="col">Remarks</th></tr></thead>
<tbody><tr><td scope="row"><code>CONSTRAINT_CATALOG</code></td><td> </td>
<td><code>def</code></td></tr>
<tr><td scope="row"><code>CONSTRAINT_SCHEMA</code></td><td> </td><td> </td>
</tr>
<tr><td scope="row"><code>CONSTRAINT_NAME</code></td><td> </td><td> </td>
</tr>
<tr><td scope="row"><code>TABLE_SCHEMA</code></td><td> </td><td> </td></tr>
<tr><td scope="row"><code>TABLE_NAME</code></td><td> </td><td> </td></tr>
<tr><td scope="row"><code>CONSTRAINT_TYPE</code></td><td> </td><td> </td>
</tr></tbody></table>

<ul><li><p>Переменная <code>CONSTRAINT_TYPE</code> может быть <code>UNIQUE
</code>, <code>PRIMARY KEY</code> или <code>FOREIGN KEY</code>.</li>
<li><code>UNIQUE</code> и <code>PRIMARY KEY</code> это информация о том же
самом как то, что Вы получаете от поля <code>Key_name</code> в выводе
<a href="sql.htm#show-index"><code>SHOW INDEX</code></a>, когда поле
<code>Non_unique</code> = <code>0</code>.</li>

<li>Столбец <code>CONSTRAINT_TYPE</code> может содержать одно
из этих значений: <code>UNIQUE</code>, <code>PRIMARY
KEY</code>, <code>FOREIGN KEY</code>, <code>CHECK</code>. Это столбец
<a href="types.htm#char"><code>CHAR</code></a> (не
<a href="types.htm#enum"><code>ENUM</code></a>). Значение <code>CHECK</code>
не доступно, пока мы не поддерживаем <code>CHECK</code>.</p></li></ul>

<h2><a name="table-privileges-table"></a>22.26. Таблица
INFORMATION_SCHEMA TABLE_PRIVILEGES</h2>
<p>Таблица <a href="#table-privileges-table"><code>TABLE_PRIVILEGES
</code></a> предоставляет информацию о табличных привилегиях. Эта информация
прибывает из таблицы <code>mysql.tables_priv</code>.</p>

<table border="1">
<thead><tr><th scope="col"><code>INFORMATION_SCHEMA</code> Name</th>
<th scope="col"><a href="sql.htm#show"><code>SHOW</code></a> Name</th>
<th scope="col">Remarks</th></tr></thead>
<tbody><tr><td scope="row"><code>GRANTEE</code></td><td> </td><td><code>'<em>
<code>user_name</code></em>'@'<em><code>host_name</code></em>'</code>
value</td></tr>
<tr><td scope="row"><code>TABLE_CATALOG</code></td><td> </td><td><code>def
</code></td></tr>
<tr><td scope="row"><code>TABLE_SCHEMA</code></td><td> </td><td> </td></tr>
<tr><td scope="row"><code>TABLE_NAME</code></td><td> </td><td> </td></tr>
<tr><td scope="row"><code>PRIVILEGE_TYPE</code></td><td> </td><td> </td></tr>
<tr><td scope="row"><code>IS_GRANTABLE</code></td><td> </td><td> </td>
</tr></tbody></table>

<ul><li><p><code>PRIVILEGE_TYPE</code> может содержать одно (и только одно)
из этих значений: <a href="security.html#priv_select"><code>SELECT</code>
</a>, <a href="security.html#priv_insert"><code>INSERT</code></a>,
<a href="security.html#priv_update"><code>UPDATE</code></a>,
<a href="security.html#priv_references"><code>REFERENCES</code></a>,
<a href="security.html#priv_alter"><code>ALTER</code></a>,
<a href="security.html#priv_index"><code>INDEX</code></a>,
<a href="security.html#priv_drop"><code>DROP</code></a> или
<a href="security.html#priv_create-view"><code>CREATE VIEW</code></a>.
</p></li></ul>

<p>Следующие запросы <span><em>НЕ</em></span> эквивалентны:
<pre>
SELECT ... FROM INFORMATION_SCHEMA.TABLE_PRIVILEGES
SHOW GRANTS ...
</pre>

<h2><a name="triggers-table"></a>22.27. Таблица INFORMATION_SCHEMA TRIGGERS
</h2>
<p>Таблица <a href="#triggers-table"><code>TRIGGERS</code></a>
предоставляет информацию о триггерах. Чтобы видеть информацию о триггерах
таблицы, Вы должны иметь привилегию <a href="security.html#priv_trigger">
<code>TRIGGER</code></a> для таблицы.</p>

<table border="1">
<thead><tr><th scope="col"><code>INFORMATION_SCHEMA</code> Name</th>
<th scope="col"><a href="sql.htm#show"><code>SHOW</code></a> Name</th>
<th scope="col">Remarks</th></tr></thead>
<tbody><tr><td scope="row"><code>TRIGGER_CATALOG</code></td><td> </td>
<td><code>def</code></td></tr>
<tr><td scope="row"><code>TRIGGER_SCHEMA</code></td><td> </td><td> </td></tr>
<tr><td scope="row"><code>TRIGGER_NAME</code></td><td><code>Trigger</code>
</td><td> </td></tr>
<tr><td scope="row"><code>EVENT_MANIPULATION</code></td><td><code>Event
</code></td><td> </td></tr>
<tr><td scope="row"><code>EVENT_OBJECT_CATALOG</code></td><td> </td><td>
<code>def</code></td></tr>
<tr><td scope="row"><code>EVENT_OBJECT_SCHEMA</code></td><td> </td><td> </td>
</tr>
<tr><td scope="row"><code>EVENT_OBJECT_TABLE</code></td><td><code>Table
</code></td><td> </td></tr>
<tr><td scope="row"><code>ACTION_ORDER</code></td><td> </td><td> </td></tr>
<tr><td scope="row"><code>ACTION_CONDITION</code></td><td> </td><td><code>
NULL</code></td></tr>
<tr><td scope="row"><code>ACTION_STATEMENT</code></td><td><code>Statement
</code></td><td> </td></tr>
<tr><td scope="row"><code>ACTION_ORIENTATION</code></td><td> </td><td><code>
ROW</code></td></tr>
<tr><td scope="row"><code>ACTION_TIMING</code></td><td><code>Timing</code>
</td><td> </td></tr>
<tr><td scope="row"><code>ACTION_REFERENCE_OLD_TABLE</code></td><td> </td>
<td><code>NULL</code></td></tr>
<tr><td scope="row"><code>ACTION_REFERENCE_NEW_TABLE</code></td><td> </td>
<td><code>NULL</code></td></tr>
<tr><td scope="row"><code>ACTION_REFERENCE_OLD_ROW</code></td><td> </td><td>
<code>OLD</code></td></tr>
<tr><td scope="row"><code>ACTION_REFERENCE_NEW_ROW</code></td><td> </td><td>
<code>NEW</code></td></tr>
<tr><td scope="row"><code>CREATED</code></td><td><code>Created</code></td>
<td> </td></tr>
<tr><td scope="row"><code>SQL_MODE</code></td><td><code>sql_mode</code></td>
<td>MySQL extension</td></tr>
<tr><td scope="row"><code>DEFINER</code></td><td><code>Definer</code></td>
<td>MySQL extension</td></tr>
<tr><td scope="row"><code>CHARACTER_SET_CLIENT</code></td><td><code>
character_set_client</code></td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>COLLATION_CONNECTION</code></td><td><code>
collation_connection</code></td><td>MySQL extension</td></tr>
<tr><td scope="row"><code>DATABASE_COLLATION</code></td><td><code>
Database Collation</code></td><td>MySQL extension</td></tr></tbody></table>

<ul><li><p>Имена в столбце <span><a href="sql.htm#show"><code>SHOW</code></a>
Name</span> обращаются к запросу <a href="sql.htm#show-triggers"><code>SHOW
TRIGGERS</code></a>, а не <a href="sql.htm#show-create-trigger"><code>SHOW
CREATE TRIGGER</code></a>. См. <a href="sql.htm#show-triggers">раздел
14.7.5.38</a>.</li>

<li><code>TRIGGER_SCHEMA</code> и <code>TRIGGER_NAME</code>:
Название базы данных, в которой триггер происходит и
имя триггера, соответственно.</li>

<li><code>EVENT_MANIPULATION</code>: Событие триггера. Это тип действия на
связанной таблице, для которого активируется триггер. Значения:
<code>'INSERT'</code> (строка была вставлена), <code>'DELETE'</code>
(строка была удалена) или <code>'UPDATE'</code> (строка была изменена).</li>

<li><code>EVENT_OBJECT_SCHEMA</code> и <code>EVENT_OBJECT_TABLE</code>:
Как отмечено в <a href="stored.htm#triggers">разделе 21.3</a>,
каждый триггер связан точно с одной таблицей. Эти столбцы указывают на базу
данных, в которой эта таблица находится, и имя таблицы, соответственно.</li>

<li><code>ACTION_ORDER</code>: Порядковая позиция действия триггера в
пределах списка на той же самой таблице с теми же самыми значениями
<code>EVENT_MANIPULATION</code> и <code>ACTION_TIMING</code>.</li>

<li><code>ACTION_STATEMENT</code>: Тело триггера, то есть, запрос,
выполненный, когда триггер активируется. Этот текст использует UTF-8.</li>
<li><code>ACTION_ORIENTATION</code>: Всегда содержит значение
<code>'ROW'</code>.</li>

<li><code>ACTION_TIMING</code>: Активируется ли триггер прежде или после
инициирующего события. Значения
<code>'BEFORE'</code> или <code>'AFTER'</code>.</li>

<li><code>ACTION_REFERENCE_OLD_ROW</code> и
<code>ACTION_REFERENCE_NEW_ROW</code>:
Старые и новые идентификаторы столбца, соответственно. Это означает, что
<code>ACTION_REFERENCE_OLD_ROW</code> всегда содержит значение
<code>'OLD'</code>, а <code>ACTION_REFERENCE_NEW_ROW</code> <code>'NEW'
</code>.</li>

<li><code>CREATED</code>: Дата и время, когда триггер создавался. Это
<code>TIMESTAMP(2)</code> (с дробной частью в сотые части секунд).</li>
<li><code>SQL_MODE</code>: Режим SQL, когда триггер создавался и под которым
он выполняется. Для разрешенных значений см.
<a href="server.htm#sql-mode">раздел 6.1.8</a>.</li>

<li><code>DEFINER</code>: Учетная запись пользователя, который создал
триггер, в формате <code>'<em><code>user_name</code></em>'@'<em><code>
host_name</code></em>'</code>.</li>

<li><code>CHARACTER_SET_CLIENT</code>: Значение сеансовой переменной
<a href="server.htm#sysvar_character_set_client"><code>character_set_client
</code></a>, когда триггер создавался.</li>

<li>
<code>COLLATION_CONNECTION</code>: Значение сеансовой переменной
<a href="server.htm#sysvar_collation_connection"><code>collation_connection
</code></a>, когда триггер создавался.</li>

<li><code>DATABASE_COLLATION</code>: Сопоставление базы данных, с
которой связан триггер.</li>
<li>Следующие столбцы в настоящее время всегда содержат
<code>NULL</code>: <code>ACTION_CONDITION</code>,
<code>ACTION_REFERENCE_OLD_TABLE</code> и
<code>ACTION_REFERENCE_NEW_TABLE</code>.</p></li></ul>

<p>Пример, используя триггер <code>ins_sum</code>, определенный в
<a href="stored.htm#triggers">разделе 21.3</a>:
<pre>
mysql&gt; SELECT * FROM INFORMATION_SCHEMA.TRIGGERS
                   WHERE TRIGGER_SCHEMA='test' AND TRIGGER_NAME='ins_sum'\G
*************************** 1. row ***************************
 TRIGGER_CATALOG: def
  TRIGGER_SCHEMA: test
TRIGGER_NAME: ins_sum
EVENT_MANIPULATION: INSERT
  EVENT_OBJECT_CATALOG: def
   EVENT_OBJECT_SCHEMA: test
EVENT_OBJECT_TABLE: account
ACTION_ORDER: 1
ACTION_CONDITION: NULL
ACTION_STATEMENT: SET @sum = @sum + NEW.amount
ACTION_ORIENTATION: ROW
   ACTION_TIMING: BEFORE
ACTION_REFERENCE_OLD_TABLE: NULL
ACTION_REFERENCE_NEW_TABLE: NULL
  ACTION_REFERENCE_OLD_ROW: OLD
  ACTION_REFERENCE_NEW_ROW: NEW
 CREATED: 2013-07-05 07:41:21.26
SQL_MODE: NO_ENGINE_SUBSTITUTION
 DEFINER: me@localhost
  CHARACTER_SET_CLIENT: utf8
  COLLATION_CONNECTION: utf8_general_ci
DATABASE_COLLATION: latin1_swedish_ci
</pre>

<h2><a name="user-privileges-table"></a>22.28. Таблица
INFORMATION_SCHEMA USER_PRIVILEGES</h2>
<p>Таблица <a href="#user-privileges-table"><code>USER_PRIVILEGES
</code></a> предоставляет информацию о глобальных привилегиях. Эта информация
прибывает из таблицы <code>mysql.user</code>.</p>

<table border="1">
<thead><tr><th scope="col"><code>INFORMATION_SCHEMA</code> Name</th>
<th scope="col"><a href="sql.htm#show"><code>SHOW</code></a> Name</th>
<th scope="col">Remarks</th></tr></thead>
<tbody><tr><td scope="row"><code>GRANTEE</code></td><td> </td><td>
<code>'<em><code>user_name</code></em>'@'<em><code>host_name</code>
</em>'</code> value, MySQL extension</td></tr>
<tr><td scope="row"><code>TABLE_CATALOG</code></td><td> </td><td><code>def
</code>, MySQL extension</td></tr>
<tr><td scope="row"><code>PRIVILEGE_TYPE</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>IS_GRANTABLE</code></td><td> </td><td>MySQL
extension</td></tr></tbody></table>
<ul><li><p>Это нестандартная таблица. Это берет свои значения от таблицы
<code>mysql.user</code>.</p></li></ul>

<h2><a name="views-table"></a>22.29. Таблица INFORMATION_SCHEMA VIEWS</h2>
<p>Таблица <a href="#views-table"><code>VIEWS</code></a>
предоставляет информацию о представлениях в базах данных. Вы должны иметь
привилегию <a href="security.html#priv_show-view"><code>SHOW VIEW</code></a>,
чтобы получить доступ к этой таблице.</p>

<table border="1">
<thead><tr><th scope="col"><code>INFORMATION_SCHEMA</code> Name</th>
<th scope="col"><a href="sql.htm#show"><code>SHOW</code></a> Name</th>
<th scope="col">Remarks</th></tr></thead>
<tbody><tr><td scope="row"><code>TABLE_CATALOG</code></td><td> </td><td>
<code>def</code></td></tr>
<tr><td scope="row"><code>TABLE_SCHEMA</code></td><td> </td><td> </td></tr>
<tr><td scope="row"><code>TABLE_NAME</code></td><td> </td><td> </td></tr>
<tr><td scope="row"><code>VIEW_DEFINITION</code></td><td> </td><td> </td></tr>
<tr><td scope="row"><code>CHECK_OPTION</code></td><td> </td><td> </td></tr>
<tr><td scope="row"><code>IS_UPDATABLE</code></td><td> </td><td> </td></tr>
<tr><td scope="row"><code>DEFINER</code></td><td> </td><td> </td></tr>
<tr><td scope="row"><code>SECURITY_TYPE</code></td><td> </td><td> </td></tr>
<tr><td scope="row"><code>CHARACTER_SET_CLIENT</code></td><td> </td><td>MySQL
extension</td></tr>
<tr><td scope="row"><code>COLLATION_CONNECTION</code></td><td> </td><td>MySQL
extension</td></tr></tbody></table>

<ul><li><p>Столбец <code>VIEW_DEFINITION</code> имеет большинство того, что
Вы видите в поле <code>Create Table</code> вывода
<a href="sql.htm#show-create-view"><code>SHOW CREATE VIEW</code></a>.
Пропустите слова прежде <a href="sql.htm#select"><code>SELECT</code></a> и
слова <code>WITH CHECK OPTION</code>. Предположите, что
оригинальный запрос был:
<pre>
CREATE VIEW v AS
       SELECT s2, s1 FROM t WHERE s1 &gt; 5
       ORDER BY s1 WITH CHECK OPTION;
</pre>

Тогда определение представления похоже на это:
<pre>
SELECT s2,s1 FROM t WHERE s1 &gt; 5 ORDER BY s1
</pre></li>
<li><p>Столбец <code>CHECK_OPTION</code> имеет значение
<code>NONE</code>, <code>CASCADE</code> или <code>LOCAL</code>.</li>

<li>MySQL устанавливает флаг, названный флагом обновляемости представления,
в ходе <a href="sql.htm#create-view"><code>CREATE VIEW</code></a>. Флаг
<code>YES</code> (true), если <a href="sql.htm#update"><code>UPDATE</code>
</a> и <a href="sql.htm#delete"><code>DELETE</code></a> (и подобные
операции) являются законными для представления. Иначе, флаг установлен в
<code>NO</code> (false). Столбец <code>IS_UPDATABLE</code> таблицы
<a href="#views-table"><code>VIEWS</code></a> выводит на экран
состояние этого флага. Это означает, что сервер всегда знает, является
ли представление обновляемым.</p>

<p>Если представление не обновляемое, такие запросы, как
<a href="sql.htm#update"><code>UPDATE</code></a>,
<a href="sql.htm#delete"><code>DELETE</code></a> и
<a href="sql.htm#insert"><code>INSERT</code></a>
незаконны и будут отклонены. Отметьте, что, даже если представление
обновляемое невозможно вставить в него, для деталей обратитесь к
<a href="stored.htm#view-updatability">разделу 21.5.3</a>.</li>

<li><code>DEFINER</code>: Учетная запись пользователя, который создал
представление, в формате <code>'<em><code>user_name</code></em>'@'<em>
<code>host_name</code></em>'</code>. <code>SECURITY_TYPE</code>
имеет значение <code>DEFINER</code> или <code>INVOKER</code>.</li>

<li><code>CHARACTER_SET_CLIENT</code>: Значение сеансовой переменной
<a href="server.htm#sysvar_character_set_client"><code>character_set_client
</code></a>, когда представление создавалось.</li>

<li>
<code>COLLATION_CONNECTION</code>: Значение сеансовой переменной
<a href="server.htm#sysvar_collation_connection"><code>collation_connection
</code></a>, когда представление создавалось.</p></li></ul>

<p>MySQL позволяет Вам использовать отличающиеся настройки
<a href="server.htm#sysvar_sql_mode"><code>sql_mode</code></a>, чтобы указать
серверу тип синтаксиса SQL. Например, Вы могли бы использовать
<a href="server.htm#sqlmode_ansi"><code>ANSI</code></a> режим SQL, чтобы
гарантировать, что MySQL правильно интерпретирует стандартный оператор
конкатенации SQL, двойную черту (<code>||</code>), в Ваших запросах. Если Вы
тогда создаете представление, которое связывает элементы, установка
<a href="server.htm#sysvar_sql_mode"><code>sql_mode</code></a>
в значение, отличающееся от <a href="server.htm#sqlmode_ansi"><code>ANSI
</code></a> может заставить представление стать недопустимым. Но дело обстоит
не так. Независимо от того, как Вы выписываете определение представления,
MySQL всегда хранит это тем же самым путем, в канонической форме. Вот пример,
который показывает, как сервер изменяет оператор связи двойной черты на
функцию <a href="funct.htm#function_concat"><code>CONCAT()</code></a>:
<pre>
mysql&gt; SET sql_mode = 'ANSI';
Query OK, 0 rows affected (0.00 sec)

mysql&gt; CREATE VIEW test.v AS SELECT 'a' || 'b' as col1;
Query OK, 0 rows affected (0.00 sec)

mysql&gt; SELECT VIEW_DEFINITION FROM INFORMATION_SCHEMA.VIEWS
                 WHERE TABLE_SCHEMA = 'test' AND TABLE_NAME = 'v';
+----------------------------------+
| VIEW_DEFINITION                  |
+----------------------------------+
| select concat('a','b') AS `col1` |
+----------------------------------+
1 row in set (0.00 sec)
</pre>

Преимущество хранения определения представления в канонической форме состоит
в том, что изменения, произведенные позже в значении
<a href="server.htm#sysvar_sql_mode"><code>sql_mode</code></a>
не будут затрагивать результаты представления. Однако, дополнительное
последствие в том, что комментарии до
<a href="sql.htm#select"><code>SELECT</code></a> обрезаются
от определения сервером.</p>

<h2><a name="innodb-i_s-tables"></a>22.30. Таблицы InnoDB
INFORMATION_SCHEMA</h2>
<p>Этот раздел обеспечивает табличные определения для таблиц
<code>InnoDB</code> <code>INFORMATION_SCHEMA</code>.
Для соответствующей информации и примеров см.
<a href="innodb.htm#innodb-information-schema">раздел 16.14</a>.</p>

<p>Таблицы <code>InnoDB</code> <code>INFORMATION_SCHEMA</code>
могут использоваться, чтобы контролировать активность <code>InnoDB</code>,
чтобы обнаружить неэффективности прежде, чем они превратятся в проблемы,
или расследовать проблемы. Поскольку Ваша база данных становится больше и
более занятой, сталкиваясь с пределами Ваших аппаратных средств, Вы
контролируете и настраиваете эти аспекты, чтобы сохранить базу
данных, работающую гладко.</p>

<h3><a name="innodb-buffer-page-table"></a>22.30.1. Таблица
INFORMATION_SCHEMA INNODB_BUFFER_PAGE</h3>
<p>Таблица <code>INNODB_BUFFER_PAGE</code> содержит информацию о каждой
<a href="glossary.htm#glos_page">странице</a> в
<a href="glossary.htm#glos_buffer_pool">буферном бассейне</a> <code>InnoDB
</code>.</p>

<p>Для связанной информации об использовании и примеров см.
<a href="innodb.htm#innodb-information-schema-buffer-pool-tables">
раздел 16.14.5</a>.</p>

<p>Запросы таблицы <code>INNODB_BUFFER_PAGE</code> могут ввести существенные
накладные расходы. Не запрашивайте эту таблицу на производственной системе,
если Вы не знаете об исполнительном влиянии, которое Ваш запрос может
оказать, и определили это как приемлемое. Чтобы избежать воздействия на
работу, воспроизведите проблему, которую Вы хотите исследовать на
испытательном образце и запросите на нем таблицу
<code>INNODB_BUFFER_PAGE</code>.</p>

<a name="innodb-information-schema-innodb_buffer_page_table"></a>
<p><b>Таблица 22.1. Столбцы INNODB_BUFFER_PAGE</b></p>
<table border="1">
<thead><tr><th scope="col">Имя</th><th scope="col">Описание</th></tr></thead>
<tbody><tr><td scope="row"><code>POOL_ID</code></td><td>
ID бассейна. Идентификатор, чтобы различить разные экземпляры бассейна.
</td></tr>
<tr><td scope="row"><code>BLOCK_ID</code></td><td>ID блока бассейна.</td></tr>
<tr><td scope="row"><code>SPACE</code></td><td>ID табличного пространства.
Использует то же самое значение, что и
<code>INNODB_SYS_TABLES.SPACE</code>.</td></tr>
<tr><td scope="row"><code>PAGE_NUMBER</code></td><td>Номер страницы.</td></tr>
<tr><td scope="row"><code>PAGE_TYPE</code></td><td>Тип страницы. Разрешенные
значения: <code>ALLOCATED</code> (недавно выделенная страница),
<code>INDEX</code> (узел B-tree), <code>UNDO_LOG</code> (страница журнала
отмен), <code>INODE</code> (узел индекса), <code>IBUF_FREE_LIST</code>
(список свободных буферов вставки), <code>IBUF_BITMAP</code> (карта буферов
вставки), <code>SYSTEM</code> (Системная страница),
<code>TRX_SYSTEM</code> (Операционные системные данные),
<code>FILE_SPACE_HEADER</code> (Заголовок пространства файла),
<code>EXTENT_DESCRIPTOR</code> (Дескрипторная страница экстента),
<code>BLOB</code> (Несжатая страница BLOB),
<code>COMPRESSED_BLOB</code> (первая сжатая страница BLOB),
<code>COMPRESSED_BLOB2</code> (Последующая сжатая страница BLOB),
<code>IBUF_INDEX</code> (индекс буферов вставки), RTREE_INDEX
(пространственный индекс), SDI_INDEX (SDI индекс), SDI_BLOB
(несжатый SDI BLOB), SDI_COMPRESSED_BLOB (сжатый SDI BLOB),
<code>UNKNOWN</code>.</td></tr>
<tr><td scope="row"><code>FLUSH_TYPE</code></td><td>Тип сброса.</td></tr>
<tr><td scope="row"><code>FIX_COUNT</code></td><td>Число потоков,
использующих этот блок в буферном бассейне. Когда ноль, блок имеет
право быть удаленным.</td></tr>
<tr><td scope="row"><code>IS_HASHED</code></td><td>Был ли хэш индекса
основан на этой странице.</td></tr>
<tr><td scope="row"><code>NEWEST_MODIFICATION</code></td><td>
Порядковый номер самой молодой модификации.</td></tr>
<tr><td scope="row"><code>OLDEST_MODIFICATION</code></td><td>
Порядковый номер самой старой модификации.</td></tr>
<tr><td scope="row"><code>ACCESS_TIME</code></td><td>
Абстрактный номер, определяющий первое время доступа к странице.</td></tr>
<tr><td scope="row"><code>TABLE_NAME</code></td><td>
Название таблицы, к которой страница принадлежит. Этот столбец применим
только к страницам типа <code>INDEX</code>.</td></tr>
<tr><td scope="row"><code>INDEX_NAME</code></td><td>
Название индекса, к которому страница принадлежит. Это может быть название
кластеризируемого или вторичного индекса. Этот столбец применим только к
страницам типа <code>INDEX</code>.</td></tr>
<tr><td scope="row"><code>NUMBER_RECORDS</code></td><td>
Число отчетов в пределах страницы.</td></tr>
<tr><td scope="row"><code>DATA_SIZE</code></td><td>Сумма размеров отчетов.
Этот столбец применим только к страницам типа <code>INDEX</code>.</td></tr>
<tr><td scope="row"><code>COMPRESSED_SIZE</code></td><td>
Сжатый размер страницы. Нуль для страниц, которые не сжаты.</td></tr>
<tr><td scope="row"><code>PAGE_STATE</code></td><td>
Статус страницы. У страницы с допустимыми данными есть одно из следующих
состояний: <code>FILE_PAGE</code> (буферизует страницу данных из файла),
<code>MEMORY</code> (буферизует страницу из объекта в памяти),
<code>COMPRESSED</code>. Другие возможные статусы
(управляемые <code>InnoDB</code>): <code>NULL</code>,
<code>READY_FOR_USE</code>, <code>NOT_USED</code> или
<code>REMOVE_HASH</code>.</td></tr>
<tr><td scope="row"><code>IO_FIX</code></td><td>Определяет, находится ли
какой-либо ввод / вывод на рассмотрении для этой страницы:
<code>IO_NONE</code> = нет I/O на ожидании,
<code>IO_READ</code> = чтение ждет,
<code>IO_WRITE</code> = запись ждет.</td></tr>
<tr><td scope="row"><code>IS_OLD</code></td><td>
Определяет, находится ли блок в подсписке старых блоков списка LRU.</td></tr>
<tr><td scope="row"><code>FREE_PAGE_CLOCK</code></td><td>
Значение <code>freed_page_clock</code> считает, когда блок был последним,
помещенным во главе списка LRU. <code>freed_page_clock</code>
отслеживает число блоков, удаленных из конца списка LRU.
</td></tr></tbody></table>

<p><span><strong>Пример</strong></span>:
<pre>
mysql&gt; SELECT * FROM INFORMATION_SCHEMA.INNODB_BUFFER_PAGE LIMIT 1\G
*************************** 1. row ***************************
  POOL_ID: 0
 BLOCK_ID: 0
SPACE: 97
PAGE_NUMBER: 2473
PAGE_TYPE: INDEX
 FLUSH_TYPE: 1
FIX_COUNT: 0
IS_HASHED: YES
NEWEST_MODIFICATION: 733855581
OLDEST_MODIFICATION: 0
ACCESS_TIME: 3378385672
 TABLE_NAME: `employees`.`salaries`
 INDEX_NAME: PRIMARY
 NUMBER_RECORDS: 468
DATA_SIZE: 14976
COMPRESSED_SIZE: 0
 PAGE_STATE: FILE_PAGE
   IO_FIX: IO_NONE
   IS_OLD: YES
FREE_PAGE_CLOCK: 66
</pre>

<ul><li><p>Эта таблица прежде всего полезна для исполнительного контроля на
опытном уровне или развивая связанные с работой расширения для MySQL.</li>
<li>Используйте <a href="sql.htm#describe"><code>DESCRIBE</code></a> или
<a href="sql.htm#show-columns"><code>SHOW COLUMNS</code></a>, чтобы
просмотреть дополнительную информацию о столбцах этой таблицы, включая типы
данных и значения по умолчанию.</li>

<li>Вы должны иметь привилегию <a href="security.html#priv_process"><code>
PROCESS</code></a>, чтобы запросить эту таблицу.</li>
<li>Когда таблицы, строки таблицы, разделения или индексы удалены, связанные
страницы остаются в буферном бассейне, пока пространство не потребуется для
других данных. Таблица <code>INNODB_BUFFER_PAGE</code> сообщает информацию
об этих страницах, пока они не выселены из буферного бассейна. Для получения
дополнительной информации о том, как <code>InnoDB</code> управляет
буферными данными см. <a href="innodb.htm#innodb-buffer-pool">
раздел 16.6.3.1</a>.</p></li></ul>

<h3><a name="innodb-buffer-page-lru-table"></a>22.30.2. Таблица
INFORMATION_SCHEMA INNODB_BUFFER_PAGE_LRU</h3>
<p>Таблица <code>INNODB_BUFFER_PAGE_LRU</code> содержит информацию о
страницах в <a href="glossary.htm#glos_buffer_pool">буферном бассейне</a>
<code>InnoDB</code>, в особенности как они упорядочиваются в списке LRU,
который определяет, какие страницы <a href="glossary.htm#glos_eviction">
удалить</a> из буферного бассейна, когда он становится полным.</p>

<p>Таблица <a href="#innodb-buffer-page-lru-table"><code>
INNODB_BUFFER_PAGE_LRU</code></a> имеет те же самые столбцы, что и
<a href="#innodb-buffer-page-table"><code>INNODB_BUFFER_PAGE</code>
</a>, за исключением того, что
<a href="#innodb-buffer-page-lru-table"><code>
INNODB_BUFFER_PAGE_LRU</code></a> имеет столбец <code>LRU_POSITION</code>
вместо <code>BLOCK_ID</code> column.</p>

<a name="innodb-information-schema-innodb_buffer_page_lru_table"></a>
<p><b>Таблица 22.2. Столбцы INNODB_BUFFER_PAGE_LRU</b></p>
<table border="1">
<thead><tr><th scope="col">Имя</th><th scope="col">Описание</th></tr></thead>
<tbody><tr><td scope="row"><code>POOL_ID</code></td><td>
ID бассейна. Идентификатор, чтобы различить разные экземпляры бассейна.
</td></tr>
<tr><td scope="row"><code>LRU_POSITION</code></td><td>
Позиция страницы в списке LRU.</td></tr>
<tr><td scope="row"><code>SPACE</code></td><td>ID табличного пространства.
Использует то же самое значение, что и
<code>INNODB_SYS_TABLES.SPACE</code>.</td></tr>
<tr><td scope="row"><code>PAGE_NUMBER</code></td><td>Номер страницы.</td></tr>
<tr><td scope="row"><code>PAGE_TYPE</code></td><td>Тип страницы. Разрешенные
значения: <code>ALLOCATED</code> (недавно выделенная страница),
<code>INDEX</code> (узел B-tree), <code>UNDO_LOG</code> (страница журнала
отмен), <code>INODE</code> (узел индекса), <code>IBUF_FREE_LIST</code>
(список свободных буферов вставки), <code>IBUF_BITMAP</code> (карта буферов
вставки), <code>SYSTEM</code> (Системная страница),
<code>TRX_SYSTEM</code> (Операционные системные данные),
<code>FILE_SPACE_HEADER</code> (Заголовок пространства файла),
<code>EXTENT_DESCRIPTOR</code> (Дескрипторная страница экстента),
<code>BLOB</code> (Несжатая страница BLOB),
<code>COMPRESSED_BLOB</code> (первая сжатая страница BLOB),
<code>COMPRESSED_BLOB2</code> (Последующая сжатая страница BLOB),
<code>IBUF_INDEX</code> (индекс буферов вставки), RTREE_INDEX
(пространственный индекс), SDI_INDEX (SDI индекс), SDI_BLOB
(несжатый SDI BLOB), SDI_COMPRESSED_BLOB (сжатый SDI BLOB),
<code>UNKNOWN</code>.</td></tr>
<tr><td scope="row"><code>FLUSH_TYPE</code></td><td>Тип сброса.</td></tr>
<tr><td scope="row"><code>FIX_COUNT</code></td><td>Число потоков,
использующих этот блок в буферном бассейне. Когда ноль, блок имеет
право быть удаленным.</td></tr>
<tr><td scope="row"><code>IS_HASHED</code></td><td>Был ли хэш индекса
основан на этой странице.</td></tr>
<tr><td scope="row"><code>NEWEST_MODIFICATION</code></td><td>
Порядковый номер самой молодой модификации.</td></tr>
<tr><td scope="row"><code>OLDEST_MODIFICATION</code></td><td>
Порядковый номер самой старой модификации.</td></tr>
<tr><td scope="row"><code>ACCESS_TIME</code></td><td>
Абстрактный номер, определяющий первое время доступа к странице.</td></tr>
<tr><td scope="row"><code>TABLE_NAME</code></td><td>
Название таблицы, к которой страница принадлежит. Этот столбец применим
только к страницам типа <code>INDEX</code>.</td></tr>
<tr><td scope="row"><code>INDEX_NAME</code></td><td>
Название индекса, к которому страница принадлежит. Это может быть название
кластеризируемого или вторичного индекса. Этот столбец применим только к
страницам типа <code>INDEX</code>.</td></tr>
<tr><td scope="row"><code>NUMBER_RECORDS</code></td><td>
Число отчетов в пределах страницы.</td></tr>
<tr><td scope="row"><code>DATA_SIZE</code></td><td>Сумма размеров отчетов.
Этот столбец применим только к страницам типа <code>INDEX</code>.</td></tr>
<tr><td scope="row"><code>COMPRESSED_SIZE</code></td><td>
Сжатый размер страницы. Нуль для страниц, которые не сжаты.</td></tr>
<tr><td scope="row"><code>PAGE_STATE</code></td><td>
Статус страницы. У страницы с допустимыми данными есть одно из следующих
состояний: <code>FILE_PAGE</code> (буферизует страницу данных из файла),
<code>MEMORY</code> (буферизует страницу из объекта в памяти),
<code>COMPRESSED</code>. Другие возможные статусы
(управляемые <code>InnoDB</code>): <code>NULL</code>,
<code>READY_FOR_USE</code>, <code>NOT_USED</code> или
<code>REMOVE_HASH</code>.</td></tr>
<tr><td scope="row"><code>IO_FIX</code></td><td>Определяет, находится ли
какой-либо ввод / вывод на рассмотрении для этой страницы:
<code>IO_NONE</code> = нет I/O на ожидании,
<code>IO_READ</code> = чтение ждет,
<code>IO_WRITE</code> = запись ждет.</td></tr>
<tr><td scope="row"><code>IS_OLD</code></td><td>
Определяет, находится ли блок в подсписке старых блоков списка LRU.</td></tr>
<tr><td scope="row"><code>FREE_PAGE_CLOCK</code></td><td>
Значение <code>freed_page_clock</code> считает, когда блок был последним,
помещенным во главе списка LRU. <code>freed_page_clock</code>
отслеживает число блоков, удаленных из конца списка LRU.
</td></tr></tbody></table>

<h4><a name="idm139965293653888"></a>Пример</h4>
<pre>
mysql&gt; SELECT * FROM INFORMATION_SCHEMA.INNODB_BUFFER_PAGE_LRU LIMIT 1\G
*************************** 1. row ***************************
  POOL_ID: 0
   LRU_POSITION: 0
SPACE: 97
PAGE_NUMBER: 1984
PAGE_TYPE: INDEX
 FLUSH_TYPE: 1
FIX_COUNT: 0
IS_HASHED: YES
NEWEST_MODIFICATION: 719490396
OLDEST_MODIFICATION: 0
ACCESS_TIME: 3378383796
 TABLE_NAME: `employees`.`salaries`
 INDEX_NAME: PRIMARY
 NUMBER_RECORDS: 468
DATA_SIZE: 14976
COMPRESSED_SIZE: 0
 COMPRESSED: NO
   IO_FIX: IO_NONE
   IS_OLD: YES
FREE_PAGE_CLOCK: 0
</pre>

<ul><li><p>Эта таблица прежде всего полезна для исполнительного контроля на
опытном уровне или развивая связанные с работой расширения MySQL.</li>
<li>Вы должны иметь привилегию
<a href="security.html#priv_process"><code>PROCESS</code></a>, чтобы
запросить эту таблицу.</li>

<li>Используйте <a href="sql.htm#describe"><code>DESCRIBE</code></a> или
<a href="sql.htm#show-columns"><code>SHOW COLUMNS</code></a>, чтобы
просмотреть дополнительную информацию о столбцах этой таблицы, включая типы
данных и значения по умолчанию.</li>

<li>Запросы этой таблицы могут потребовать, чтобы MySQL выделил большой блок
непрерывной памяти, больше чем 64 байта на каждую активную страницу в
буферном бассейне. Это распределение может потенциально вызвать ошибку
памяти, особенно для систем с буферными бассейнами в несколько гигабайт.</li>

<li>Запросы этой таблицы требуют, чтобы MySQL заблокировал структуру данных,
представляющую буферный бассейн, что может уменьшить параллелизм,
особенно для систем с буферными бассейнами в несколько гигабайт.</li>

<li>Когда таблицы, строки таблицы, разделы или индексы удалены, связанные
страницы остаются в буферном бассейне, пока пространство не потребуется для
других данных. Таблица <code>INNODB_BUFFER_PAGE_LRU</code> сообщает
информацию об этих страницах, пока они не выселены из буферного бассейна. Для
получения дополнительной информации о том, как
<code>InnoDB</code> управляет буферными данными бассейна см.
<a href="innodb.htm#innodb-buffer-pool">раздел 16.6.3.1</a>.</p></li></ul>

<h3><a name="innodb-buffer-pool-stats-table"></a>22.30.3. Таблица
INFORMATION_SCHEMA INNODB_BUFFER_POOL_STATS</h3>
<p>Таблица <code>INNODB_BUFFER_POOL_STATS</code> предоставляет большую часть
той же самой буферной информации о бассейне, предоставленной в выводе
<code>SHOW ENGINE INNODB STATUS</code>. Большая часть информации может также
быть получена, используя <code>InnoDB</code>
<a href="server.htm#server-status-variables">переменные состояния сервера
</a>.</p>

<p>Идея сделать страницы в буферном бассейне <span>молодыми</span> или
<span>старыми</span> обращается к передаче их между
<a href="glossary.htm#glos_sublist" title="sublist">подсписками</a>
в начале и хвосте буферной структуры данных бассейна. Молодые страницы
дольше стареют в буферном бассейне, в то время как старые страницы
на грани удления.</p>

<a name="innodb-information-schema-innodb_buffer_pool_stats_table"></a>
<p><b>Таблица 22.3. Столбцы INNODB_BUFFER_POOL_STATS</b></p>
<table border="1">
<thead><tr><th scope="col">Имя</th><th scope="col">Описание</th></tr></thead>
<tbody><tr><td scope="row"><code>POOL_ID</code></td><td>ID бассейна.
Уникальный идентификатор, чтобы различить буферные бассейны.</td></tr>
<tr><td scope="row"><code>POOL_SIZE</code></td><td>
Размер бассейна в страницах.</td></tr>
<tr><td scope="row"><code>FREE_BUFFERS</code></td><td>Число свободных
страниц в буферном бассейне</td></tr>
<tr><td scope="row"><code>DATABASE_PAGES</code></td><td>Число страниц в
буферном бассейне <code>InnoDB</code>, содержащих данные. Число включает
грязные и чистые страницы.</td></tr>
<tr><td scope="row"><code>OLD_DATABASE_PAGES</code></td><td>
Число страниц в подсписке <code>old</code> бассейна.</td></tr>
<tr><td scope="row"><code>MODIFIED_DATABASE_PAGES</code></td><td>
Число измененных (грязных) страниц базы данных</td></tr>
<tr><td scope="row"><code>PENDING_DECOMPRESS</code></td><td>
Число страниц ожидающих распаковки</td></tr>
<tr><td scope="row"><code>PENDING_READS</code></td><td>
Число страниц ожидающих чтения</td></tr>
<tr><td scope="row"><code>PENDING_FLUSH_LRU</code></td><td>
Число страниц ожидающих сброса в LRU</td></tr>
<tr><td scope="row"><code>PENDING_FLUSH_LIST</code></td><td>
Число страниц ожидающих сброса в список для сброса</td></tr>
<tr><td scope="row"><code>PAGES_MADE_YOUNG</code></td><td>
Число страниц, которые надо объявить молодыми</td></tr>
<tr><td scope="row"><code>PAGES_NOT_MADE_YOUNG</code></td><td>
Число страниц, которые НЕ надо объявить молодыми</td></tr>
<tr><td scope="row"><code>PAGES_MADE_YOUNG_RATE</code></td><td>
Число страниц, которые объявлены молодыми в секунду</td></tr>
<tr><td scope="row"><code>PAGES_MADE_NOT_YOUNG_RATE</code></td><td>
Число страниц, которые НЕ объявлены молодыми в секунду</td></tr>
<tr><td scope="row"><code>NUMBER_PAGES_READ</code></td><td>
Число прочитанных страниц</td></tr>
<tr><td scope="row"><code>NUMBER_PAGES_CREATED</code></td><td>
Число созданных страниц</td></tr>
<tr><td scope="row"><code>NUMBER_PAGES_WRITTEN</code></td><td>
Число записанных страниц</td></tr>
<tr><td scope="row"><code>PAGES_READ_RATE</code></td><td>
Число прочитанных страниц в секунду</td></tr>
<tr><td scope="row"><code>PAGES_CREATE_RATE</code></td><td>
Число созданных страниц в секунду</td></tr>
<tr><td scope="row"><code>PAGES_WRITTEN_RATE</code></td><td>
Число записанных страниц в секунду</td></tr>
<tr><td scope="row"><code>NUMBER_PAGES_GET</code></td><td>
Число логических запросов чтения.</td></tr>
<tr><td scope="row"><code>HIT_RATE</code></td><td>
Буферная частота успешных обращений бассейна</td></tr>
<tr><td scope="row"><code>YOUNG_MAKE_PER_THOUSAND_GETS</code></td><td>
Число страниц, которые объявлены молодыми на тысячу получений</td></tr>
<tr><td scope="row"><code>NOT_YOUNG_MAKE_PER_THOUSAND_GETS</code></td><td>
Число страниц, которые НЕ объявлены молодыми на тысячу получений</td></tr>
<tr><td scope="row"><code>NUMBER_PAGES_READ_AHEAD</code></td><td>
Число страниц, прочитанных предварительно</td></tr>
<tr><td scope="row"><code>NUMBER_READ_AHEAD_EVICTED</code></td><td>
Число предварительно прочитанных страниц в бассейн фоновым потоком чтения,
которые были впоследствии удалены без доступа от запросов.</td></tr>
<tr><td scope="row"><code>READ_AHEAD_RATE</code></td><td>
Число страниц, прочитанных предварительно в секунду</td></tr>
<tr><td scope="row"><code>READ_AHEAD_EVICTED_RATE</code></td><td>
Число страниц, прочитанных предварительно и удаленных без доступа в секунду
</td></tr>
<tr><td scope="row"><code>LRU_IO_TOTAL</code></td><td>LRU IO суммарно
</td></tr>
<tr><td scope="row"><code>LRU_IO_CURRENT</code></td><td>LRU IO
для текущего интервала</td></tr>
<tr><td scope="row"><code>UNCOMPRESS_TOTAL</code></td><td>
Общее количество распакованных страниц</td></tr>
<tr><td scope="row"><code>UNCOMPRESS_CURRENT</code></td><td>
Число страниц, распакованных в текущем интервале</td></tr></tbody></table>

<p><span><strong>Пример</strong></span>:
<pre>
mysql&gt; SELECT * FROM INFORMATION_SCHEMA.INNODB_BUFFER_POOL_STATS\G
*************************** 1. row ***************************
 POOL_ID: 0
 POOL_SIZE: 8192
  FREE_BUFFERS: 1
DATABASE_PAGES: 8085
OLD_DATABASE_PAGES: 2964
 MODIFIED_DATABASE_PAGES: 0
PENDING_DECOMPRESS: 0
 PENDING_READS: 0
 PENDING_FLUSH_LRU: 0
PENDING_FLUSH_LIST: 0
  PAGES_MADE_YOUNG: 22821
  PAGES_NOT_MADE_YOUNG: 3544303
 PAGES_MADE_YOUNG_RATE: 357.62602199870594
   PAGES_MADE_NOT_YOUNG_RATE: 0
 NUMBER_PAGES_READ: 2389
  NUMBER_PAGES_CREATED: 12385
  NUMBER_PAGES_WRITTEN: 13111
   PAGES_READ_RATE: 0
 PAGES_CREATE_RATE: 0
PAGES_WRITTEN_RATE: 0
  NUMBER_PAGES_GET: 33322210
HIT_RATE: 1000
YOUNG_MAKE_PER_THOUSAND_GETS: 18
NOT_YOUNG_MAKE_PER_THOUSAND_GETS: 0
 NUMBER_PAGES_READ_AHEAD: 2024
   NUMBER_READ_AHEAD_EVICTED: 0
   READ_AHEAD_RATE: 0
 READ_AHEAD_EVICTED_RATE: 0
  LRU_IO_TOTAL: 0
LRU_IO_CURRENT: 0
  UNCOMPRESS_TOTAL: 0
UNCOMPRESS_CURRENT: 0
</pre>

<ul><li><p>Эта таблица прежде всего полезна для исполнительного контроля на
опытном уровне или развивая связанные с работой расширения для MySQL.</li>
<li>Используйте <a href="sql.htm#describe"><code>DESCRIBE</code></a> или
<a href="sql.htm#show-columns"><code>SHOW COLUMNS</code></a>, чтобы
просмотреть дополнительную информацию о столбцах этой таблицы, включая типы
данных и значения по умолчанию.</li>

<li>Вы должны иметь привилегию
<a href="security.html#priv_process"><code>PROCESS</code></a>,
чтобы запросить эту таблицу.</p></li></ul>

<h3><a name="innodb-cached-indexes-table"></a>22.30.4. Таблица
INFORMATION_SCHEMA INNODB_CACHED_INDEXES</h3>
<p>Таблица <code>INNODB_CACHED_INDEXES</code> сообщает о числе индексных
страниц, кэшируемых в буферном бассейне <code>InnoDB</code>
для каждого индекса.</p>

<a name="innodb-information-schema-innodb_cached_indexes_table"></a>
<p><b>Таблица 22.4. Столбцы INNODB_CACHED_INDEXES</b></p>
<table border="1">
<thead><tr><th scope="col">Имя</th><th scope="col">Описание</th></tr></thead>
<tbody><tr><td scope="row"><code>SPACE_ID</code></td><td>
ID табличного пространства.</td></tr>
<tr><td scope="row"><code>INDEX_ID</code></td><td>Идентификатор для каждого
индекса, который уникален для всех баз данных.</td></tr>
<tr><td scope="row"><code>N_CACHED_PAGES</code></td><td>
Число индексных страниц, кэшированных в буферном бассейне.
</td></tr></tbody></table>

<p><span><strong>Примеры</strong></span>:</p>
<p>Этот запрос возвращает число индексных страниц, кэшируемых в
бассейне <code>InnoDB</code> для определенного индекса:
<pre>
mysql&gt; SELECT * FROM INFORMATION_SCHEMA.INNODB_CACHED_INDEXES
                   WHERE INDEX_ID=65\G
*************************** 1. row ***************************
  INDEX_ID: 65
N_CACHED_PAGES: 45
1 row in set (0.00 sec)
</pre>

Этот запрос возвращает число индексных страниц, кэшируемых в буферном
бассейне для каждого индекса и использует
<a href="#innodb-sys-indexes-table"><code>INNODB_SYS_INDEXES</code>
</a> и <a href="#innodb-sys-tables-table"><code>INNODB_SYS_TABLES
</code></a>, чтобы получить имя таблицы и индекса для каждого
значения <code>INDEX_ID</code>.
<pre>
SELECT tables.name AS table_name, indexes.name AS index_name,
       cached.n_cached_pages AS n_cached_pages FROM
       INFORMATION_SCHEMA.INNODB_CACHED_INDEXES AS cached,
       INFORMATION_SCHEMA.INNODB_SYS_INDEXES AS indexes,
       INFORMATION_SCHEMA.INNODB_SYS_TABLES AS tables WHERE
       cached.index_id = indexes.index_id AND
       indexes.table_id = tables.table_id;
</pre>

<ul><li><p>Используйте <a href="sql.htm#describe"><code>DESCRIBE</code></a>
или <a href="sql.htm#show-columns"><code>SHOW COLUMNS</code></a>, чтобы
просмотреть дополнительную информацию о столбцах этой таблицы, включая типы
данных и значения по умолчанию.</li>

<li>Вы должны иметь привилегию
<a href="security.html#priv_process"><code>PROCESS</code></a>, чтобы
запросить эту таблицу.</p></li></ul>

<h3><a name="innodb-cmp-table"></a>22.30.5. Таблицы INFORMATION_SCHEMA
INNODB_CMP и INNODB_CMP_RESET</h3>
<p>Таблицы <code>INNODB_CMP</code> и <code>INNODB_CMP_RESET</code>
содержат информацию о статусе операций, связанных с
<a href="glossary.htm#glos_compression">сжатыми</a>
таблицами <code>InnoDB</code>.</p>

<a name="innodb-information-schema-innodb_cmp_columns_table"></a>
<p><b>Таблица 22.5. Столбцы INNODB_CMP и INNODB_CMP_RESET</b></p>
<table border="1">
<thead><tr><th scope="col">Имя</th><th scope="col">Описание</th></tr></thead>
<tbody><tr><td scope="row"><code>PAGE_SIZE</code></td><td>
Сжатый размер страницы в байтах.</td></tr>
<tr><td scope="row"><code>COMPRESS_OPS</code></td><td>
Сколько раз страница B-дерева размера <code>PAGE_SIZE</code> была сжата.
Страницы сжаты всякий раз, когда пустая страница создается, или пространство
для несжатого журнала модификации заканчивается.</td></tr>
<tr><td scope="row"><code>COMPRESS_OPS_OK</code></td><td>
Сколько раз страница B-дерева размера <code>PAGE_SIZE</code> успешно сжата.
Это количество никогда не должно превышать <code>COMPRESS_OPS</code>.
</td></tr>
<tr><td scope="row"><code>COMPRESS_TIME</code></td><td>Полное время в
секундах, проведенных в попытках сжать страницы B-дерева размера
<code>PAGE_SIZE</code>.</td></tr>
<tr><td scope="row"><code>UNCOMPRESS_OPS</code></td><td>
Сколько раз страница B-дерева размера <code>PAGE_SIZE</code> было рассжата.
Страницы B-дерева рассжаты всякий раз, когда сжатие терпит неудачу или при
первом доступе, когда несжатая страница не существует в буферном бассейне.
</td></tr>
<tr><td scope="row"><code>UNCOMPRESS_TIME</code></td><td>
Полное время в секундах проведено в рассжатии страниц B-дерева размера
<code>PAGE_SIZE</code>.</td></tr></tbody></table>

<p><span><strong>Пример</strong></span>:
<pre>
mysql&gt; SELECT * FROM INFORMATION_SCHEMA.INNODB_CMP\G
*************************** 1. row ***************************
  page_size: 1024
   compress_ops: 0
compress_ops_ok: 0
  compress_time: 0
 uncompress_ops: 0
uncompress_time: 0
*************************** 2. row ***************************
  page_size: 2048
   compress_ops: 0
compress_ops_ok: 0
  compress_time: 0
 uncompress_ops: 0
uncompress_time: 0
*************************** 3. row ***************************
  page_size: 4096
   compress_ops: 0
compress_ops_ok: 0
  compress_time: 0
 uncompress_ops: 0
uncompress_time: 0
*************************** 4. row ***************************
  page_size: 8192
   compress_ops: 86955
compress_ops_ok: 81182
  compress_time: 27
 uncompress_ops: 26828
uncompress_time: 5
*************************** 5. row ***************************
  page_size: 16384
   compress_ops: 0
compress_ops_ok: 0
  compress_time: 0
 uncompress_ops: 0
uncompress_time: 0
</pre>

<ul><li><p>Используйте эти таблицы, чтобы измерить эффективность
<a href="glossary.htm#glos_compression">сжатых</a> таблиц
<code>InnoDB</code> в Вашей базе данных.</li>

<li>Используйте <a href="sql.htm#describe"><code>DESCRIBE</code></a> или
<a href="sql.htm#show-columns"><code>SHOW COLUMNS</code></a>, чтобы
просмотреть дополнительную информацию о столбцах этих таблиц, включая типы
данных и значения по умолчанию.</li>

<li>Вы должны иметь привилегию
<a href="security.html#priv_process"><code>PROCESS</code></a>, чтобы
запросить эту таблицу.</li>

<li>Для информации об использовании см. разделы
<a href="innodb.htm#innodb-compression-tuning-monitoring">16.9.1.4</a> и
<a href="innodb.htm#innodb-information-schema-examples-compression-sect">
16.14.1.3</a>. Для общей информации о сжатии таблиц <code>InnoDB</code> смю
<a href="innodb.htm#innodb-compression">раздел 16.9</a>.</p></li></ul>

<h3><a name="innodb-cmpmem-table"></a>22.30.6. Таблицы INFORMATION_SCHEMA
INNODB_CMPMEM и INNODB_CMPMEM_RESET</h3>
<p>Таблицы <code>INNODB_CMPMEM</code> и <code>INNODB_CMPMEM_RESET</code>
содержат информацию о статусе сжатых <a href="glossary.htm#glos_page">
страниц</a> в <a href="glossary.htm#glos_buffer_pool">буферном бассейне</a>
<code>InnoDB</code>.</p>

<a name="innodb-information-schema-innodb_cmpmem_columns_table"></a>
<p><b>Таблица 22.6. Столбцы INNODB_CMPMEM и INNODB_CMPMEM_RESET</b></p>
<table border="1">
<thead><tr><th scope="col">Имя</th><th scope="col">Описание</th></tr></thead>
<tbody><tr><td scope="row"><code>PAGE_SIZE</code></td><td>
Размер блока в байтах. Каждый отчет этой таблицы описывает
блоки этого размера.size.</td></tr>
<tr><td scope="row"><code>BUFFER_POOL_INSTANCE</code></td><td>
Уникальный идентификатор для буферного бассейна.</td></tr>
<tr><td scope="row"><code>PAGES_USED</code></td><td>
Число блоков размера <code>PAGE_SIZE</code>, которые
используются в настоящее время.</td></tr>
<tr><td scope="row"><code>PAGES_FREE</code></td><td>
Число блоков размера <code>PAGE_SIZE</code>, которые в настоящее время
доступны для распределения. Этот столбец показывает внешнюю фрагментацию в
бассейне памяти. Идеально, это число должно быть самое большее 1.</td></tr>
<tr><td scope="row"><code>RELOCATION_OPS</code></td><td>
Число раз, которое блок размера <code>PAGE_SIZE</code> был перемещен. Система
может переместить выделенный освобожденный блок, когда пытается сформировать
больший освобожденный блок. Чтение из таблицы
<code>INNODB_CMPMEM_RESET</code> сбрасывает это количество.</td></tr>
<tr><td scope="row"><code>RELOCATION_TIME</code></td><td>
Полное время в микросекундах, которое проведено в перемещении блоков размера
<code>PAGE_SIZE</code>. Чтение из таблицы
<code>INNODB_CMPMEM_RESET</code> сбрасывает это количество.
</td></tr></tbody></table>

<p><span><strong>Пример</strong></span>:
<pre>
mysql&gt; SELECT * FROM INFORMATION_SCHEMA.INNODB_CMPMEM\G
*************************** 1. row ***************************
 page_size: 1024
buffer_pool_instance: 0
pages_used: 0
pages_free: 0
  relocation_ops: 0
 relocation_time: 0
*************************** 2. row ***************************
 page_size: 2048
buffer_pool_instance: 0
pages_used: 0
pages_free: 0
  relocation_ops: 0
 relocation_time: 0
*************************** 3. row ***************************
 page_size: 4096
buffer_pool_instance: 0
pages_used: 0
pages_free: 0
  relocation_ops: 0
 relocation_time: 0
*************************** 4. row ***************************
 page_size: 8192
buffer_pool_instance: 0
pages_used: 7673
pages_free: 15
  relocation_ops: 4638
 relocation_time: 0
*************************** 5. row ***************************
 page_size: 16384
buffer_pool_instance: 0
pages_used: 0
pages_free: 0
  relocation_ops: 0
 relocation_time: 0
</pre>

<ul><li><p>Используйте эти таблицы, чтобы измерить эффективность
<a href="glossary.htm#glos_compression">сжатых</a> таблиц
<code>InnoDB</code> в Вашей базе данных.</li>

<li>Используйте <a href="sql.htm#describe"><code>DESCRIBE</code></a> или
<a href="sql.htm#show-columns"><code>SHOW COLUMNS</code></a>, чтобы
просмотреть дополнительную информацию о столбцах этих таблиц, включая типы
данных и значения по умолчанию.</li>

<li>Вы должны иметь привилегию
<a href="security.html#priv_process"><code>PROCESS</code></a>, чтобы
запросить эту таблицу.</li>

<li>Для информации об использовании см. разделы
<a href="innodb.htm#innodb-compression-tuning-monitoring">16.9.1.4</a> и
<a href="innodb.htm#innodb-information-schema-examples-compression-sect">
16.14.1.3</a>. Для общей информации о сжатии таблиц <code>InnoDB</code> смю
<a href="innodb.htm#innodb-compression">раздел 16.9</a>.</p></li></ul>

<h3><a name="innodb-cmp-per-index-table"></a>22.30.7. Таблицы
INFORMATION_SCHEMA INNODB_CMP_PER_INDEX и
INNODB_CMP_PER_INDEX_RESET</h3>
<p>Таблицы <code>INNODB_CMP_PER_INDEX</code> и
<code>INNODB_CMP_PER_INDEX_RESET</code> содержат информацию о статусе
операций, связанных со <a href="glossary.htm#glos_compression">сжатыми</a>
таблицами и индексами <code>InnoDB</code> с отдельной статистикой для каждой
комбинации базы данных, таблицы и индекса, чтобы помочь Вам оценить работу и
полноценность сжатия для определенных таблиц.</p>

<p>Для сжатой <code>InnoDB</code>-таблицы табличные данные и все
<a href="glossary.htm#glos_secondary_index">вторичные индексы</a> сжаты.</p>
<a name="innodb-information-schema-innodb_cmp_per_index_columns_table"></a>
<p><b>Таблица 22.7. Столбцы INNODB_CMP_PER_INDEX и
INNODB_CMP_PER_INDEX_RESET</b></p>
<table border="1">
<thead><tr><th scope="col">Имя</th><th scope="col">Описание</th></tr></thead>
<tbody><tr><td scope="row"><code>DATABASE_NAME</code></td><td>
База данных, содержащая применимую таблицу.</td></tr>
<tr><td scope="row"><code>TABLE_NAME</code></td><td>
Таблица, чтобы контролировать статистику сжатия.</td></tr>
<tr><td scope="row"><code>INDEX_NAME</code></td><td>
Индекс, чтобы контролировать статистику сжатия.</td></tr>
<tr><td scope="row"><code>COMPRESS_OPS</code></td><td>
Число операций сжатия. <a href="glossary.htm#glos_page">Страницы</a>
сжаты всякий раз, когда пустая страница создается, или пространство для
несжатого журнала модификации заканчивается.</td></tr>
<tr><td scope="row"><code>COMPRESS_OPS_OK</code></td><td>
Число успешных операций сжатия. Вычтите из <code>COMPRESS_OPS</code>, чтобы
получить число <a href="glossary.htm#glos_compression_failure">сбоев сжатия
</a>. Разделите на <code>COMPRESS_OPS</code>, чтобы получить
процент отказов сжатия.</td></tr>
<tr><td scope="row"><code>COMPRESS_TIME</code></td><td>
Общая сумма времени центрального процессора, в секундах, используемая для
того, чтобы сжать данные в этом индексе.</td></tr>
<tr><td scope="row"><code>UNCOMPRESS_OPS</code></td><td>
Число операций разсжатия. Сжатые <code>InnoDB</code> страницы разсжаты
всякий раз, когда сжатие
<a href="glossary.htm#glos_compression_failure">сбоит</a>, или
когда к сжатой странице в первый раз получают доступ в
<a href="glossary.htm#glos_buffer_pool">буферном бассейне</a>
и несжатая страница не существует.</td></tr>
<tr><td scope="row"><code>UNCOMPRESS_TIME</code></td><td>
Общая сумма времени центрального процессора, в секундах, используемая
для того, чтобы разсжать данные в этом индексе.</td></tr></tbody></table>

<p><span><strong>Пример</strong></span>:
<pre>
mysql&gt; SELECT * FROM INFORMATION_SCHEMA.INNODB_CMP_PER_INDEX\G
*************************** 1. row ***************************
  database_name: employees
 table_name: salaries
 index_name: PRIMARY
   compress_ops: 0
compress_ops_ok: 0
  compress_time: 0
 uncompress_ops: 23451
uncompress_time: 4
*************************** 2. row ***************************
  database_name: employees
 table_name: salaries
 index_name: emp_no
   compress_ops: 0
compress_ops_ok: 0
  compress_time: 0
 uncompress_ops: 1597
uncompress_time: 0
</pre>

<ul><li><p>Используйте эти таблицы, чтобы измерить эффективность
<a href="glossary.htm#glos_compression">сжатых</a> таблиц
<code>InnoDB</code> в Вашей базе данных.</li>

<li>Используйте <a href="sql.htm#describe"><code>DESCRIBE</code></a> или
<a href="sql.htm#show-columns"><code>SHOW COLUMNS</code></a>, чтобы
просмотреть дополнительную информацию о столбцах этих таблиц, включая типы
данных и значения по умолчанию.</li>

<li>Вы должны иметь привилегию
<a href="security.html#priv_process"><code>PROCESS</code></a>, чтобы
запросить эту таблицу.</li>

<li>Для информации об использовании см. разделы
<a href="innodb.htm#innodb-compression-tuning-monitoring">16.9.1.4</a> и
<a href="innodb.htm#innodb-information-schema-examples-compression-sect">
16.14.1.3</a>. Для общей информации о сжатии таблиц <code>InnoDB</code> смю
<a href="innodb.htm#innodb-compression">раздел 16.9</a>.</p></li></ul>

<h3><a name="innodb-ft-being-deleted-table"></a>22.30.8.
Таблица INFORMATION_SCHEMA INNODB_FT_BEING_DELETED</h3>
<p>Таблица <code>INNODB_FT_BEING_DELETED</code> снимок таблицы
<a href="#innodb-ft-deleted-table"><code>INNODB_FT_DELETED</code>
</a>, которая используется только во время выполнения
<a href="sql.htm#optimize-table"><code>OPTIMIZE TABLE</code></a>. Когда
<a href="sql.htm#optimize-table"><code>OPTIMIZE TABLE</code></a> выполнен,
таблица <code>INNODB_FT_BEING_DELETED</code> освобождена и DOC_ID удалены
из таблицы <a href="#innodb-ft-deleted-table">
<code>INNODB_FT_DELETED</code></a>. Поскольку содержание
<code>INNODB_FT_BEING_DELETED</code>, как правило, имеет короткое время
существования, эта таблица ограничила утилиту для контроля или отладки. Для
информации о выполнении <a href="sql.htm#optimize-table"><code>OPTIMIZE TABLE
</code></a> на таблицах с индексом <code>FULLTEXT</code> см.
<a href="funct.htm#fulltext-fine-tuning">раздел 13.9.6</a>.</p>

<p>Эта таблица первоначально кажется пустой, пока Вы не устанавливаете
значение переменной конфигурации
<a href="innodb.htm#sysvar_innodb_ft_aux_table"><code>innodb_ft_aux_table
</code></a>. Вывод подобен примеру для таблицы
<a href="#innodb-ft-deleted-table"><code>INNODB_FT_DELETED</code>
</a>.</p>

<a name="innodb-information-schema-innodb_ft_being_deleted_columns_table">
</a>
<p><b>Таблица 22.8. Столбцы INNODB_FT_BEING_DELETED</b></p>
<table border="1">
<thead><tr><th scope="col">Имя</th><th scope="col">Описание</th></tr></thead>
<tbody><tr><td scope="row"><code>DOC_ID</code></td><td>ID документа строки,
которая находится в процессе удаления. Это значение могло бы отразить
значение столбца ID, который Вы определили для основной таблицы, или это
может быть значение последовательности, произведенное <code>InnoDB</code>,
когда таблица не содержит подходящий столбец. Это значение используется,
чтобы пропустить строки в таблице
<a href="#innodb-ft-index-table-table"><code>innodb_ft_index_table
</code></a>, когда Вы делаете текстовые поиски перед данными для удаленных
строк, физически удаленных из индекса <code>FULLTEXT</code> запросом
<a href="sql.htm#optimize-table"><code>OPTIMIZE TABLE</code></a>.
</td></tr></tbody></table>

<ul><li>Используйте <a href="sql.htm#describe"><code>DESCRIBE</code></a> или
<a href="sql.htm#show-columns"><code>SHOW COLUMNS</code></a>, чтобы
просмотреть дополнительную информацию о столбцах этих таблиц, включая типы
данных и значения по умолчанию.</li>

<li>Вы должны иметь привилегию
<a href="security.html#priv_process"><code>PROCESS</code></a>, чтобы
запросить эту таблицу.</li>

<li>Для получения дополнительной информации о поисках <code>InnoDB</code>
<code>FULLTEXT</code> см. разделы
<a href="innodb.htm#innodb-fulltext-index">16.8.9</a> и
<a href="funct.htm#fulltext-search">13.9</a>.</p></li></ul>

<h3><a name="innodb-ft-config-table"></a>22.30.9. Таблица
INFORMATION_SCHEMA INNODB_FT_CONFIG</h3>
<p>Таблица <code>INNODB_FT_CONFIG</code> выводит на экран метаданные об
индексе <code>FULLTEXT</code> и связанной обработке для таблиц.</p>

<p>Прежде, чем Вы запросите эту таблицу, установите переменную конфигурации
<a href="innodb.htm#sysvar_innodb_ft_aux_table"><code>innodb_ft_aux_table
</code></a> к имени (включая имя базы данных) таблицы, которая содержит
индекс <code>FULLTEXT</code>, например, <code>test/articles</code>.</p>

<a name="innodb-information-schema-innodb_ft_config_columns_table"></a>
<p><b>Таблица 22.9. Столбцы INNODB_FT_CONFIG</b></p>
<table border="1">
<thead><tr><th scope="col">Имя</th><th scope="col">Описание</th></tr></thead>
<tbody><tr><td scope="row"><code>KEY</code></td><td>
Имя, определяющее элемент метаданных для таблицы <code>InnoDB</code>,
содержащей индекс <code>FULLTEXT</code>.</td></tr>
<tr><td scope="row"><code>VALUE</code></td><td>
Значение, связанное со столбцом <code>KEY</code>, отражающее
некоторое предельное значение или текущий вес для аспекта индекса
<code>FULLTEXT</code> таблицы <code>InnoDB</code>.</td></tr></tbody></table>

<p><span><strong>Пример</strong></span>:
<pre>
mysql&gt; SELECT * FROM INFORMATION_SCHEMA.INNODB_FT_CONFIG;
+---------------------------+-------------------+
| KEY                       | VALUE             |
+---------------------------+-------------------+
| optimize_checkpoint_limit | 180               |
| synced_doc_id             | 0                 |
| stopword_table_name       | test/my_stopwords |
| use_stopword              | 1                 |
+---------------------------+-------------------+
</pre>

<ul><li><p>Эта таблица предназначена только для внутренней конфигурации. Это
не предназначено для применения в статистических информационных целях.</li>

<li>Используйте <a href="sql.htm#describe"><code>DESCRIBE</code></a> или
<a href="sql.htm#show-columns"><code>SHOW COLUMNS</code></a>, чтобы
просмотреть дополнительную информацию о столбцах этих таблиц, включая типы
данных и значения по умолчанию.</li>

<li>Вы должны иметь привилегию
<a href="security.html#priv_process"><code>PROCESS</code></a>, чтобы
запросить эту таблицу.</li>

<li>Значения для столбца <code>KEY</code> может меняться в зависимости от
потребностей в исполнительной настройке и отладке полнотекстовой обработки.
Значения ключа включают:</p>

<ul><li><p><code>optimize_checkpoint_limit</code>:
Число секунд, после которых <a href="sql.htm#optimize-table"><code>
OPTIMIZE TABLE</code></a> остановится.</li>

<li><code>synced_doc_id</code>: Следующее <code>DOC_ID</code>.</li>
<li><code>stopword_table_name</code>: Имя <em><code>database/table</code>
</em> определяемой пользователем таблицы стоп-слов. Эта область кажется
пустой, если нет никакой определяемой пользователем таблицы стоп-слов.</li>
<li><code>use_stopword</code>: Указывает, используется ли таблица стоп-слов,
которая определена, когда создан индекс <code>FULLTEXT</code>.
</li></ul></li></ul>

<h3><a name="innodb-ft-default-stopword-table"></a>22.30.10. Таблица
INFORMATION_SCHEMA INNODB_FT_DEFAULT_STOPWORD</h3>
<p>Таблица <code>INNODB_FT_DEFAULT_STOPWORD</code> содержит список
<a href="glossary.htm#glos_stopword">стоп-слов</a>, которые используются по
умолчанию, создавая индекс <code>FULLTEXT</code> для <code>InnoDB</code>.</p>

<a name="innodb-information-schema-innodb_ft_default_stopword_columns_table">
</a>
<p><b>Таблица 22.10. Столбцы INNODB_FT_DEFAULT_STOPWORD</b></p>
<table border="1">
<thead><tr><th scope="col">Имя</th><th scope="col">Описание</th></tr></thead>
<tbody><tr><td scope="row"><code>value</code></td><td>
Слово, которое используется по умолчанию в качестве стоп-слова для индексов
<code>FULLTEXT</code> на таблицах <code>InnoDB</code>.
Не используемо, если Вы переопределяете значение по умолчанию опциями
<a href="innodb.htm#sysvar_innodb_ft_server_stopword_table"><code>
innodb_ft_server_stopword_table</code></a> или
<a href="innodb.htm#sysvar_innodb_ft_user_stopword_table"><code>
innodb_ft_user_stopword_table</code></a>.</td></tr></tbody></table>

<p><span><strong>Пример</strong></span>:
<pre>
mysql&gt; SELECT * FROM INFORMATION_SCHEMA.INNODB_FT_DEFAULT_STOPWORD;
+-------+
| value |
+-------+
| a     |
| about |
| an    |
| are   |
| as    |
| at    |
| be    |
| by    |
| com   |
| de    |
| en    |
| for   |
| from  |
| how   |
| i     |
| in    |
| is    |
| it    |
| la    |
| of    |
| on    |
| or    |
| that  |
| the   |
| this  |
| to    |
| was   |
| what  |
| when  |
| where |
| who   |
| will  |
| with  |
| und   |
| the   |
| www   |
+-------+
36 rows in set (0.00 sec)
</pre>

<ul><li>Используйте <a href="sql.htm#describe"><code>DESCRIBE</code></a> или
<a href="sql.htm#show-columns"><code>SHOW COLUMNS</code></a>, чтобы
просмотреть дополнительную информацию о столбцах этих таблиц, включая типы
данных и значения по умолчанию.</li>

<li>Вы должны иметь привилегию
<a href="security.html#priv_process"><code>PROCESS</code></a>, чтобы
запросить эту таблицу.</li></ul>

<h3><a name="innodb-ft-deleted-table"></a>22.30.11. Таблица
INFORMATION_SCHEMA INNODB_FT_DELETED</h3>
<p>Таблица <code>INNODB_FT_DELETED</code> делает запись строк, которые
удалены из индекса <code>FULLTEXT</code> для таблицы <code>InnoDB</code>.
Чтобы избежать дорогой перестройки индекса во время операций DML для
<code>InnoDB</code> <code>FULLTEXT</code>, информация о недавно удаленных
словах хранится отдельно, фильтруется из результатов поиска, когда Вы делаете
текстовый поиск, и удаляется из основного поиска только, когда Вы вызываете
<a href="sql.htm#optimize-table"><code>OPTIMIZE TABLE</code></a>.</p>

<p>Эта таблица первоначально кажется пустой, пока Вы не устанавливаете
значение переменной конфигурации
<a href="innodb.htm#sysvar_innodb_ft_aux_table"><code>innodb_ft_aux_table
</code></a> к имени (включая имя базы данных) таблицы, которая содержит
индекс <code>FULLTEXT</code>, например, <code>test/articles</code>.</p>

<a name="innodb-information-schema-innodb_ft_deleted_columns_table"></a>
<p><b>Таблица 22.11. Столбцы INNODB_FT_DELETED</b></p>
<table border="1">
<thead><tr><th scope="col">Имя</th><th scope="col">Описание</th></tr></thead>
<tbody><tr><td scope="row"><code>DOC_ID</code></td><td>ID документа недавно
удаленной строки. Это значение могло бы отразить значение столбца ID, который
Вы определили для основной таблицы, или это может быть значение
последовательности, произведенное <code>InnoDB</code>, когда таблица не
содержит подходящий столбец. Это значение используется, чтобы пропустить
строки в таблице <a href="#innodb-ft-index-table-table"><code>
innodb_ft_index_table</code></a>, когда Вы делаете текстовые поиски перед
данными для удаленных строк, физически удаленных из индекса
<code>FULLTEXT</code> запросом <a href="sql.htm#optimize-table"><code>
OPTIMIZE TABLE</code></a>.</td></tr></tbody></table>

<p><span><strong>Пример</strong></span>:
<pre>
mysql&gt; SELECT * FROM INFORMATION_SCHEMA.INNODB_FT_DELETED;
+--------+
| DOC_ID |
+--------+
|  6     |
|  7     |
|  8     |
+--------+
</pre>

<ul><li>Используйте <a href="sql.htm#describe"><code>DESCRIBE</code></a> или
<a href="sql.htm#show-columns"><code>SHOW COLUMNS</code></a>, чтобы
просмотреть дополнительную информацию о столбцах этих таблиц, включая типы
данных и значения по умолчанию.</li>

<li>Вы должны иметь привилегию
<a href="security.html#priv_process"><code>PROCESS</code></a>, чтобы
запросить эту таблицу.</li></ul>

<h3><a name="innodb-ft-index-cache-table"></a>22.30.12. Таблица
INFORMATION_SCHEMA INNODB_FT_INDEX_CACHE</h3>
<p><code>INNODB_FT_INDEX_CACHE</code>: Содержит информацию маркера о
недавно вставленных строках в индекс <code>FULLTEXT</code>. Чтобы избежать
дорогой перестройки индекса во время операций DML, информация о недавно
индексированных словах хранится отдельно и объединена с основным поиском,
только когда выполняется <a href="sql.htm#optimize-table"><code>OPTIMIZE
TABLE</code></a>, когда сервер остановлен или когда размер кэша превышает
предел, определенный <a href="innodb.htm#sysvar_innodb_ft_cache_size"><code>
innodb_ft_cache_size</code></a> или
<a href="innodb.htm#sysvar_innodb_ft_total_cache_size"><code>
innodb_ft_total_cache_size</code></a>.</p>

<p>Прежде, чем Вы запросите эту таблицу, установите переменную конфигурации
<a href="innodb.htm#sysvar_innodb_ft_aux_table"><code>innodb_ft_aux_table
</code></a> к имени (включая имя базы данных) таблицы, которая содержит
индекс <code>FULLTEXT</code>, например, <code>test/articles</code>.</p>

<a name="innodb-information-schema-innodb_ft_index_cache_columns_table"></a>
<p><b>Таблица 22.12. Столбцы INNODB_FT_INDEX_CACHE</b></p>
<table border="1">
<thead><tr><th scope="col">Имя</th><th scope="col">Описание</th></tr></thead>
<tbody><tr><td scope="row"><code>WORD</code></td><td>
Слово извлечено из текста недавно вставленной строки.</td></tr>
<tr><td scope="row"><code>FIRST_DOC_ID</code></td><td>Первое ID документа,
где это слово появляется в индексе <code>FULLTEXT</code>.</td></tr>
<tr><td scope="row"><code>LAST_DOC_ID</code></td><td>Последнее ID документа,
где это слово появляется в индексе <code>FULLTEXT</code>.</td></tr>
<tr><td scope="row"><code>DOC_COUNT</code></td><td>Число строк, в которых это
слово появляется в индексе <code>FULLTEXT</code>. То же самое слово может
быть несколько раз в пределах таблицы кэша, однажды для каждой комбинации
значений <code>DOC_ID</code> и <code>POSITION</code>.</td></tr>
<tr><td scope="row"><code>DOC_ID</code></td><td>ID документа недавно
вставленной строки. Это значение могло бы отразить значение ID столбца,
который Вы определили для основной таблицы, или это может быть значение
последовательности, произведенное <code>InnoDB</code>, когда таблица не
содержит подходящий столбец.</td></tr>
<tr><td scope="row"><code>POSITION</code></td><td>
Позиция этого особого случая слова в пределах соответствующего документа,
идентифицированного значением <code>DOC_ID</code>. Значение не представляет
абсолютную позицию: это смещение, добавленное к <code>POSITION</code>
предыдущего случая этого слова.</td></tr></tbody></table>

<ul><li><p>Эта таблица первоначально кажется пустой, пока Вы не
устанавливаете значение переменной конфигурации
<a href="innodb.htm#sysvar_innodb_ft_aux_table"><code>innodb_ft_aux_table
</code></a>. Следующий пример демонстрирует, как использовать опцию
<a href="innodb.htm#sysvar_innodb_ft_aux_table"><code>innodb_ft_aux_table
</code></a>, чтобы показать информацию об индексе <code>FULLTEXT</code>
для указанной таблицы.
<pre>
mysql&gt; USE test;
mysql&gt; CREATE TABLE articles (id INT UNSIGNED AUTO_INCREMENT NOT NULL
                                 PRIMARY KEY, title VARCHAR(200), body TEXT,
                                 FULLTEXT (title,body)) ENGINE=InnoDB;

mysql&gt; INSERT INTO articles (title,body) VALUES
                 ('MySQL Tutorial','DBMS stands for DataBase ...'),
                 ('How To Use MySQL Well','After you went through a ...'),
                 ('Optimizing MySQL','In this tutorial we will show ...'),
                 ('1001 MySQL Tricks','1. Never run mysqld as root. 2. ...'),
                 ('MySQL vs. YourSQL','In the following database comparison ...'),
                 ('MySQL Security','When configured properly, MySQL ...');

mysql&gt; SET GLOBAL innodb_ft_aux_table = 'test/articles';
Query OK, 0 rows affected (0.00 sec)

mysql&gt; USE INFORMATION_SCHEMA;
mysql&gt; SELECT word, doc_count, doc_id, position FROM INNODB_FT_INDEX_CACHE LIMIT 5;
+------------+-----------+--------+----------+
| word       | doc_count | doc_id | position |
+------------+-----------+--------+----------+
| 1001       | 1         |  4     |    0     |
| after      | 1         |  2     |   22     |
| comparison | 1         |  5     |   44     |
| configured | 1         |  6     |   20     |
| database   | 2         |  1     |   31     |
+------------+-----------+--------+----------+
</pre></li>

<li>Используйте <a href="sql.htm#describe"><code>DESCRIBE</code></a> или
<a href="sql.htm#show-columns"><code>SHOW COLUMNS</code></a>, чтобы
просмотреть дополнительную информацию о столбцах этих таблиц, включая типы
данных и значения по умолчанию.</li>

<li>Вы должны иметь привилегию
<a href="security.html#priv_process"><code>PROCESS</code></a>, чтобы
запросить эту таблицу.</li></ul>

<h3><a name="innodb-ft-index-table-table"></a>22.30.13. Таблица
INFORMATION_SCHEMA INNODB_FT_INDEX_TABLE</h3>
<p>Таблица <code>INNODB_FT_INDEX_TABLE</code> выводит на экран информацию об
инвертированном индексе, используемом, чтобы обработать текстовые поиски
<code>FULLTEXT</code> таблицы <code>InnoDB</code>.</p>

<p>Прежде, чем Вы запросите эту таблицу, установите переменную конфигурации
<a href="innodb.htm#sysvar_innodb_ft_aux_table"><code>innodb_ft_aux_table
</code></a> к имени (включая имя базы данных) таблицы, которая содержит
индекс <code>FULLTEXT</code>, например, <code>test/articles</code>.</p>

<a name="innodb-information-schema-innodb_ft_index_table_columns_table"></a>
<p><b>Таблица 22.13. Столбцы INNODB_FT_INDEX_TABLE</b></p>
<table border="1">
<thead><tr><th scope="col">Имя</th><th scope="col">Описание</th></tr></thead>
<tbody><tr><td scope="row"><code>WORD</code></td><td>
Слово, извлеченное из текста столбцов, которые являются частью
<code>FULLTEXT</code>.</td></tr>
<tr><td scope="row"><code>FIRST_DOC_ID</code></td><td>
Первое ID документа, где это слово появляется в индексе
<code>FULLTEXT</code>.</td></tr>
<tr><td scope="row"><code>LAST_DOC_ID</code></td><td>
Последнее ID документа, где это слово появляется в индексе
<code>FULLTEXT</code>.</td></tr>
<tr><td scope="row"><code>DOC_COUNT</code></td><td>
Число строк, в которых это слово появляется в индексе <code>FULLTEXT</code>.
То же самое слово может быть несколько раз в пределах таблицы кэша, однажды
для каждой комбинации <code>DOC_ID</code> и <code>POSITION</code>.</td></tr>
<tr><td scope="row"><code>DOC_ID</code></td><td>
ID документа строки, содержащей слово. Это значение могло бы отразить
значение ID столбца, который Вы определили для основной таблицы, или это
может быть значение последовательности, произведенное <code>InnoDB</code>,
когда таблица не содержит подходящий столбец.</td></tr>
<tr><td scope="row"><code>POSITION</code></td><td>
Позиция этого особого случая слова в пределах соответствующего документа,
идентифицированного <code>DOC_ID</code>value.</td></tr></tbody></table>

<ul><li><p>Эта таблица первоначально кажется пустой, пока Вы не
устанавливаете значение переменной конфигурации
<a href="innodb.htm#sysvar_innodb_ft_aux_table"><code>innodb_ft_aux_table
</code></a>. Следующий пример демонстрирует, как использовать опцию
<a href="innodb.htm#sysvar_innodb_ft_aux_table"><code>innodb_ft_aux_table
</code></a>, чтобы показать информацию об индексе <code>FULLTEXT</code>
для указанной таблицы. Прежде, чем информация для недавно вставленных строк
появляется в <code>INNODB_FT_INDEX_TABLE</code>, кэш индекса <code>FULLTEXT
</code> должен сброситься на диск. Это делается запуском
<a href="sql.htm#optimize-table"><code>OPTIMIZE TABLE</code></a>
на индексированной таблице с
<a href="innodb.htm#sysvar_innodb_optimize_fulltext_only"><code>
innodb_optimize_fulltext_only=ON</code></a>.
<pre>
mysql&gt; use test;
mysql&gt; CREATE TABLE articles (id INT UNSIGNED AUTO_INCREMENT NOT NULL
                                 PRIMARY KEY, title VARCHAR(200),
                                 body TEXT, FULLTEXT (title,body))
                                 ENGINE=InnoDB;

mysql&gt; INSERT INTO articles (title,body) VALUES
                 ('MySQL Tutorial','DBMS stands for DataBase ...'),
                 ('How To Use MySQL Well','After you went through a ...'),
                 ('Optimizing MySQL','In this tutorial we will show ...'),
                 ('1001 MySQL Tricks','1. Never run mysqld as root. 2. ...'),
                 ('MySQL vs. YourSQL','In the following database comparison ...'),
                 ('MySQL Security','When configured properly, MySQL ...');

mysql&gt; SET GLOBAL innodb_optimize_fulltext_only=ON;
Query OK, 0 rows affected (0.00 sec)

mysql&gt; OPTIMIZE TABLE articles;
+---------------+----------+----------+----------+
| Table         | Op       | Msg_type | Msg_text |
+---------------+----------+----------+----------+
| test.articles | optimize | status   | OK       |
+---------------+----------+----------+----------+

mysql&gt; SET GLOBAL innodb_ft_aux_table = 'test/articles';
Query OK, 0 rows affected (0.00 sec)

mysql&gt; USE INFORMATION_SCHEMA;
mysql&gt; SELECT word, doc_count, doc_id, position FROM INNODB_FT_INDEX_TABLE LIMIT 5;
+------------+-----------+--------+----------+
| word       | doc_count | doc_id | position |
+------------+-----------+--------+----------+
| 1001       | 1         |  4     |    0     |
| after      | 1         |  2     |   22     |
| comparison | 1         |  5     |   44     |
| configured | 1         |  6     |   20     |
| database   | 2         |  1     |   31     |
+------------+-----------+--------+----------+
</pre></li>

<li>Используйте <a href="sql.htm#describe"><code>DESCRIBE</code></a> или
<a href="sql.htm#show-columns"><code>SHOW COLUMNS</code></a>, чтобы
просмотреть дополнительную информацию о столбцах этих таблиц, включая типы
данных и значения по умолчанию.</li>

<li>Вы должны иметь привилегию
<a href="security.html#priv_process"><code>PROCESS</code></a>, чтобы
запросить эту таблицу.</li></ul>

<h3><a name="innodb-locks-table"></a>22.30.14.
Таблица INFORMATION_SCHEMA INNODB_LOCKS</h3>
<p>Таблица <a href="#innodb-locks-table"><code>INNODB_LOCKS</code>
</a> содержит информацию о каждой блокировке, которую транзакция
<code>InnoDB</code> запросила, но еще не приобрела, и каждой блокировке,
при которой транзакция считает, что блокирует другую транзакцию.</p>

<p>Эта таблица устарела и удалена в MySQL 8.0.1. Используйте таблицу
Performance Schema <a href="perfor.htm#data-locks-table"><code>data_locks
</code></a>. См. <a href="perfor.htm#data-locks-table">раздел 23.9.12.1
</a>.</p>

<p>Различия между <a href="#innodb-locks-table"><code>INNODB_LOCKS
</code></a> и <a href="perfor.htm#data-locks-table"><code>data_locks</code>
</a>:</p>

<ul><li><p>Если транзакция держит блокировку,
<a href="#innodb-locks-table"><code>INNODB_LOCKS</code></a>
выводит на экран блокировку, только если другая транзакция ждет ее.
<a href="perfor.htm#data-locks-table"><code>data_locks</code></a> выводит на
экран блокировку независимо от того, ждет ли какая-либо транзакция этого.
</li>

<li>У таблицы <a href="perfor.htm#data-locks-table"><code>data_locks</code>
</a> нет никакого соответствия столбцов <code>LOCK_SPACE</code>,
<code>LOCK_PAGE</code> или <code>LOCK_REC</code>.</li>

<li>Таблица <a href="#innodb-locks-table"><code>INNODB_LOCKS</code>
</a> требует глобальной привилегии <a href="security.html#priv_process">
<code>PROCESS</code></a>. Таблица <a href="perfor.htm#data-locks-table">
<code>data_locks</code></a> требует обычной привилегии
Performance Schema <a href="security.html#priv_select"><code>SELECT</code>
</a> на таблице, из которой будет выбор.</p></li></ul>

<p>Следующая таблица показывает отображение столбцов
<a href="#innodb-locks-table"><code>INNODB_LOCKS</code></a> на
столбцы <a href="perfor.htm#data-locks-table"><code>data_locks</code></a>.
Используйте эту информацию, чтобы мигрировать приложения от
одной таблицы к другой.</p>

<a name="innodb-information-schema-innodb-locks-columns"></a>
<p><b>Таблица 22.14. Отображение столбцов INNODB_LOCKS на data_locks</b></p>
<table border="1">
<thead><tr><th scope="col">INNODB_LOCKS</th><th scope="col">data_locks
</th></tr></thead>
<tbody><tr><td scope="row"><code>LOCK_ID</code></td><td><code>ENGINE_LOCK_ID
</code></td></tr>
<tr><td scope="row"><code>LOCK_TRX_ID</code></td><td><code>
ENGINE_TRANSACTION_ID</code></td></tr>
<tr><td scope="row"><code>LOCK_MODE</code></td><td><code>LOCK_MODE</code>
</td></tr>
<tr><td scope="row"><code>LOCK_TYPE</code></td><td><code>LOCK_TYPE</code>
</td></tr>
<tr><td scope="row"><code>LOCK_TABLE</code> (имена схемы и таблицы вместе)
</td><td><code>OBJECT_SCHEMA</code> (имя схемы),
<code>OBJECT_NAME</code> (имя таблицы).</td></tr>
<tr><td scope="row"><code>LOCK_INDEX</code></td><td><code>INDEX_NAME</code>
</td></tr>
<tr><td scope="row"><code>LOCK_SPACE</code></td><td>Нет.</td></tr>
<tr><td scope="row"><code>LOCK_PAGE</code></td><td>Нет.</td></tr>
<tr><td scope="row"><code>LOCK_REC</code></td><td>Нет.</td></tr>
<tr><td scope="row"><code>LOCK_DATA</code></td><td><code>LOCK_DATA</code>
</td></tr></tbody></table>

<h3><a name="innodb-lock-waits-table"></a>22.30.15. Таблица
INFORMATION_SCHEMA INNODB_LOCK_WAITS</h3>
<p>Таблица <a href="#innodb-lock-waits-table"><code>
INNODB_LOCK_WAITS</code></a> содержит одну или более строк для каждой
заблокированной транзакции <code>InnoDB</code>, указывая на блокировку,
которую это просило и любые блокировки, которые блокируют этот запрос.</p>

<p>Эта таблица устарела и удалена с MySQL 8.0.1. Используйте
таблицу <a href="perfor.htm#data-lock-waits-table"><code>data_lock_waits
</code></a> Performance Schema. См.
<a href="perfor.htm#data-lock-waits-table">раздел 23.9.12.2</a>.</p>

<p>Таблицы отличаются по требуемым привилегиям:
<a href="#innodb-lock-waits-table"><code>INNODB_LOCK_WAITS</code>
</a> требует глобальную <a href="security.html#priv_process"><code>PROCESS
</code></a>. Таблица <a href="perfor.htm#data-lock-waits-table"><code>
data_lock_waits</code></a> требует обычной привилегии Performance Schema
<a href="security.html#priv_select"><code>SELECT</code></a> для таблицы, из
которой будут взяты данные.</p>

<p>Следующая таблица показывает отображение столбцов
<a href="#innodb-lock-waits-table"><code>INNODB_LOCK_WAITS</code>
</a> на столбцы <a href="perfor.htm#data-lock-waits-table"><code>
data_lock_waits</code></a>. Используйте эту информацию,
чтобы мигрировать приложения.</p>

<a name="innodb-information-schema-innodb-lock-waits-columns"></a>
<p><b>Таблица 22.15. Отображение INNODB_LOCK_WAITS на data_lock_waits</b></p>
<table border="1">
<thead><tr><th scope="col">INNODB_LOCK_WAITS</th>
<th scope="col">data_lock_waits</th></tr></thead>
<tbody><tr><td scope="row"><code>REQUESTING_TRX_ID</code></td>
<td><code>REQUESTING_ENGINE_TRANSACTION_ID</code></td></tr>
<tr><td scope="row"><code>REQUESTED_LOCK_ID</code></td>
<td><code>REQUESTING_ENGINE_LOCK_ID</code></td></tr>
<tr><td scope="row"><code>BLOCKING_TRX_ID</code></td>
<td><code>BLOCKING_ENGINE_TRANSACTION_ID</code></td></tr>
<tr><td scope="row"><code>BLOCKING_LOCK_ID</code></td>
<td><code>BLOCKING_ENGINE_LOCK_ID</code></td></tr></tbody></table>

<h3><a name="innodb-metrics-table"></a>22.30.16. Таблица
INFORMATION_SCHEMA INNODB_METRICS</h3>
<p>Таблица <code>INFORMATION_SCHEMA</code> представляет большое разнообразие
информации о работе <code>InnoDB</code>, дополняя определенные области
таблиц <code>PERFORMANCE_SCHEMA</code> для <code>InnoDB</code>.
С простыми запросами Вы можете проверить полное здоровье системы. С более
подробными запросами Вы можете диагностировать такие проблемы, как
исполнительные узкие места, нехватки ресурсов и проблемы приложения.</p>

<p>Каждый монитор представляет пункт в исходном тексте
<code>InnoDB</code>, который инструментован, чтобы собрать встречную
информацию. Каждый счетчик может быть запущен, остановлен и сброшен. Вы
можете также выполнить эти действия для группы счетчиков,
используя их общее имя модуля.</p>

<p>По умолчанию, относительно небольшие данные собраны. Чтобы запустить,
остановить и сбросить счетчики, Вы устанавливаете один из параметров
конфигурации <a href="innodb.htm#sysvar_innodb_monitor_enable"><code>
innodb_monitor_enable</code></a>,
<a href="innodb.htm#sysvar_innodb_monitor_disable"><code>
innodb_monitor_disable</code></a>,
<a href="innodb.htm#sysvar_innodb_monitor_reset"><code>innodb_monitor_reset
</code></a> или <a href="innodb.htm#sysvar_innodb_monitor_reset_all"><code>
innodb_monitor_reset_all</code></a>, используя название счетчика, название
модуля, подстановочное соответствие для такого имени с символом
<span>%</span> или специальное ключевое слово <code>all</code>.</p>

<p>Для информации об использовании см.
<a href="innodb.htm#innodb-information-schema-metrics-table">раздел 16.14.6
</a>.</p>

<a name="innodb-information-schema-innodb_metrics_table"></a>
<p><b>Таблица 22.16. Столбцы INNODB_METRICS</b></p>
<table border="1">
<thead><tr><th scope="col">Имя</th><th scope="col">Описание</th></tr></thead>
<tbody><tr><td scope="row"><code>NAME</code></td>
<td>Уникальное имя для счетчика.</td></tr>
<tr><td scope="row"><code>SUBSYSTEM</code></td><td>
Аспект <code>InnoDB</code>, к котолрому относится метрика. Список, который
следует за таблицей, перечисляет соответствующие имена модулей, чтобы
использовать с <code>SET GLOBAL</code>.</td></tr>
<tr><td scope="row"><code>COUNT</code></td><td>
Значение, начиная со счетчика включено.</td></tr>
<tr><td scope="row"><code>MAX_COUNT</code></td><td>
Максимальное значение, начиная со счетчика включено.</td></tr>
<tr><td scope="row"><code>MIN_COUNT</code></td><td>
Минимальное значение, начиная со счетчика включено.</td></tr>
<tr><td scope="row"><code>AVG_COUNT</code></td><td>
Среднее значение, начиная со счетчика включено.</td></tr>
<tr><td scope="row"><code>COUNT_RESET</code></td><td>
Сбросить счетчик. Поля <code>_RESET</code> действуют как секундомер: Вы
можете измерить деятельность во время некоторого временного интервала, в то
время как совокупные числа все еще доступны в полях
<code>COUNT</code>, <code>MAX_COUNT</code> и подобных.</td></tr>
<tr><td scope="row"><code>MAX_COUNT_RESET</code></td><td>
Максимальное значение, после которого сбросить счетчик.</td></tr>
<tr><td scope="row"><code>MIN_COUNT_RESET</code></td><td>
Минимальное значение, после которого сбросить счетчик.</td></tr>
<tr><td scope="row"><code>AVG_COUNT_RESET</code></td><td>
Среднее значение, после которого сбросить счетчик.</td></tr>
<tr><td scope="row"><code>TIME_ENABLED</code></td><td>
Timestamp последнего запуска.</td></tr>
<tr><td scope="row"><code>TIME_DISABLED</code></td><td>
Timestamp последней остановки.</td></tr>
<tr><td scope="row"><code>TIME_ELAPSED</code></td><td>
Прошедшее время в секундах, начиная с запуска счетчика.</td></tr>
<tr><td scope="row"><code>TIME_RESET</code></td><td>
Timestamp последней остановки.</td></tr>
<tr><td scope="row"><code>STATUS</code></td><td>
Работает ли счетчик все еще (<code>enabled</code>)
или остановился (<code>disabled</code>).</td></tr>
<tr><td scope="row"><code>TYPE</code></td><td>
Является ли элемент совокупным счетчиком, или измеряет текущее
значение некоторого ресурса.</td></tr>
<tr><td scope="row"><code>COMMENT</code></td><td>Описание счетчика.
</td></tr></tbody></table>

<p><span><strong>Пример</strong></span>:
<pre>
mysql&gt; SELECT * FROM INFORMATION_SCHEMA.INNODB_METRICS
                   WHERE NAME="dml_inserts"\G
*************************** 1. row ***************************
 NAME: dml_inserts
  SUBSYSTEM: dml
COUNT: 3
  MAX_COUNT: 3
  MIN_COUNT: NULL
  AVG_COUNT: 0.046153846153846156
COUNT_RESET: 3
MAX_COUNT_RESET: 3
MIN_COUNT_RESET: NULL
AVG_COUNT_RESET: NULL
   TIME_ENABLED: 2014-12-04 14:18:28
  TIME_DISABLED: NULL
   TIME_ELAPSED: 65
 TIME_RESET: NULL
 STATUS: enabled
 TYPE: status_counter
COMMENT: Number of rows inserted
</pre>

</p>

<ul><li>Используйте <a href="sql.htm#describe"><code>DESCRIBE</code></a> или
<a href="sql.htm#show-columns"><code>SHOW COLUMNS</code></a>, чтобы
просмотреть дополнительную информацию о столбцах этих таблиц, включая типы
данных и значения по умолчанию.</li>

<li>Вы должны иметь привилегию
<a href="security.html#priv_process"><code>PROCESS</code></a>, чтобы
запросить эту таблицу.</li></ul>

<h3><a name="innodb-sys-columns-table"></a>22.30.17.
Таблица INFORMATION_SCHEMA INNODB_SYS_COLUMNS</h3>
<p>Таблица <code>INNODB_SYS_COLUMNS</code> обеспечивает метаданные о
столбцах таблицы, эквивалентные информации из таблицы
<code>SYS_COLUMNS</code> словаря данных <code>InnoDB</code>.</p>

<a name="innodb-information-schema-innodb_sys_columns_columns_table"></a>
<p><b>Таблица 22.17. Столбцы INNODB_SYS_COLUMNS</b></p>
<table border="1">
<thead><tr><th scope="col">Имя</th><th scope="col">Описание</th></tr></thead>
<tbody><tr><td scope="row"><code>TABLE_ID</code></td><td>
Идентификатор, представляющий таблицу, связанный со столбцом, то же самое
значение, что и <code>INNODB_SYS_TABLES.TABLE_ID</code>.</td></tr>
<tr><td scope="row"><code>NAME</code></td><td>
Название каждого столбца в каждой таблице. Эти имена могут быть верхним
регистром или нижним регистром в зависимости от
<a href="server.htm#sysvar_lower_case_table_names"><code>
lower_case_table_names</code></a>. Нет никаких специальных сохраненных
системой названий столбцов.</td></tr>
<tr><td scope="row"><code>POS</code></td><td>
Порядковая позиция столбца в пределах таблицы, начиная с 0 и постепенно
увеличиваяся последовательно. Когда столбец удален, остающиеся столбцы
переупорядочены так, чтобы у последовательности не было никаких промежутков.
Значение <code>POS</code> для виртуального произведенного столбца кодирует
порядковый номер столбца и порядковую позицию столбца. Для получения
дополнительной информации см.
<a href="#innodb-sys-virtual-table">раздел 22.30.26</a>.</td></tr>
<tr><td scope="row"><code>MTYPE</code></td><td>
Числовой идентификатор типа столбца. 1 = <code>VARCHAR</code>,
2 = <code>CHAR</code>, 3 = <code>FIXBINARY</code>, 4 = <code>BINARY</code>,
5 = <code>BLOB</code>, 6 = <code>INT</code>, 7 = <code>SYS_CHILD</code>,
8 = <code>SYS</code>, 9 = <code>FLOAT</code>, 10 = <code>DOUBLE</code>,
11 = <code>DECIMAL</code>, 12 = <code>VARMYSQL</code>,
13 = <code>MYSQL</code>, 14 = <code>GEOMETRY</code>.</td></tr>
<tr><td scope="row"><code>PRTYPE</code></td><td>
Двоичное значение с битами, определяющими тип данных MySQL, код набора
символов и nullability.</td></tr>
<tr><td scope="row"><code>LEN</code></td><td>
Длина столбца, например, 4 для <code>INT</code> и 8 для <code>BIGINT</code>.
Для символьных столбцов в многобайтовых наборах символов это значение длины
максимальная длина в байтах, нужная для представления определения, то есть,
для <code>VARCHAR(<em><code>N</code></em>)</code> это могло бы быть
<code>2*<em><code>N</code></em></code>,
<code>3*<em><code>N</code></em></code> и так далее в зависимости
от кодировки символов.</td></tr></tbody></table>

<p><span><strong>Пример</strong></span>:
<pre>
mysql&gt; SELECT * FROM INFORMATION_SCHEMA.INNODB_SYS_COLUMNS
                   where TABLE_ID = 71\G
*************************** 1. row ***************************
TABLE_ID: 71
NAME: col1
 POS: 0
   MTYPE: 6
  PRTYPE: 1027
 LEN: 4
*************************** 2. row ***************************
TABLE_ID: 71
NAME: col2
 POS: 1
   MTYPE: 2
  PRTYPE: 524542
 LEN: 10
*************************** 3. row ***************************
TABLE_ID: 71
NAME: col3
 POS: 2
   MTYPE: 1
  PRTYPE: 524303
 LEN: 10
</pre>

</p>

<ul><li>Используйте <a href="sql.htm#describe"><code>DESCRIBE</code></a> или
<a href="sql.htm#show-columns"><code>SHOW COLUMNS</code></a>, чтобы
просмотреть дополнительную информацию о столбцах этих таблиц, включая типы
данных и значения по умолчанию.</li>

<li>Вы должны иметь привилегию
<a href="security.html#priv_process"><code>PROCESS</code></a>, чтобы
запросить эту таблицу.</li></ul>

<h3><a name="innodb-sys-datafiles-table"></a>22.30.18.
Таблица INFORMATION_SCHEMA INNODB_SYS_DATAFILES</h3>
<p>Таблица <code>INNODB_SYS_DATAFILES</code> предоставляет информацию о пути
файла с данными для <code>InnoDB</code> файл на таблицу и общих табличных
пространств, эквивалентную информации в таблице <code>SYS_DATAFILES</code>
словаря данных <code>InnoDB</code>.</p>

<p>Таблица <a href="#files-table"><code>INFORMATION_SCHEMA.FILES
</code></a> предоставляет информацию о пути файла с данными и другие
метаданные обо всех типах табличного пространства <code>InnoDB</code>,
включая табличные пространства файла на таблицу, общие табличные
пространства, системное табличное пространство, временные табличные
пространства и табличные пространства отмены (если есть).</p>

<a name="innodb-information-schema-innodb_sys_datafiles_columns_table"></a>
<p><b>Таблица 22.18. Столбцы INNODB_SYS_DATAFILES</b></p>
<table border="1">
<thead><tr><th scope="col">Имя</th><th scope="col">Описание</th></tr></thead>
<tbody><tr><td scope="row"><code>SPACE</code></td><td>
ID табличного пространства.</td></tr>
<tr><td scope="row"><code>PATH</code></td><td>
Путь файла с данными табличного пространства (например,
<code>.\world\innodb\city.ibd</code>). Если табличное пространство
<a href="glossary.htm#glos_file_per_table">файл на таблицу</a>
создается в местоположении вне каталога данных MySQL, используя предложение
<code>DATA DIRECTORY</code> в <a href="sql.htm#create-table"><code>CREATE
TABLE</code></a>, поле <code>PATH</code> показывает полный путь к каталогу.
</td></tr></tbody></table>

<p><span><strong>Пример</strong></span>:
<pre>
mysql&gt; SELECT * FROM INFORMATION_SCHEMA.INNODB_SYS_DATAFILES
                   WHERE SPACE = 57\G
*************************** 1. row ***************************
SPACE: 57
 PATH: ./test/t1.ibd
</pre>

<ul><li>Используйте <a href="sql.htm#describe"><code>DESCRIBE</code></a> или
<a href="sql.htm#show-columns"><code>SHOW COLUMNS</code></a>, чтобы
просмотреть дополнительную информацию о столбцах этих таблиц, включая типы
данных и значения по умолчанию.</li>

<li>Вы должны иметь привилегию
<a href="security.html#priv_process"><code>PROCESS</code></a>, чтобы
запросить эту таблицу.</li></ul>

<h3><a name="innodb-sys-fields-table"></a>22.30.19. Таблица
INFORMATION_SCHEMA INNODB_SYS_FIELDS</h3>
<p>Таблица <code>INNODB_SYS_FIELDS</code> обеспечивает метаданные о ключах
столбцов (полей) индексов <code>InnoDB</code>, эквивалентную информации из
таблицы <code>SYS_FIELDS</code> в словаре данных <code>InnoDB</code>.</p>

<a name="innodb-information-schema-innodb_sys_fields_columns_table"></a>
<p><b>Таблица 22.19. Столбцы INNODB_SYS_FIELDS</b></p>
<table border="1">
<thead><tr><th scope="col">Имя</th><th scope="col">Описание</th></tr></thead>
<tbody><tr><td scope="row"><code>INDEX_ID</code></td><td>
Идентификатор для индекса, связанного с этим полем ключа, используя то же
самое значение, как в <code>INNODB_SYS_INDEXES.INDEX_ID</code>.</td></tr>
<tr><td scope="row"><code>NAME</code></td><td>
Название оригинального столбца таблицы, используя то же самое значение, как в
<code>INNODB_SYS_COLUMNS.NAME</code>.</td></tr>
<tr><td scope="row"><code>POS</code></td><td>
Порядковая позиция поля ключа в пределах индекса, начиная с 0 и постепенно
увеличиваюаяся последовательно. Когда столбец удален, остающиеся столбцы
переупорядочены так, чтобы у последовательности не было никаких промежутков.
</td></tr></tbody></table>

<p><span><strong>Пример</strong></span>:
<pre>
mysql&gt; SELECT * FROM INFORMATION_SCHEMA.INNODB_SYS_FIELDS
                   WHERE INDEX_ID = 117\G
*************************** 1. row ***************************
INDEX_ID: 117
NAME: col1
 POS: 0
</pre>

<ul><li>Используйте <a href="sql.htm#describe"><code>DESCRIBE</code></a> или
<a href="sql.htm#show-columns"><code>SHOW COLUMNS</code></a>, чтобы
просмотреть дополнительную информацию о столбцах этих таблиц, включая типы
данных и значения по умолчанию.</li>

<li>Вы должны иметь привилегию
<a href="security.html#priv_process"><code>PROCESS</code></a>, чтобы
запросить эту таблицу.</li></ul>

<h3><a name="innodb-sys-foreign-table"></a>22.30.20. Таблица
INFORMATION_SCHEMA INNODB_SYS_FOREIGN</h3>
<p>Таблица <code>INNODB_SYS_FOREIGN</code> обеспечивает метаданные о
<a href="glossary.htm#glos_foreign_key">внешних ключах</a>, эквивалентную
информации из таблицы <code>SYS_FOREIGN</code>
в словаре данных <code>InnoDB</code>.</p>

<a name="innodb-information-schema-innodb_sys_foreign_columns_table"></a>
<p><b>Таблица 22.20 Столбцы INNODB_SYS_FOREIGN</b></p>
<table border="1">
<thead><tr><th scope="col">Имя</th><th scope="col">Описание</th></tr></thead>
<tbody><tr><td scope="row"><code>ID</code></td><td>
Имя (не числовое значение) внешнего ключа индекса. Предваряется именем базы
данных, например, <code>test/products_fk</code>.</td></tr>
<tr><td scope="row"><code>FOR_NAME</code></td><td>
Название <a href="glossary.htm#glos_child_table">дочерней таблицы</a>
в этих отношениях внешнего ключа.</td></tr>
<tr><td scope="row"><code>REF_NAME</code></td><td>
Название <a href="glossary.htm#glos_parent_table">родительской таблицы</a>
в этих отношениях внешнего ключа.</td></tr>
<tr><td scope="row"><code>N_COLS</code></td><td>
Число столбцов во внешнем ключе индекса.</td></tr>
<tr><td scope="row"><code>TYPE</code></td><td>
Набор разрядных флагов с информацией о столбце внешнего ключа, ORed вместе.
1 = <code>ON DELETE CASCADE</code>, 2 = <code>ON UPDATE SET</code> NULL,
4 = <code>ON UPDATE CASCADE</code>, 8 = <code>ON UPDATE SET</code> NULL,
16 = <code>ON DELETE NO</code> ACTION, 32 = <code>ON UPDATE NO</code> ACTION.
</td></tr></tbody></table>

<p><span><strong>Пример</strong></span>:
<pre>
mysql&gt; SELECT * FROM INFORMATION_SCHEMA.INNODB_SYS_FOREIGN\G
*************************** 1. row ***************************
  ID: test/fk1
FOR_NAME: test/child
REF_NAME: test/parent
  N_COLS: 1
TYPE: 1
</pre>

<ul><li>Используйте <a href="sql.htm#describe"><code>DESCRIBE</code></a> или
<a href="sql.htm#show-columns"><code>SHOW COLUMNS</code></a>, чтобы
просмотреть дополнительную информацию о столбцах этих таблиц, включая типы
данных и значения по умолчанию.</li>

<li>Вы должны иметь привилегию
<a href="security.html#priv_process"><code>PROCESS</code></a>, чтобы
запросить эту таблицу.</li></ul>

<h3><a name="innodb-sys-foreign-cols-table"></a>22.30.21.
Таблица INFORMATION_SCHEMA INNODB_SYS_FOREIGN_COLS</h3>
<p>Таблица <code>INNODB_SYS_FOREIGN_COLS</code> обеспечивает информацию о
статусе столбцов внешних ключей <code>InnoDB</code>, эквивалентную информации
из таблицы <code>SYS_FOREIGN_COLS</code> словаря данных.</p>

<a name="innodb-information-schema-innodb_sys_foreign_cols_columns_table"></a>
<p><b>Таблица 22.21. Столбцы INNODB_SYS_FOREIGN_COLS</b></p>
<table border="1">
<thead><tr><th scope="col">Имя</th><th scope="col">Описание</th></tr></thead>
<tbody><tr><td scope="row"><code>ID</code></td><td>
Внешний ключ индекса, связанный с этим полем ключа индекса, используя то же
самое значение, как в <code>INNODB_SYS_FOREIGN.ID</code>.</td></tr>
<tr><td scope="row"><code>FOR_COL_NAME</code></td><td>
Название связанного столбца в дочерней таблице.</td></tr>
<tr><td scope="row"><code>REF_COL_NAME</code></td><td>
Название связанного столбца в родительской таблице.</td></tr>
<tr><td scope="row"><code>POS</code></td><td>Порядковая позиция этого поля
ключа в пределах внешнего ключа индекса, начиная с 0.
</td></tr></tbody></table>

<p><span><strong>Пример</strong></span>:
<pre>
mysql&gt; SELECT * FROM INFORMATION_SCHEMA.INNODB_SYS_FOREIGN_COLS
                   WHERE ID = 'test/fk1'\G
*************************** 1. row ***************************
ID: test/fk1
FOR_COL_NAME: parent_id
REF_COL_NAME: id
 POS: 0
</pre>

<ul><li>Используйте <a href="sql.htm#describe"><code>DESCRIBE</code></a> или
<a href="sql.htm#show-columns"><code>SHOW COLUMNS</code></a>, чтобы
просмотреть дополнительную информацию о столбцах этих таблиц, включая типы
данных и значения по умолчанию.</li>

<li>Вы должны иметь привилегию
<a href="security.html#priv_process"><code>PROCESS</code></a>, чтобы
запросить эту таблицу.</li></ul>

<h3><a name="innodb-sys-indexes-table"></a>22.30.22. Таблица
INFORMATION_SCHEMA INNODB_SYS_INDEXES</h3>
<p>Таблица <code>INNODB_SYS_INDEXES</code> обеспечивает метаданные об
индексах <code>InnoDB</code>, эквивалентную информации во внутренней
таблице <code>SYS_INDEXES</code> <code>InnoDB</code>.</p>

<a name="innodb-information-schema-innodb_sys_indexes_columns_table"></a>
<p><b>Таблица 22.22. Столбцы INNODB_SYS_INDEXES</b></p>
<table border="1">
<thead><tr><th scope="col">Имя</th><th scope="col">Описание</th></tr></thead>
<tbody><tr><td scope="row"><code>INDEX_ID</code></td><td>
Идентификатор для каждого индекса, который уникален для всех баз данных.
</td></tr>
<tr><td scope="row"><code>NAME</code></td><td>
Название индекса. Большинство индексов, создаваемых неявно
<code>InnoDB</code>, имеют последовательные имена, но имена индексов не
обязательно уникальны. Например, <code>PRIMARY</code> для первичного ключа
индекса, <code>GEN_CLUST_INDEX</code> для индекса представления первичного
ключа, когда один не определен, <code>ID_IND</code>, <code>FOR_IND</code> и
<code>REF_IND</code> для ограничений внешнего ключа.</td></tr>
<tr><td scope="row"><code>TABLE_ID</code></td><td>
Идентификатор, представляющий таблицу, связанную с индексом,
то же самое значение из <code>INNODB_SYS_TABLES.TABLE_ID</code>.</td></tr>
<tr><td scope="row"><code>TYPE</code></td><td>
Числовой идентификатор, имеющий значение типа индекса. 0 = вторичный,
1 = Кластеризируемый, 2 = Уникальный, 3 = Основной,
32 = Полнотекстовый, 64 = Пространственный, 128 = вторичный, который включает
<a href="glossary.htm#glos_generated_virtual_column">
произведенный виртуальный столбец</a>.</td></tr>
<tr><td scope="row"><code>N_FIELDS</code></td><td>
Число столбцов в ключе индекса. Для индексов <code>GEN_CLUST_INDEX</code>
это значение 0, потому что индекс создается, используя искусственное
значение, а не реальный столбец таблицы.</td></tr>
<tr><td scope="row"><code>PAGE_NO</code></td><td>
Номер страницы корня индекса B-tree. Для полнотекстовых индексов поле
<code>PAGE_NO</code> не используется и установлено в -1
(<code>FIL_NULL</code>), потому что полнотекстовый индекс
выложен в нескольких B-деревьях (вспомогательные таблицы).</td></tr>
<tr><td scope="row"><code>SPACE</code></td><td>
Идентификатор для табличного пространства, где индекс находится. 0 означает
<a href="glossary.htm#glos_system_tablespace">системное табличное
пространство</a> <code>InnoDB</code>. Любое другое число представляет
таблицу, составленную в режиме
<a href="glossary.htm#glos_file_per_table">файл на таблицу</a> с отдельным
файлом <code>.ibd</code>. Этот идентификатор остается тем же самым после
<a href="sql.htm#truncate-table"><code>TRUNCATE TABLE</code></a>. Поскольку
все индексы для таблицы находятся в том же самом табличном пространстве, как
и таблица, это значение не обязательно уникально.</td></tr>
<tr><td scope="row"><code>MERGE_THRESHOLD</code></td><td>
Пороговое значение слияния для индексных страниц. Если объем данных в
индексной странице падает ниже значения
<a href="innodb.htm#index-page-merge-threshold">MERGE_THRESHOLD</a>, когда
строка удалена или сокращена работой обновления, <code>InnoDB</code>
делает попытку слить индексную страницу с соседней индексной страницей.
Пороговое значение по умолчанию составляет 50%. Для получения дополнительной
информации см. <a href="innodb.htm#index-page-merge-threshold">раздел 16.6.11
</a>.</td></tr></tbody></table>

<p><span><strong>Пример</strong></span>:
<pre>
mysql&gt; SELECT * FROM INFORMATION_SCHEMA.INNODB_SYS_INDEXES
                   WHERE TABLE_ID = 34\G
*************************** 1. row ***************************
   INDEX_ID: 39
 NAME: GEN_CLUST_INDEX
   TABLE_ID: 34
 TYPE: 1
   N_FIELDS: 0
PAGE_NO: 3
SPACE: 23
MERGE_THRESHOLD: 50
*************************** 2. row ***************************
   INDEX_ID: 40
 NAME: i1
   TABLE_ID: 34
 TYPE: 0
   N_FIELDS: 1
PAGE_NO: 4
SPACE: 23
MERGE_THRESHOLD: 50
</pre>

<ul><li>Используйте <a href="sql.htm#describe"><code>DESCRIBE</code></a> или
<a href="sql.htm#show-columns"><code>SHOW COLUMNS</code></a>, чтобы
просмотреть дополнительную информацию о столбцах этих таблиц, включая типы
данных и значения по умолчанию.</li>

<li>Вы должны иметь привилегию
<a href="security.html#priv_process"><code>PROCESS</code></a>, чтобы
запросить эту таблицу.</li></ul>

<h3><a name="innodb-sys-tables-table"></a>22.30.23. Таблица
INFORMATION_SCHEMA INNODB_SYS_TABLES</h3>
<p>Таблица <code>INNODB_SYS_TABLES</code> обеспечивает метаданные о
таблицах <code>InnoDB</code>, эквивалентные информации из таблицы
<code>SYS_TABLES</code> словаря данных.</p>

<a name="innodb-information-schema-innodb_sys_tables_columns_table"></a>
<p><b>Таблица 22.23. Столбцы INNODB_SYS_TABLES</b></p>
<table border="1">
<thead><tr><th scope="col">Имя</th><th scope="col">Описание</th></tr></thead>
<tbody><tr><td scope="row"><code>TABLE_ID</code></td><td>
Идентификатор для каждой таблицы <code>InnoDB</code>, который уникален для
всех баз данных на сервере.</td></tr>
<tr><td scope="row"><code>NAME</code></td><td>Название таблицы.
Предваряется именем базы данных, например, <code>test/t1</code>.
Системные имена таблиц находятся в верхнем регистре. Названия баз данных и
пользовательских таблиц находятся в том же самом регистре, как они были
первоначально определены, возможно, под влиянием параметра
<a href="server.htm#sysvar_lower_case_table_names"><code>
lower_case_table_names</code></a>.</td></tr>
<tr><td scope="row"><code>FLAG</code></td><td>
Это значение предоставляет разрядную информацию о формате таблицы и
характеристиках хранения, включая формат строки, сжатый размер страницы (если
применим) и действительно ли предложение <code>DATA DIRECTORY</code>
использовано с <a href="sql.htm#create-table"><code>CREATE TABLE</code></a>
или <a href="sql.htm#alter-table"><code>ALTER TABLE</code></a>.</td></tr>
<tr><td scope="row"><code>N_COLS</code></td><td>
Число столбцов в таблице. Число включает три скрытых столбца, которые
создаются <code>InnoDB</code> (<code>DB_ROW_ID</code>, <code>DB_TRX_ID</code>
и <code>DB_ROLL_PTR</code>). Число также включает
<a href="glossary.htm#glos_generated_virtual_column">произведенные
виртуальные столбцы</a>, если существуют.</td></tr>
<tr><td scope="row"><code>SPACE</code></td><td>
Идентификатор для табличного пространства, где таблица находится. 0 означает
<a href="glossary.htm#glos_system_tablespace">системное табличное
пространство</a> <code>InnoDB</code>.
Любое другое число представляет или табличное пространство
<a href="glossary.htm#glos_file_per_table">файл на таблицу</a>,
или общее табличное пространство. Этот идентификатор остается тем же самым
после <a href="sql.htm#truncate-table"><code>TRUNCATE TABLE</code></a>.
Для табличных пространств файла на таблицу этот идентификатор уникален для
таблиц во всех базы данных сервера.</td></tr>
<tr><td scope="row"><code>ROW_FORMAT</code></td><td>
Формат строки таблицы (Compact, Redundant, Dynamic или Compressed).</td></tr>
<tr><td scope="row"><code>ZIP_PAGE_SIZE</code></td><td>
Размер zip-страницы. Оотносится только к таблицам, которые используют
сжатый формат строки.</td></tr>
<tr><td scope="row"><code>SPACE_TYPE</code></td><td>
Тип табличного пространства, которому принадлежит таблица. Возможные значения
включают <code>System</code> (для системного табличного пространства
<code>InnoDB</code>), <code>General</code> (общие табличные пространства
<code>InnoDB</code>, созданные с использованием
<a href="sql.htm#create-tablespace"><code>CREATE TABLESPACE</code></a>) и
<code>Single</code> (табличные пространства файла на таблицу).
Таблицы, назначенные на системное табличное пространство, используя
предложение <code>TABLESPACE=innodb_system</code> в
<a href="sql.htm#create-table"><code>CREATE TABLE</code></a> или
<a href="sql.htm#alter-table"><code>ALTER TABLE</code></a> имеют
<code>General</code> = <code>SPACE_TYPE</code>.</td></tr></tbody></table>

<p><span><strong>Пример</strong></span>:
<pre>
mysql&gt; SELECT * FROM INFORMATION_SCHEMA.INNODB_SYS_TABLES WHERE TABLE_ID = 214\G
*************************** 1. row ***************************
 TABLE_ID: 214
 NAME: test/t1
 FLAG: 129
   N_COLS: 4
SPACE: 233
   ROW_FORMAT: Compact
ZIP_PAGE_SIZE: 0
   SPACE_TYPE: General
</pre>

<ul><li>Используйте <a href="sql.htm#describe"><code>DESCRIBE</code></a> или
<a href="sql.htm#show-columns"><code>SHOW COLUMNS</code></a>, чтобы
просмотреть дополнительную информацию о столбцах этих таблиц, включая типы
данных и значения по умолчанию.</li>

<li>Вы должны иметь привилегию
<a href="security.html#priv_process"><code>PROCESS</code></a>, чтобы
запросить эту таблицу.</li></ul>

<p><span><strong>Интерпретация значения столбца INNODB_SYS_TABLES.FLAG
</strong></span>:</p>
<p>Столбец <code>INNODB_SYS_TABLES.FLAG</code> предоставляет информацию на
разрядном уровне о формате таблицы и характеристиках хранения. Вы можете
интерпретировать <code>FLAG</code>, добавляя вместе применимые десятичные
числовые значения, которые обеспечены в следующей таблице.</p>

<a name="innodb-information-schema-innodb_sys_tables_columns_table-flag-data">
</a><p><b>Таблица 22.24. Значения позиции двоичного разряда для интерпретации
данных о столбце INNODB_SYS_TABLES FLAG</b></p>
<table border="1">
<thead><tr><th scope="col">Позиция двоичного разряда</th>
<th scope="col">Описание</th>
<th scope="col">Десятичное числовое значение</th></tr></thead>
<tbody><tr><td scope="row">0</td><td>
Этот бит установлен, если формат строки не <code>REDUNDANT</code>.
Другими словами, это установлено, если формат строки <code>COMPACT</code>,
<code>DYNAMIC</code> или <code>COMPRESSED</code>.</td><td>

<ul><li><p>0 - <code>REDUNDANT</code></li>
<li>1 - <code>COMPACT</code>, <code>DYNAMIC</code> или
<code>COMPRESSED</code>.</p></li></ul></td></tr>

<tr><td scope="row">1-4</td><td>Эти четыре бита содержат небольшое число,
которое представляет сжатый размер страницы таблицы. Поле
<code>INNODB_SYS_TABLES.ZIP_PAGE_SIZE</code>
также сообщает о сжатом размере страницы, если применимо.</td><td>

<ul><li><p>0 - без сжатия.</li>
<li>2 - 1024 байта сжатый размер страницы</li>
<li>4 - 2048 байта сжатый размер страницы</li>
<li>6 - 4096 байта сжатый размер страницы</li>
<li>8 - 8192 байта сжатый размер страницы</li>
<li>10 - 16384 байта сжатый размер страницы</p></li></ul></td></tr>

<tr><td scope="row">5</td><td>Этот бит установлен, если формат строки
<code>DYNAMIC</code> или <code>COMPRESSED</code>.</td><td>
<ul><li><p>0 - <code>REDUNDANT</code> или <code>COMPACT</code>.</li>
<li>32 - <code>DYNAMIC</code> или <code>COMPRESSED</code>.
</p></li></ul></td></tr>

<tr><td scope="row">6</td><td>Этот бит установлен, если опция
<code>DATA DIRECTORY</code> применена с
<a href="sql.htm#create-table"><code>CREATE TABLE</code></a> или
<a href="sql.htm#alter-table"><code>ALTER TABLE</code></a>.
Этот бит установлен для табличных пространств файла на таблицу,
которые расположены в каталогах кроме каталога данных по умолчанию
(<a href="server.htm#sysvar_datadir"><code>datadir</code></a>).</td><td>
<ul><li><p>0 - Не отдаленное табличное пространство файла на таблицу.</li>
<li>64 - Отдаленное табличное пространство файла на таблицу.
</li></ul></td></tr>

<tr><td scope="row">7</td><td>Этот бит установлен, если таблица назначена на
совместно используемое табличное пространство (общее или системное табличное
пространство) использованием опции
<code>TABLESPACE=<em><code>tablespace_name</code></em></code> в
<a href="sql.htm#create-table"><code>CREATE TABLE</code></a> или
<a href="sql.htm#alter-table"><code>ALTER TABLE</code></a>.</td>
<td><ul><li><p>0 - Таблица расположена в местоположении по умолчанию в
зависимости от значения <a href="innodb.htm#sysvar_innodb_file_per_table">
<code>innodb_file_per_table</code></a>.</li>
<li>128 - Таблица явно назначена на совместно
используемое табличное пространство.</p></li></ul></td></tr></tbody></table>

<p>В следующем, таблица <code>t1</code> применяет
<code>ROW_FORMAT=DYNAMIC</code> и имеет <code>FLAG</code> = 33.
Основываясь на информации в предыдущей таблице, мы можем видеть, что позиция
двоичного разряда 0 была бы установлена в 1, а позиция двоичного разряда 5
будет установлена в 32 для таблицы с форматом строк <code>DYNAMIC</code>.
Эти значения составляют в целом <code>FLAG</code> = 33.
<pre>
mysql&gt; use test;
Database changed

mysql&gt; CREATE TABLE t1 (c1 int) ROW_FORMAT=DYNAMIC;
Query OK, 0 rows affected (0.02 sec)

mysql&gt; SELECT * FROM INFORMATION_SCHEMA.INNODB_SYS_TABLES WHERE NAME LIKE 'test/t1'\G
*************************** 1. row ***************************
 TABLE_ID: 89
 NAME: test/t1
 FLAG: 33
   N_COLS: 4
SPACE: 75
   ROW_FORMAT: Dynamic
ZIP_PAGE_SIZE: 0
1 row in set (0.00 sec)
</pre>

<h3><a name="innodb-sys-tablespaces-table"></a>22.30.24. Таблица
INFORMATION_SCHEMA INNODB_SYS_TABLESPACES</h3>
<p>Таблица <code>INNODB_SYS_TABLESPACES</code> обеспечивает метаданные о
табличных пространствах файла на таблицу и общем, эквивалентные информации в
таблице <code>SYS_TABLESPACES</code> <code>InnoDB</code>.</p>

<p>Таблица <a href="#files-table"><code>INFORMATION_SCHEMA.FILES
</code></a> обеспечивает метаданные обо всех типах табличного пространства
<code>InnoDB</code>, включая табличные пространства файла на таблицу, общие
табличные пространства, системное табличное пространство, временные табличные
пространства и табличные пространства отмены (если есть).</p>

<a name="innodb-information-schema-innodb_sys_tablespaces_columns_table"></a>
<p><b>Таблица 22.25. Столбцы INNODB_SYS_TABLESPACES</b></p>
<table border="1">
<thead><tr><th scope="col">Имя</th><th scope="col">Описание</th></tr></thead>
<tbody><tr><td scope="row"><code>SPACE</code></td><td>
ID табличного пространства.</td></tr>
<tr><td scope="row"><code>NAME</code></td><td>Имя базы данных и имя таблицы
(например, <code>world_innodb\city</code>)</td></tr>
<tr><td scope="row"><code>FLAG</code></td><td>
Это значение предоставляет разрядную информацию о формате табличного
пространства и характеристиках хранения.</td></tr>
<tr><td scope="row"><code>ROW_FORMAT</code></td><td>
Формат строки табличного пространства (Compact, Redundant, Dynamic или
Compressed). Данные в этом поле интерпретируются в зависимости от информации
флагов табличного пространства, которая находится в
<a href="glossary.htm#glos_ibd_file">файле .ibd</a>.</td></tr>
<tr><td scope="row"><code>PAGE_SIZE</code></td><td>
Размер страницы табличного пространства. Данные в этом поле интерпретируются
в зависимости от информации флагов табличного пространства, которая находится
в <a href="glossary.htm#glos_ibd_file">файле .ibd</a>.</td></tr>
<tr><td scope="row"><code>ZIP_PAGE_SIZE</code></td><td>
Размер zip страницы. Данные в этом поле интерпретируются
в зависимости от информации флагов табличного пространства, которая находится
в <a href="glossary.htm#glos_ibd_file">файле .ibd</a>.</td></tr>
<tr><td scope="row"><code>SPACE_TYPE</code></td><td>
Тип табличного пространства. Возможные значения включают
<code>General</code> (общие табличные пространства <code>InnoDB</code>,
созданные <a href="sql.htm#create-tablespace"><code>CREATE TABLESPACE</code>
</a>) и <code>Single</code> (табличные пространства файла на таблицу).
</td></tr>
<tr><td scope="row"><code>FS_BLOCK_SIZE</code></td><td>
Размер блока файловой системы, который является размером модуля.
Этот столбец был добавлен с введением <code>InnoDB</code>
<a href="innodb.htm#innodb-page-compression">прозрачного сжатия страницы
</a>.</td></tr>
<tr><td scope="row"><code>FILE_SIZE</code></td><td>
Очевидный размер файла, который представляет максимальный размер несжатого
файла. Этот столбец был добавлен с введением <code>InnoDB</code>
<a href="innodb.htm#innodb-page-compression">прозрачного сжатия страницы
</a>.</td></tr>
<tr><td scope="row"><code>ALLOCATED_SIZE</code></td><td>
Фактический размер файла, который является количеством места, выделенного на
диске. Этот столбец был добавлен с введением <code>InnoDB</code>
<a href="innodb.htm#innodb-page-compression">прозрачного сжатия страницы
</a>.</td></tr></tbody></table>

<p><span><strong>Пример</strong></span>:
<pre>
mysql&gt; SELECT * FROM INFORMATION_SCHEMA.INNODB_SYS_TABLESPACES
                   WHERE SPACE = 26\G
*************************** 1. row ***************************
 SPACE: 26
NAME: test/t1
FLAG: 0
ROW_FORMAT: Compact or Redundant
 PAGE_SIZE: 16384
 ZIP_PAGE_SIZE: 0
SPACE_TYPE: Single
 FS_BLOCK_SIZE: 4096
 FILE_SIZE: 98304
ALLOCATED_SIZE: 65536
</pre>

<ul><li>Используйте <a href="sql.htm#describe"><code>DESCRIBE</code></a> или
<a href="sql.htm#show-columns"><code>SHOW COLUMNS</code></a>, чтобы
просмотреть дополнительную информацию о столбцах этих таблиц, включая типы
данных и значения по умолчанию.</li>

<li>Вы должны иметь привилегию
<a href="security.html#priv_process"><code>PROCESS</code></a>, чтобы
запросить эту таблицу.</li>

<li>Нет никакого способа определить из этого целого числа флаги, если формат
строки табличного пространства Redundant или Compact. В результате возможные
значения для поля <code>ROW_FORMAT</code>
<span>Compressed</span> или <span>Dynamic.</span></p></li></ul>

<p><span><strong>Интерпретация значения столбца INNODB_SYS_TABLESPACES.FLAG
</strong></span>:</p>
<p>Столбец <code>INNODB_SYS_TABLESPACES.FLAG</code> предоставляет информацию
на разрядном уровне о формате табличного
пространства и характеристиках хранения.</p>

<p>Вы можете интерпретировать значение столбца <code>FLAG</code>, добавляя
вместе применимые десятичные числовые значения, которые
обеспечены в следующей таблице.</p>

<a name="innodb-information-schema-innodb_sys_tablespaces_columns_table-flag-data">
</a><p><b>Таблица 22.26. Значения позиции двоичного разряда для интерпретации
данных о столбце INNODB_SYS_TABLESPACES FLAG</b></p>
<table border="1">
<thead><tr><th scope="col">Позиция двоичного разряда</th>
<th scope="col">Описание</th>
<th scope="col">Десятичное числовое значение</th></tr></thead>
<tbody><tr><td scope="row">0</td>
<td>Этот бит установлен, если формат строки таблицы в табличном пространстве
<code>DYNAMIC</code> или <code>COMPRESSED</code>. Если бит не установлен,
формат строки таблицы в табличном пространстве может быть также
<code>REDUNDANT</code> или <code>COMPACT</code>. Если это табличное
пространство файла на таблицу, Вы можете запросить
<code>INNODB_SYS_TABLES</code>, чтобы определить формат строки
row format is <code>REDUNDANT</code> или <code>COMPACT</code>.</td><td>

<ul><li><p>0 - <code>REDUNDANT</code> или <code>COMPACT</code>.</li>
<li>1 - <code>DYNAMIC</code> или <code>COMPRESSED</code>.
</p></li></ul></td></tr>

<tr><td scope="row">1-4</td><td>Эти четыре бита содержат небольшое число,
которое представляет сжатый размер страницы (<code>KEY_BLOCK_SIZE</code> или
<span>физический размер блока</span>) табличного пространства.</td><td>

<ul><li><p>0 - без сжатия.</li>
<li>2 - 1024 байта сжатый размер страницы</li>
<li>4 - 2048 байта сжатый размер страницы</li>
<li>6 - 4096 байта сжатый размер страницы</li>
<li>8 - 8192 байта сжатый размер страницы</li>
<li>10 - 16384 байта сжатый размер страницы</li>
<li>12 - 32768 байта сжатый размер страницы</li>
<li>14 - 65536 байта сжатый размер страницы</li></ul></td></tr>

<tr><td scope="row">5</td><td>
Этот бит установлен для табличных пространств файла на таблицу, если формат
строки таблицы <code>DYNAMIC</code> или <code>COMPRESSED</code>.
У общих табличных пространств, которые не содержат сжатые таблицы, будут
первые 6 бит установлены в 0, включая этот бит, указывая, что табличное
пространство содержит таблицы <code>REDUNDANT</code> или <code>COMPACT
</code>. Но фактически, общие табличные пространства могут содержать любую
комбинацию таблиц <code>REDUNDANT</code>, <code>COMPACT</code> и
<code>DYNAMIC</code>. Для получения дополнительной информации об общих
табличных пространствах см. <a href="sql.htm#create-tablespace"><code>
CREATE TABLESPACE</code></a>.</td><td>
<ul><li><p>0 - <code>REDUNDANT</code> или <code>COMPACT</code>.</li>
<li>32 - <code>DYNAMIC</code> или <code>COMPRESSED</code>.
</li></ul></td></tr>

<tr><td scope="row">6-9</td><td>Эти четыре бита содержат небольшое число,
которое представляет несжатый размер страницы (логический размер страницы)
табличного пространства. Установка ноль, если логический размер страницы
оригинальный размер страницы по умолчанию 16K.</td><td>

<ul><li><p>192 - 4096 байт логический/несжатый размер страницы.</li>
<li>256 - 8192 байт логический/несжатый размер страницы.</li>
<li>0 - 16384 байт логический/несжатый размер страницы.</li>
<li>384 - 32768 байт логический/несжатый размер страницы.</li>
<li>448 - 65536 байт логический/несжатый размер страницы.</li></ul></td></tr>

<tr><td scope="row">10</td><td>Этот бит установлен, если опция
<code>DATA DIRECTORY</code> применена с
<a href="sql.htm#create-table"><code>CREATE TABLE</code></a> или
<a href="sql.htm#alter-table"><code>ALTER TABLE</code></a>.
Этот бит установлен для табличных пространств файла на таблицу, которые
расположены в каталогах, кроме каталога данных по умолчанию
(<a href="server.htm#sysvar_datadir"><code>datadir</code></a>).</td><td>
<ul><li><p>0 - Не отдаленное табличное пространство файла на таблицу.</li>
<li>1024 - Отдаленное табличное пространство файла на таблицу.
</p></li></ul></td></tr>

<tr><td scope="row">11</td><td>Этот бит установлен, если табличное
пространство совместно используемое общее табличное пространство,
созданное <a href="sql.htm#create-tablespace"><code>CREATE TABLESPACE</code>
</a>.</td><td>

<ul><li><p>0 - Таблица расположена в местоположении по умолчанию в
зависимости от значения <a href="innodb.htm#sysvar_innodb_file_per_table">
<code>innodb_file_per_table</code></a>.</li>
<li>2048 - Таблица была явно назначена на совместно
используемое табличное пространство.</p></li></ul></td></tr>

<tr><td scope="row">12</td><td>Этот бит установлен, если табличное
пространство выделено временным таблицам. Только предопределенное
табличное пространство <code>ibtmp1</code> использует этот флаг.</td><td>

<ul><li><p>0 - Табличное пространство не содержит временные таблицы, таким
образом, оно не обновлено после запуска.</li>
<li>4096 - Табличное пространство содержит временные таблицы и обновлено
при каждом запуске.</p></li></ul></td></tr></tbody></table>

<p>В следующем примере таблице <code>t1</code> создается с опцией
<a href="innodb.htm#sysvar_innodb_file_per_table"><code>
innodb_file_per_table=ON</code></a>, которая составляет таблицу
<code>t1</code> в собственном табличном пространстве. Запрашивая
<a href="#innodb-sys-tablespaces-table"><code>
INNODB_SYS_TABLESPACES</code></a>, мы видим, что у табличного пространства
есть значение <code>FLAG</code> 33. Чтобы определить, как это значение
достигнуто, рассмотрите битовые значения, описанные в предыдущей таблице.
У бита 0 есть значение 1 потому, что таблица <code>t1</code> использует
формат строки <code>DYNAMIC</code>. У бита 5 есть значение 32 потому, что
табличное пространство это табличное пространство файла на таблицу, которое
использует формат строки <code>DYNAMIC</code>. Биты 6-9 = 0, так как
<a href="innodb.htm#sysvar_innodb_page_size"><code>innodb_page_size</code>
</a> установлен в значение по умолчанию 16K. Другие битовые значения не
применимы и поэтому установлены в 0. Значения для битов 0 и 5 составляют в
целом значение <code>FLAG</code> 33.
<pre>
mysql&gt; use test;
Database changed

mysql&gt; SHOW VARIABLES LIKE 'innodb_file_per_table';
+-----------------------+-------+
| Variable_name         | Value |
+-----------------------+-------+
| innodb_file_per_table | ON    |
+-----------------------+-------+

mysql&gt; SHOW VARIABLES LIKE 'innodb_page_size';
+------------------+-------+
| Variable_name    | Value |
+------------------+-------+
| innodb_page_size | 16384 |
+------------------+-------+

mysql&gt; CREATE TABLE t1 (c1 int) ROW_FORMAT=DYNAMIC;
Query OK, 0 rows affected (0.02 sec)

mysql&gt; SELECT * FROM INFORMATION_SCHEMA.INNODB_SYS_TABLESPACES
                   WHERE NAME LIKE 'test/t1'\G
*************************** 1. row ***************************
SPACE: 75
 NAME: test/t1
 FLAG: 33
   ROW_FORMAT: Dynamic
PAGE_SIZE: 16384
ZIP_PAGE_SIZE: 0
1 row in set (0.00 sec)
</pre>

<h3><a name="innodb-sys-tablestats-table"></a>22.30.25. Представление
INFORMATION_SCHEMA INNODB_SYS_TABLESTATS</h3>
<p>Представление <code>INNODB_SYS_TABLESTATS</code> обеспечивает
представление низкоуровневой информации о статусе таблиц <code>InnoDB</code>.
Эти данные используются оптимизатором MySQL, чтобы вычислить, которые индексы
использовать, запрашивая таблицы <code>InnoDB</code>.
Эта информация получена из структур данных в памяти вместо того, чтобы
соответствовать данным, хранящимся на диске. Нет никакой внутренней
соответствующей системной таблицы <code>InnoDB</code>.</p>

<p>Таблицы <code>InnoDB</code> есть в этом представлении, если они были
открыты начиная с последнего перезапуска сервера, а не из табличного кэша.
Таблицы, для которых доступны постоянные статусы, всегда
есть в этом представлении.</p>

<p>Табличные статистические данные обновлены только для операций
<a href="sql.htm#delete"><code>DELETE</code></a> или
<a href="sql.htm#update"><code>UPDATE</code></a>, которые изменяют
индексированные столбцы. Статистические данные не обновлены операциями,
которые изменяют только неиндексированные столбцы.</p>

<a name="innodb-information-schema-innodb_sys_tablestats_columns_table"></a>
<p><b>Таблица 22.27. Столбцы INNODB_SYS_TABLESTATS</b></p>
<table border="1">
<thead><tr><th scope="col">Имя</th><th scope="col">Описание</th></tr></thead>
<tbody><tr><td scope="row"><code>TABLE_ID</code></td><td>
Идентификатор, представляющий таблицу, для которой статистические данные
доступны, используя то же самое значение, как в
<code>INNODB_SYS_TABLES.TABLE_ID</code>.</td></tr>
<tr><td scope="row"><code>NAME</code></td><td>
Название таблицы, используя то же самое значение, как в
<code>INNODB_SYS_TABLES.NAME</code>.</td></tr>
<tr><td scope="row"><code>STATS_INITIALIZED</code></td><td>
Значение <code>Initialized</code>, если статистические данные уже собраны,
<code>Uninitialized</code>, если нет.</td></tr>
<tr><td scope="row"><code>NUM_ROWS</code></td><td>
Текущее число строк в таблице. Обновлено после каждой работы DML. Может быть
неточным, если нейтральные транзакции вставляют в или удаляют из таблицы.
</td></tr>
<tr><td scope="row"><code>CLUST_INDEX_SIZE</code></td><td>
Число страниц на диске, которые хранят кластеризируемый индекс, который
содержит табличные данные <code>InnoDB</code> в порядке первичного ключа.
Это значение могло бы быть нулем, если никакие статистические данные еще не
собраны для таблицы.</td></tr>
<tr><td scope="row"><code>OTHER_INDEX_SIZE</code></td><td>
Число страниц на диске, которые хранят все вторичные индексы для таблицы. Это
значение могло бы быть нулем, если никакие статистические данные еще не
собраны для таблицы.</td></tr>
<tr><td scope="row"><code>MODIFIED_COUNTER</code></td><td>
Число строк, измененных операциями DML, такими как
<code>INSERT</code>, <code>UPDATE</code>, <code>DELETE</code> и другими
каскадными операциями от внешних ключей. Этот столбец сброшен каждый раз,
когда статистика повторно вычислена.</td></tr>
<tr><td scope="row"><code>AUTOINC</code></td><td>
Следующее число, которое будет выпущено для любой операции с auto-increment.
</td></tr>
<tr><td scope="row"><code>REF_COUNT</code></td><td>
Когда этот счетчик достигает ноля, табличные метаданные могут быть удалены
из табличного кэша.</td></tr></tbody></table>

<p><span><strong>Пример</strong></span>:
<pre>
mysql&gt; SELECT * FROM INFORMATION_SCHEMA.INNODB_SYS_TABLESTATS
                   where TABLE_ID = 71\G
*************************** 1. row ***************************
 TABLE_ID: 71
   NAME: test/t1
STATS_INITIALIZED: Initialized
 NUM_ROWS: 1
 CLUST_INDEX_SIZE: 1
 OTHER_INDEX_SIZE: 0
 MODIFIED_COUNTER: 1
AUTOINC: 0
REF_COUNT: 1
</pre>

<ul><li><p>Эта таблица прежде всего полезна для исполнительного контроля на
опытном уровне или развивая связанные с работой расширения для MySQL.</li>
<li>Используйте <a href="sql.htm#describe"><code>DESCRIBE</code></a> или
<a href="sql.htm#show-columns"><code>SHOW COLUMNS</code></a>, чтобы
просмотреть дополнительную информацию о столбцах этих таблиц, включая типы
данных и значения по умолчанию.</li>

<li>Вы должны иметь привилегию
<a href="security.html#priv_process"><code>PROCESS</code></a>, чтобы
запросить эту таблицу.</li></ul>

<h3><a name="innodb-sys-virtual-table"></a>22.30.26. Таблица
INFORMATION_SCHEMA INNODB_SYS_VIRTUAL</h3>
<p>Таблица <code>INNODB_SYS_VIRTUAL</code> обеспечивает метаданные о
<a href="glossary.htm#glos_generated_virtual_column">произведенных
виртуальных столбцах</a> и столбцы эквивалентны информации в таблице
<code>SYS_VIRTUAL</code> словаря данных <code>InnoDB</code>.</p>

<p>Строка появляется в таблице <code>INNODB_SYS_VIRTUAL</code> для каждого
столбца, на котором базируется произведенный виртуальный столбец.</p>
<a name="innodb-information-schema-innodb_sys_virtual_table"></a>
<p><b>Таблица 22.28. Столбцы INNODB_SYS_VIRTUAL</b></p>
<table border="1">
<thead><tr><th scope="col">Имя</th><th scope="col">Описание</th></tr></thead>
<tbody><tr><td scope="row"><code>TABLE_ID</code></td><td>
Идентификатор, представляющий таблицу, связанный с виртуальным столбцом, то
же самое значение, как в <code>INNODB_SYS_TABLES.TABLE_ID</code>.</td></tr>
<tr><td scope="row"><code>POS</code></td><td>
Значение позиции <a href="glossary.htm#glos_generated_virtual_column">
произведенного виртуального столбца</a>. Значение является большим, потому
что оно кодирует порядковый номер столбца и порядковую позицию. Формула,
используемая, чтобы вычислить значение, использует битовую операцию. Формула
<code>((n-ый виртуальный произведенный столбец для экземпляра instance + 1)
&lt;&lt; 16) + порядковая позиция произведенного виртуального столбца</code>.
Например, если первый виртуальный произведенный столбец в <code>InnoDB</code>
третий столбец таблицы, формула (0 + 1) &lt;&lt; 16) + 2.
Первый произведенный виртуальный столбец в <code>InnoDB</code> всегда имеет
номер 0. Так что третий столбец в таблице имеет порядковую позицию
произведенного виртуального столбца 2. Порядковые позиции посчитаны от 0.
</td></tr>
<tr><td scope="row"><code>BASE_POS</code></td><td>
Порядковая позиция столбцов, на которых базируется
произведенный виртуальный столбец.</td></tr></tbody></table>

<p><span><strong>Пример</strong></span>:
<pre>
mysql&gt; CREATE TABLE `t1` (`a` int(11) DEFAULT NULL,
                             `b` int(11) DEFAULT NULL,
                             `c` int(11) GENERATED ALWAYS AS (a+b) VIRTUAL,
                             `h` varchar(10) DEFAULT NULL) ENGINE=InnoDB
                             DEFAULT CHARSET=latin1;

mysql&gt; SELECT * FROM INFORMATION_SCHEMA.INNODB_SYS_VIRTUAL
                   WHERE TABLE_ID IN (SELECT TABLE_ID
                   FROM INFORMATION_SCHEMA.INNODB_SYS_TABLES WHERE NAME
                   LIKE "test/t1");
+----------+-------+----------+
| TABLE_ID | POS   | BASE_POS |
+----------+-------+----------+
|   45     | 65538 | 0        |
|   45     | 65538 | 1        |
+----------+-------+----------+
</pre>

<ul><li><p>Если постоянная величина назначена на
<a href="glossary.htm#glos_generated_virtual_column">произведенный
виртуальный столбец</a>, как в следующем примере, вход для столбца не
появляется в таблице <code>INNODB_SYS_VIRTUAL</code>. Для появления
входа, у произведенного виртуального столбца должен быть основной столбец.
<pre>
mysql&gt; CREATE TABLE `t1` (`a` int(11) DEFAULT NULL,
                             `b` int(11) DEFAULT NULL,
                             `c` int(11) GENERATED ALWAYS AS (5) VIRTUAL)
                             ENGINE=InnoDB DEFAULT CHARSET=latin1;
</pre>
Однако, метаданные для такого столбца появляются в таблице
<a href="#innodb-sys-columns-table"><code>INNODB_SYS_COLUMNS</code>
</a>.</li>

<li>Используйте <a href="sql.htm#describe"><code>DESCRIBE</code></a> или
<a href="sql.htm#show-columns"><code>SHOW COLUMNS</code></a>, чтобы
просмотреть дополнительную информацию о столбцах этих таблиц, включая типы
данных и значения по умолчанию.</li>

<li>Вы должны иметь привилегию
<a href="security.html#priv_process"><code>PROCESS</code></a>, чтобы
запросить эту таблицу.</li></ul>

<h3><a name="innodb-temp-table-info-table"></a>22.30.27. Таблица
INFORMATION_SCHEMA INNODB_TEMP_TABLE_INFO</h3>
<p>Таблица <code>INNODB_TEMP_TABLE_INFO</code> содержит метаданные об
активных временных таблицах <code>InnoDB</code>.
За исключением оптимизированных внутренних временных таблиц, используемых
<code>InnoDB</code>, <code>INNODB_TEMP_TABLE_INFO</code> выдает
отчеты обо всех пользовательских и создаваемых из системы временных таблицах,
которые являются активными в пределах данного экземпляра <code>InnoDB</code>.
Таблицы поддержаны в памяти и не сохранены на диск.</p>

<a name="innodb-information-schema-innodb_temp_table_info"></a>
<p><b>Таблица 22.29. Столбцы INNODB_TEMP_TABLE_INFO</b></p>
<table border="1">
<thead><tr><th scope="col">Имя</th><th scope="col">Описание</th></tr></thead>
<tbody><tr><td scope="row"><code>TABLE_ID</code></td><td>
Табличное ID активной временной таблицы.</td></tr>
<tr><td scope="row"><code>NAME</code></td><td>
Название активной временной таблицы.</td></tr>
<tr><td scope="row"><code>N_COLS</code></td><td>
Число столбцов во временной таблице. Число всегда включает три скрытых
столбца, создаваемые <code>InnoDB</code>
(DB_ROW_ID, DB_TRX_ID, and DB_ROLL_PTR).</td></tr>
<tr><td scope="row"><code>SPACE</code></td><td>
Идентификатор табличного пространства (численное значение) для табличного
пространства, в котором находится временная таблица. Все временные таблицы
<code>InnoDB</code> находятся в совместно используемом временном табличном
пространстве, как определено
<a href="innodb.htm#sysvar_innodb_temp_data_file_path"><code>
innodb_temp_data_file_path</code></a>. По умолчанию совместно используемое
временное табличное пространство называется <code>ibtmp1</code> и расположено
в каталоге <code>data</code>. Сжатые временные таблицы находятся в отдельных
табличных пространствах на таблицу, расположенных во временном каталоге, как
определено <a href="server.htm#sysvar_tmpdir"><code>tmpdir</code></a>.
<code>SPACE</code> ID всегда ненулевое значение и динамически произведено
при перезапуске сервера.</td></tr></tbody></table>

<p><span><strong>Пример</strong></span>:
<pre>
mysql&gt; CREATE TEMPORARY TABLE t1 (c1 INT PRIMARY KEY) ENGINE=INNODB;
Query OK, 0 rows affected (0.00 sec)

mysql&gt; SELECT * FROM INFORMATION_SCHEMA.INNODB_TEMP_TABLE_INFO\G
*************************** 1. row ***************************
  TABLE_ID: 32
  NAME: #sqlaf56_2_0
N_COLS: 4
 SPACE: 19
1 row in set (0.00 sec)
</pre>

<ul><li><p>Эта таблица прежде всего полезна для опытного контроля уровня.
</li>
<li>Используйте <a href="sql.htm#describe"><code>DESCRIBE</code></a> или
<a href="sql.htm#show-columns"><code>SHOW COLUMNS</code></a>, чтобы
просмотреть дополнительную информацию о столбцах этих таблиц, включая типы
данных и значения по умолчанию.</li>

<li>Вы должны иметь привилегию
<a href="security.html#priv_process"><code>PROCESS</code></a>, чтобы
запросить эту таблицу.</li></ul>

<h3><a name="innodb-trx-table"></a>22.30.28. Таблица
INFORMATION_SCHEMA INNODB_TRX</h3>
<p>Таблица <code>INNODB_TRX</code> содержит информацию о каждой транзакции
(исключая транзакции только для чтения) в настоящее время выполняющиеся в
<code>InnoDB</code>, включая то, ждет ли транзакция блокировки и запрос SQL,
который транзакция выполняет, если есть.</p>

<a name="innodb-information-schema-innodb_trx_columns_table"></a>
<p><b>Таблица 22.30. Столбцы INNODB_TRX</b></p>
<table border="1">
<thead><tr><th scope="col">Имя</th><th scope="col">Описание</th></tr></thead>
<tbody><tr><td scope="row"><code>TRX_ID</code></td><td>
Уникальный операционный идентификационный ID, внутренний для
<code>InnoDB</code>. Эти ID не создаются для транзакций, которые только для
чтения и без блокировки. См.
<a href="optimiz.htm#innodb-performance-ro-txn">раздел 9.5.3</a>.</td></tr>
<tr><td scope="row"><code>TRX_WEIGHT</code></td><td>Вес транзакции, исходя из
(но не обязательно точное количество) числа строк измененных и
заблокированных транзакцией. Чтобы решить тупик, <code>InnoDB</code> выбирает
транзакцию с самым маленьким весом как <span>victim</span>, чтобы откатить
назад. Транзакции, которые изменили нетранзакционные таблицы, считаются более
тяжелыми чем другие, независимо от числа измененных и заблокированных строк.
</td></tr>
<tr><td scope="row"><code>TRX_STATE</code></td><td>
Операционный режим выполнения. Разрешенные значения
<code>RUNNING</code>, <code>LOCK WAIT</code>, <code>ROLLING BACK</code> и
<code>COMMITTING</code>.</td></tr>
<tr><td scope="row"><code>TRX_STARTED</code></td><td>Время начала транзакции.
</td></tr>
<tr><td scope="row"><code>TRX_REQUESTED_LOCK_ID</code></td><td>
ID блокировки, которую транзакция в настоящее время ждет, если
<code>TRX_STATE</code> <code>LOCK WAIT</code>, иначе <code>NULL</code>.
Чтобы получить детали о блокировке, присоедините к этому столбцу столбец
<code>ENGINE_LOCK_ID</code> таблицы Performance Schema
<a href="perfor.htm#data-locks-table"><code>data_locks</code></a>.</td></tr>
<tr><td scope="row"><code>TRX_WAIT_STARTED</code></td><td>
Время, когда транзакция начала ждать блокировку, если <code>TRX_STATE</code>
<code>LOCK WAIT</code>, иначе <code>NULL</code>.</td></tr>
<tr><td scope="row"><code>TRX_MYSQL_THREAD_ID</code></td><td>ID потока MySQL.
Чтобы получить детали о потоке, присоедините к этому столбцу столбец
<code>ID</code> таблицы <a href="#processlist-table"><code>
PROCESSLIST</code></a> и см.
<a href="innodb.htm#innodb-information-schema-internal-data">раздел
16.14.2.3</a>.</td></tr>
<tr><td scope="row"><code>TRX_QUERY</code></td><td>
Запрос SQL, который выполняется транзакцией.</td></tr>
<tr><td scope="row"><code>TRX_OPERATION_STATE</code></td><td>
Текущая работа транзакции, если есть, иначе <code>NULL</code>.</td></tr>
<tr><td scope="row"><code>TRX_TABLES_IN_USE</code></td><td>
Число таблиц <code>InnoDB</code>, используемых, обрабатывая текущий запрос
SQL этой транзакции.</td></tr>
<tr><td scope="row"><code>TRX_TABLES_LOCKED</code></td><td>
Число таблиц <code>InnoDB</code>, имеющих заблокированную текущим запросом
SQL строку. Поскольку это блокировки строки, а не табличные, таблицы обычно
могут читаться из записываться транзакциями, несмотря на
некоторые заблокированные строки.</td></tr>
<tr><td scope="row"><code>TRX_LOCK_STRUCTS</code></td><td>
Число блокировок, сохраненных транзакцией.</td></tr>
<tr><td scope="row"><code>TRX_LOCK_MEMORY_BYTES</code></td><td>
Полный размер, занятый структурами блокировки этой транзакции в памяти.
</td></tr>
<tr><td scope="row"><code>TRX_ROWS_LOCKED</code></td><td>Приблизительное
количество строк, заблокированных этой транзакцией. Значение могло бы
включать помеченные для удаления строки, которые физически присутствуют,
но невидимы для транзакций.</td></tr>
<tr><td scope="row"><code>TRX_ROWS_MODIFIED</code></td><td>
Число измененных и вставленных строк в этой транзакции.</td></tr>
<tr><td scope="row"><code>TRX_CONCURRENCY_TICKETS</code></td><td>
Значение, указывающее, сколько текущая транзакция может сделать прежде, чем
быть подкачанной, как определено переменной
<a href="innodb.htm#sysvar_innodb_concurrency_tickets"><code>
innodb_concurrency_tickets</code></a>.</td></tr>
<tr><td scope="row"><code>TRX_ISOLATION_LEVEL</code></td><td>
Уровень изоляции текущей транзакции.</td></tr>
<tr><td scope="row"><code>TRX_UNIQUE_CHECKS</code></td><td>
Включены ли проверки уникальности для текущей транзакции. Например, они могли
бы быть выключены во время оптовой загрузки данных.</td></tr>
<tr><td scope="row"><code>TRX_FOREIGN_KEY_CHECKS</code></td><td>
Включены ли проверки внешнего ключа для текущей транзакции. Например, они
могли бы быть выключены во время оптовой загрузки данных.</td></tr>
<tr><td scope="row"><code>TRX_LAST_FOREIGN_KEY_ERROR</code></td><td>
Подробное сообщение об ошибке для последней ошибки внешнего ключа, если
есть, иначе <code>NULL</code>.</td></tr>
<tr><td scope="row"><code>TRX_ADAPTIVE_HASH_LATCHED</code></td><td>
Заблокирован ли адаптивный хеш индекса текущей транзакцией.
Единственная транзакция не блокирует весь адаптивный хеш. Разделение
управляется <a href="innodb.htm#sysvar_innodb_adaptive_hash_index_parts">
<code>innodb_adaptive_hash_index_parts</code></a>, по умолчанию 8.</td></tr>
<tr><td scope="row"><code>TRX_ADAPTIVE_HASH_TIMEOUT</code></td><td>
Оставить ли немедленно поиск для адаптивного хеша индекса или резервировать
через требования от MySQL. Когда нет никакого адаптивного хеша, это значение
остается нолем, и запросы резервируют, пока они не заканчиваются.
То, когда адаптивный хеш индексирует систему поиска, разделено (управляется
<a href="innodb.htm#sysvar_innodb_adaptive_hash_index_parts"><code>
innodb_adaptive_hash_index_parts</code></a>), по умолчанию 0.</td></tr>
<tr><td scope="row"><code>TRX_IS_READ_ONLY</code></td><td>
Значение 1 указывает, что транзакция только для чтения.</td></tr>
<tr><td scope="row"><code>TRX_AUTOCOMMIT_NON_LOCKING</code></td><td>
Значение 1 указывает, что транзакция является запросом
<a href="sql.htm#select"><code>SELECT</code></a>, который не использует
предложение <code>FOR UPDATE</code> или <code>LOCK IN SHARED MODE</code>
и выполняется с включенным <a href="server.htm#sysvar_autocommit"><code>
utocommit</code></a> так, чтобы транзакция содержала только этот запрос.
Когда этот столбец и <code>TRX_IS_READ_ONLY</code> вместе равны 1,
<code>InnoDB</code> оптимизирует транзакцию, чтобы уменьшить накладные
расходы, связанное с транзакциями, которые меняют табличные данные.
</td></tr></tbody></table>

<p><span><strong>Пример</strong></span>:
<pre>
mysql&gt; SELECT * FROM INFORMATION_SCHEMA.INNODB_TRX\G
*************************** 1. row ***************************
  trx_id: 1510
   trx_state: RUNNING
 trx_started: 2014-11-19 13:24:40
 trx_requested_lock_id: NULL
trx_wait_started: NULL
  trx_weight: 586739
   trx_mysql_thread_id: 2
   trx_query: DELETE FROM employees.salaries WHERE salary &gt; 65000
   trx_operation_state: updating or deleting
 trx_tables_in_use: 1
 trx_tables_locked: 1
trx_lock_structs: 3003
 trx_lock_memory_bytes: 450768
 trx_rows_locked: 1407513
 trx_rows_modified: 583736
   trx_concurrency_tickets: 0
   trx_isolation_level: REPEATABLE READ
 trx_unique_checks: 1
trx_foreign_key_checks: 1
trx_last_foreign_key_error: NULL
 trx_adaptive_hash_latched: 0
 trx_adaptive_hash_timeout: 10000
trx_is_read_only: 0
trx_autocommit_non_locking: 0
</pre>

<ul><li><p>Используйте эту таблицу, чтобы диагностировать исполнительные
проблемы, которые происходят во времена тяжелой параллельной загрузки.
Ее содержание обновлено как описано в
<a href="innodb.htm#innodb-information-schema-internal-data">
разделе 16.14.2.3</a>.</li>

<li>Используйте <a href="sql.htm#describe"><code>DESCRIBE</code></a> или
<a href="sql.htm#show-columns"><code>SHOW COLUMNS</code></a>, чтобы
просмотреть дополнительную информацию о столбцах этих таблиц, включая типы
данных и значения по умолчанию.</li>

<li>Вы должны иметь привилегию
<a href="security.html#priv_process"><code>PROCESS</code></a>, чтобы
запросить эту таблицу.</li></ul>

<h2><a name="extended-show"></a>22.31. Расширения запроса SHOW</h2>
<p>Некоторые расширения к <a href="sql.htm#show"><code>SHOW</code></a>
сопровождают выполнение <code>INFORMATION_SCHEMA</code>:</p>

<ul><li><p><a href="sql.htm#show"><code>SHOW</code></a>
может использоваться, чтобы получить информацию о структуре
<code>INFORMATION_SCHEMA</code>.</li>

<li>Несколько запросов <a href="sql.htm#show"><code>SHOW</code></a>
принимают предложение <code>WHERE</code>, которое обеспечивает больше
гибкости в определении, какие строки вывести на экран.</p></li></ul>

<p><code>INFORMATION_SCHEMA</code> информационная база данных, таким образом,
ее имя включено в вывод <a href="sql.htm#show-databases"><code>SHOW DATABASES
</code></a>. Точно так же <a href="sql.htm#show-tables"><code>SHOW TABLES
</code></a> может использоваться с <code>INFORMATION_SCHEMA</code>, чтобы
получить список ее таблиц:
<pre>
mysql&gt; SHOW TABLES FROM INFORMATION_SCHEMA;
+---------------------------------------+
| Tables_in_INFORMATION_SCHEMA          |
+---------------------------------------+
| CHARACTER_SETS                        |
| COLLATIONS                            |
| COLLATION_CHARACTER_SET_APPLICABILITY |
| COLUMNS                               |
| COLUMN_PRIVILEGES                     |
| ENGINES                               |
| EVENTS                                |
| FILES                                 |
| GLOBAL_STATUS                         |
| GLOBAL_VARIABLES                      |
| KEY_COLUMN_USAGE                      |
| PARTITIONS                            |
| PLUGINS                               |
| PROCESSLIST                           |
| REFERENTIAL_CONSTRAINTS               |
| ROUTINES                              |
| SCHEMATA                              |
| SCHEMA_PRIVILEGES                     |
| SESSION_STATUS                        |
| SESSION_VARIABLES                     |
| STATISTICS                            |
| TABLES                                |
| TABLE_CONSTRAINTS                     |
| TABLE_PRIVILEGES                      |
| TRIGGERS                              |
| USER_PRIVILEGES                       |
| VIEWS                                 |
+---------------------------------------+
27 rows in set (0.00 sec)
</pre>

<a href="sql.htm#show-columns"><code>SHOW COLUMNS</code></a> и
<a href="sql.htm#describe"><code>DESCRIBE</code></a> могут вывести на экран
информацию о столбцах в отдельных таблицах <code>INFORMATION_SCHEMA</code>.
</p>

<p>Запросы <a href="sql.htm#show"><code>SHOW</code></a>, которые принимают
предложение <a href="funct.htm#operator_like"><code>LIKE</code></a>, чтобы
ограничить выводимые на экран строки, также разрешают предложение
<code>WHERE</code>, которое определяет более общие условия, которым
выбранные строки должны удовлетворять:
<pre>
SHOW CHARACTER SET
SHOW COLLATION
SHOW COLUMNS
SHOW DATABASES
SHOW FUNCTION STATUS
SHOW INDEX
SHOW OPEN TABLES
SHOW PROCEDURE STATUS
SHOW STATUS
SHOW TABLE STATUS
SHOW TABLES
SHOW TRIGGERS
SHOW VARIABLES
</pre>

Предложение <code>WHERE</code>, если есть, оценено по именам столбцов,
выведенных на экран <a href="sql.htm#show"><code>SHOW</code></a>. Например,
<a href="sql.htm#show-character-set"><code>SHOW CHARACTER SET</code></a>
производит эти выходные столбцы:
<pre>
mysql&gt; SHOW CHARACTER SET;
+----------+-----------------------------+---------------------+--------+
| Charset  | Description                 | Default collation   | Maxlen |
+----------+-----------------------------+---------------------+--------+
| big5     | Big5 Traditional Chinese    | big5_chinese_ci     |  2     |
| dec8     | DEC West European           | dec8_swedish_ci     |  1     |
| cp850    | DOS West European           | cp850_general_ci    |  1     |
| hp8      | HP West European            | hp8_english_ci      |  1     |
| koi8r    | KOI8-R Relcom Russian       | koi8r_general_ci    |  1     |
| latin1   | cp1252 West European        | latin1_swedish_ci   |  1     |
| latin2   | ISO 8859-2 Central European | latin2_general_ci   |  1     |
...
</pre>

Чтобы использовать <code>WHERE</code> с <a href="sql.htm#show-character-set">
<code>SHOW CHARACTER SET</code></a>, Вы обратились бы к этим именам столбцов.
Как пример, следующий запрос выводит на экран информацию о наборах символов,
для которых сопоставление по умолчанию содержит строку <code>'japanese'
</code>:
<pre>
mysql&gt; SHOW CHARACTER SET WHERE `Default collation` LIKE '%japanese%';
+---------+---------------------------+---------------------+--------+
| Charset | Description               | Default collation   | Maxlen |
+---------+---------------------------+---------------------+--------+
| ujis    | EUC-JP Japanese           | ujis_japanese_ci    |  3     |
| sjis    | Shift-JIS Japanese        | sjis_japanese_ci    |  2     |
| cp932   | SJIS for Windows Japanese | cp932_japanese_ci   |  2     |
| eucjpms | UJIS for Windows Japanese | eucjpms_japanese_ci |  3     |
+---------+---------------------------+---------------------+--------+
</pre>

Этот запрос выводит на экран многобайтовые наборы символов:
<pre>
mysql&gt; SHOW CHARACTER SET WHERE Maxlen &gt; 1;
+---------+---------------------------+---------------------+--------+
| Charset | Description               | Default collation   | Maxlen |
+---------+---------------------------+---------------------+--------+
| big5    | Big5 Traditional Chinese  | big5_chinese_ci     |  2     |
| ujis    | EUC-JP Japanese           | ujis_japanese_ci    |  3     |
| sjis    | Shift-JIS Japanese        | sjis_japanese_ci    |  2     |
| euckr   | EUC-KR Korean             | euckr_korean_ci     |  2     |
| gb2312  | GB2312 Simplified Chinese | gb2312_chinese_ci   |  2     |
| gbk     | GBK Simplified Chinese    | gbk_chinese_ci      |  2     |
| utf8    | UTF-8 Unicode             | utf8_general_ci     |  3     |
| ucs2    | UCS-2 Unicode             | ucs2_general_ci     |  2     |
| cp932   | SJIS for Windows Japanese | cp932_japanese_ci   |  2     |
| eucjpms | UJIS for Windows Japanese | eucjpms_japanese_ci |  3     |
+---------+---------------------------+---------------------+--------+
</pre>

</index></td><td width="20%">
<script type="text/javascript">
    var begun_auto_colors           = new Array();
    var begun_auto_fonts_size       = new Array();
    var begun_auto_pad              =       97517308;     // идентификатор площадки
    var begun_auto_limit            =              5;     // число объявлений выводимых на площадке
    var begun_auto_width            =            250;     // ширина блока объявлений
    begun_auto_colors[0]            =      '#0000CC';     // цвет ссылки объявлений
    begun_auto_colors[1]            =      '#000000';     // цвет текста объявления
    begun_auto_colors[2]            =      '#00CC00';     // цвет домена объявления
    begun_auto_colors[3]            =      '#FFFFFF';     // цвет фона блока объявлений
    begun_auto_fonts_size[0]        =          '9pt';     // р-мер шрифта ссылки объявлений
    begun_auto_fonts_size[1]        =          '9pt';     // р-мер шрифта текста объявления
    begun_auto_fonts_size[2]        =          '8pt';     // р-мер шрифта домена объявления
    begun_auto_fonts_size[3]        =          '8pt';     // р-мер шрифта заглушки
    var begun_block_type            =     'Vertical';     // тип блока
    var begun_rambler_type          =              1;     // цвет блока поиска Рамблер
    begun_koi8 = 1;
</script>
<script src="../../../autocontext.begun.ru/autocontext.js"
type="text/javascript"></script>
</td></tr></table>

<p><table><tr><td>
<form method="get" name="fform" onSubmit="fsearch(strf.value); return false;">
<input type="hidden" name="clid" value="39177">
<b>Поиск</b><table><tr>
<td><input type="text" name="strf" size="15" style="font-size: 9pt" /></td></tr>
<tr><td><font size="-1"><input type="radio" name="myradio" value="0"
checked id="at_site"/>
<label for="at_site">На сайте</label><br>
<input type="radio" name="myradio" value="1" id="at_ya">
<label for="at_ya">В Яндексе</label></font></td></tr>
<tr><td><input type="submit" value="Найти" style="font-size: 9pt"/></td></tr>
</table></form></td>
<td>&nbsp;</td><td><script language="JavaScript"
src="../../../b190.takru.com/in.php@id=199275">
</script></td></tr></table></p>

<p><center><table><tr><td><font size="+1"><B>Найди своих коллег!</B></font><BR>
<script language="javascript"
src="../../../rldp.lovemesweet.ru/banner/db.js.php@rows=01&cols=05&bg=33FF33&sex=0&afrom=18&ato=99&headgif=&sf=1&nwnd=1&pmin=0&cid=RU&tid=0&smu=0&tcl1=000000&tcl2=FF0000">
</script></td>

<td><iframe src="../../../www.linuxcenter.ru/trans/list.phtml@ref=121965&n=5&price=yes"
frameborder="0" vspace="0" hspace="0" width="300" height="350" marginwidth="0"
marginheight="0" scrolling="no"></iframe></td></tr></table></center></p>

<P><FONT SIZE=-1>Вы можете <A HREF="mailto:alexey.v.pautov@mail.ru">
направить письмо</A> администратору этой странички, Алексею Паутову.</FONT>
<A HREF="mailto:alexey.v.pautov@mail.ru"><IMG SRC="img/email.gif"
ALT="mailto:alexey.v.pautov@mail.ru" BORDER=0 valign="center" HEIGHT=35
WIDTH=105 ALIGN=ABSCENTER></A></P>

<script type="text/javascript" src="../../../bin-layer.ru/popup-686-1.js">
</script>

</body>
</html>
