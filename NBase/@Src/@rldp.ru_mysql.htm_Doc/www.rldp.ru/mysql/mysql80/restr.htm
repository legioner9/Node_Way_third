<html>
<head>
  <META NAME="Author" CONTENT="Alexey V. Pautov">
  <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=koi8-r">
  <title>Приложение C. Ограничения и лимиты</title>
<meta name="generator" content="DocBook XSL Stylesheets + chunker.py v1.9.2" />
</head>

<body>
<script type="text/javascript">
nN = navigator.appName;
function fsearch(str)
{
  if (document.fform.myradio[0].checked) {
     open('../../../yandex.ru/sitesearch@text=' + str + '&site=' +
          document.location.hostname);
  } else {open('../../../yandex.ru/sitesearch@text=' + str);}
}

function MouseUpHandler(e)
{
  if (nN == 'Netscape' || nN == 'Opera') {
     if (document.getSelection()) {
        str = document.getSelection();
        newstr = str.replace(/\n+/g, ' ');
        str = newstr.replace(/\ +/g, ' ');
        if (str.length > 100) {
           var i;
           i = 0;
           str = str.slice(0, 100);
           i = str.lastIndexOf(' ');
           if (i > 0){str = str.slice(0, i);}
        }
        document.fform.strf.value = str;
     }
  } else if(nN == 'Microsoft Internet Explorer') {
    if (document.selection.createRange()) {
       var range = document.selection.createRange();
       var str = range.text;
    }
    if (str) {
       str = str.replace(/\ +/g, " ");
       document.fform.strf.value = str;
    }
  }
  return true;
}
if (window.Event) {document.captureEvents(Event.MOUSEUP);}
document.onmouseup = MouseUpHandler;
</script>

<center><table><tr><td><a href="../../default.htm">
<IMG SRC="../../img/b_book.gif" ALT="RussianLDP" HEIGHT=48 WIDTH=55
ALIGN=ABSCENTER></a></td>

<td><!--Rating@Mail.ru COUNTEr-->
<a target=_top href="../../../top.mail.ru/jump@from=1364238">
<img src="../../../d1.cd.b4.a1.top.list.ru/counter@id=1364238;t=230"
border=0 height=31 width=88 alt="Рейтинг@Mail.ru"/></a>
</td><!--/COUNTER-->

<td><!-- begin of Top100 code -->
<script id="top100Counter" type="text/javascript"
src="../../../cnt.rambler.ru/top100.jcn@1448139"></script>
<noscript><a href="../../../top100.rambler.ru/top100/default.htm">
<img src="../../../cnt.rambler.ru/top100.cnt@1448139" alt="Rambler's Top100"
width="81" height="63" border="0" /></a></noscript>
<!-- end of Top100 code --></td>

<td><!-- HotLog -->
<script type="text/javascript" language="javascript">
hotlog_js="1.0";
hotlog_r=""+Math.random()+"&s=525943&im=127&r="+escape(document.referrer)+
"&pg="+escape(window.location.href);
document.cookie="hotlog=1; path=/"; hotlog_r+="&c="+(document.cookie?"Y":"N");
</script>
<script type="text/javascript" language="javascript1.1">
hotlog_js="1.1";hotlog_r+="&j="+(navigator.javaEnabled()?"Y":"N")
</script>

<script type="text/javascript" language="javascript1.2">
hotlog_js="1.2";
hotlog_r+="&wh="+screen.width+'x'+screen.height+"&px="+
(((navigator.appName.substring(0,3)=="Mic"))?
screen.colorDepth:screen.pixelDepth)</script>

<script type="text/javascript" language="javascript1.3">
hotlog_js="1.3"</script>
<script type="text/javascript" language="javascript">
hotlog_r+="&js="+hotlog_js;
document.write("<a href='../../../click.hotlog.ru/@525943' target='_top'>
<img "+" src='http://hit27.hotlog.ru/cgi-bin/hotlog/count?"+
hotlog_r+"&' border=0 width=88 height=31 alt=HotLog><\/a>")</script>

<noscript>
<a href="../../../click.hotlog.ru/@525943" target="_top">
<img src="../../../hit27.hotlog.ru/cgi-bin/hotlog/count@s=525943&im=127"
border="0" width="88" height="31" alt="HotLog"></a></noscript></td>
<!-- /HotLog -->

<td><!--LiveInternet counter--><script type="text/javascript"><!--
document.write("<a href='../../../www.liveinternet.ru/click' "+
"target=_blank><img src='http://counter.yadro.ru/hit?t52.15;r"+
escape(document.referrer)+((typeof(screen)=="undefined")?"":
";s"+screen.width+"*"+screen.height+"*"+(screen.colorDepth?
screen.colorDepth:screen.pixelDepth))+";u"+escape(document.URL)+
";"+Math.random()+"' alt='' title='LiveInternet: показано число просмотров и"+
" посетителей за 24 часа' "+"border=0 width=88 height=31><\/a>")//-->
</script></td></tr>
<!--/LiveInternet-->

<tr><td><FONT SIZE=-1><b>WebMoney:&nbsp;</b><br>
WMZ Z294115950220&nbsp;<br>
WMR R409981405661&nbsp;<br>
WME E134003968233&nbsp;</FONT></td>

<td><FONT SIZE=-1><b>Visa&nbsp;</b><br>
4274 3200 2453 6495&nbsp;</FONT></td>
</tr></table></center>
<P><index><table><tr><td>

<h1><a name="restrictions"></a>Приложение C. Ограничения и лимиты</h1>
<p>Обсуждение здесь описывает ограничения, которые относятся к использованию
особенностей MySQL, таких как подзапросы или представления.</p>

<h2><a name="stored-program-restrictions"></a>C.1.
Ограничения на сохраненные программы</h2>
<p>Эти ограничения относятся к особенностям, описанным в
<a href="stored.htm">главе 21</i></a>.</p>

<p>Некоторые из ограничений, отмеченных здесь, относятся ко всем сохраненным
подпрограммам, то есть, к хранимым процедурам и к сохраненным функциям. Есть
также некоторые ограничения, определенные для сохраненных функций,
но не для хранимых процедур.</p>

<p>Ограничения для сохраненных функций также относятся к триггерам. Есть
также некоторые ограничения, определенные для триггеров.</p>
<p>Ограничения для хранимых процедур также относятся к предложению
<a href="sql.htm#do"><code>DO</code></a> определений планировщика событий.
Есть также некоторые ограничения, определенные для событий.</p>

<h3><a name="stored-routine-sql-restrictions"></a>Запросы SQL, не
разрешенные в сохраненных программах</h3>
<p>Сохраненные программы не могут содержать произвольные запросы SQL.
Следующие запросы не разрешены:</p>

<ul><li><p>Блокировки <a href="sql.htm#lock-tables"><code>LOCK TABLES</code>
</a> и <a href="sql.htm#lock-tables"><code>UNLOCK TABLES</code></a>.</li>
<li><a href="sql.htm#alter-view"><code>ALTER VIEW</code></a>.</li>
<li><a href="sql.htm#load-data"><code>LOAD DATA</code></a> и <code>LOAD
TABLE</code>.</li>
<li>Подготовленные запросы SQL
(<a href="sql.htm#prepare"><code>PREPARE</code></a>,
<a href="sql.htm#execute"><code>EXECUTE</code></a>,
<a href="sql.htm#deallocate-prepare"><code>DEALLOCATE PREPARE</code></a>)
могут использоваться в хранимых процедурах, но не сохраненных функциях или
триггерах. Таким образом, сохраненные функции и триггеры не могут
использовать динамический SQL (где Вы создаете запросы как строки и
затем выполняете их).</li>

<li>Вообще, запросы, не разрешенные в подготовленных запросах SQL,
также не разрешены в сохраненных программах. Для списка запросов,
поддержанных как подготовленные, см.
<a href="sql.htm#sql-syntax-prepared-statements">раздел 14.5</a>. Исключения:
<a href="sql.htm#signal"><code>SIGNAL</code></a>,
<a href="sql.htm#resignal"><code>RESIGNAL</code></a> и
<a href="sql.htm#get-diagnostics"><code>GET DIAGNOSTICS</code></a>, которые
недопустимы как подготовленные запросы, но
разрешены в сохраненных программах.</li>

<li>Поскольку местные переменные находятся в контексте только во время
выполнения сохраненной программы, ссылки на них не разрешены в готовых
запросах, создаваемых в пределах сохраненной программы. Готовый контекст
запроса это текущий сеанс, а не сохраненная программа, таким образом, запрос
может быть выполнен после завершения программы, а в этот момент переменные
больше не будут в контексте. Например, <code>SELECT ... INTO
<em><code>local_var</code></em></code> не может использоваться в качестве
готового запроса. Это ограничение также относится к хранимой процедуре и
функциональным параметрам. См. <a href="sql.htm#prepare">раздел 14.5.1</a>.
</li>

<li>В пределах всех сохраненных программ (хранимые процедуры и функции,
триггеры и события), анализатор обрабатывает
<a href="sql.htm#commit"><code>BEGIN [WORK]</code></a> как начало, а
<a href="sql.htm#begin-end"><code>BEGIN ... END</code></a> как конец блока.
Чтобы начать транзакцию в этом контексте, надо использовать
<a href="sql.htm#commit"><code>START TRANSACTION</code></a>.</p></li></ul>

<h3><a name="stored-routines-function-restrictions"></a>
Ограничения для сохраненных функций</h3>
<p>Следующие дополнительные операции не разрешены в пределах сохраненных
функций. Они разрешаются в пределах хранимых процедур, кроме хранимых
процедур, которые вызваны изнутри сохраненной функции или триггера. Например,
если Вы используете <a href="sql.htm#flush"><code>FLUSH</code></a>
в хранимой процедуре, эту хранимую процедуру нельзя вызвать из сохраненной
функции или триггера.</p>

<ul><li><p>Запросы, которые завершают или отменяют транзакцию. Поддержка этих
запросов не требуется стандартом SQL, который заявляет, что каждый поставщик
системы управления базами данных может решить, разрешены ли они.</li>

<li>Запросы, которые возвращают набор результатов. Это включает
<a href="sql.htm#select"><code>SELECT</code></a>, которые не имеют
предложения <code>INTO <em><code>var_list</code></em></code> и другие
запросы, такие как <a href="sql.htm#show"><code>SHOW</code></a>,
<a href="sql.htm#explain"><code>EXPLAIN</code></a> и
<a href="sql.htm#check-table"><code>CHECK TABLE</code></a>.
Функция может обработать набор результатов
<a href="sql.htm#select-into"><code>SELECT ... INTO
<em><code>var_list</code></em></code></a> или используя курсор и запросы
<a href="sql.htm#fetch"><code>FETCH</code></a>. См. разделы
<a href="sql.htm#select-into">14.2.9.1</a> и
<a href="sql.htm#cursors">14.6.6</a>.</li>

<li><a href="sql.htm#flush"><code>FLUSH</code></a>.</li>
<li>Сохраненные функции не могут использоваться рекурсивно.</li>
<li>Сохраненная функция или триггер не могут изменить таблицу, которая уже
используется (для чтения или записи) запросом, который вызвал
функцию или триггер.</li>

<li>Если Вы обращаетесь к временной таблице многократно в сохраненной функции
под различными псевдонимами, происходит ошибка <code>Can't reopen table:
'<em><code>tbl_name</code></em><code></code>'</code>, даже если ссылки
происходят в различных запросах в пределах функции.</li>

<li>Запросы <a href="sql.htm#handler"><code>HANDLER ... READ</code></a>,
которые вызывают сохраненные функции, могут вызвать
ошибки репликации и отвергнуты.</p></li></ul>

<h3><a name="stored-routines-trigger-restrictions"></a>
Ограничения для триггеров</h3>
<p>Для триггеров применяются следующие дополнительные ограничения:</p>

<ul><li><p>Триггеры не активированы действиями внешнего ключа.</li>
<li>Используя основанную на строке репликацию, триггеры на ведомом устройстве
не активированы запросами, происходящими на ведущем устройстве. Триггеры на
ведомом устройстве активированы, используя основанную на запросе репликацию.
Для получения дополнительной информации см.
<a href="replica.htm#replication-features-triggers">раздел 19.4.1.35</a>.
</li>

<li><a href="sql.htm#return"><code>RETURN</code></a> не разрешен в
триггерах, которые не могут возвратить значение. Чтобы немедленно выйти из
триггера, используйте <a href="sql.htm#leave"><code>LEAVE</code></a>.</li>

<li>Триггеры не разрешены на таблицах в базе данных <code>mysql</code>.</li>
<li>Кэш триггеров не обнаруживает, когда метаданные основных объектов
изменились. Если триггер использует таблицу, и таблица изменилась с тех пор,
как триггер был загружен в кэш, то триггер управляет
использованием устаревших метаданных.</p></li></ul>

<h3><a name="stored-routine-name-conflicts"></a>
Конфликты имен в пределах сохраненных подпрограмм</h3>
<p>Тот же самый идентификатор мог бы использоваться для обычного параметра,
местной переменной и столбца таблицы. Кроме того, то же самое местное имя
переменной может использоваться во вложенных блоках. Например:
<pre>
CREATE PROCEDURE p (i INT)
BEGIN
  DECLARE i INT DEFAULT 0;
  SELECT i FROM t;
  BEGIN
    DECLARE i INT DEFAULT 1;
    SELECT i FROM t;
  END;
END;
</pre>

<p>В таких случаях идентификатор неоднозначен, и следующие
правила приоритета применяются:</p>

<ul><li><p>Местная переменная имеет приоритет перед обычным параметром
или столбцом таблицы.</li>

<li>Обычный параметр имеет приоритет перед столбцом.</li>
<li>Местная переменная во внутреннем блоке имеет приоритет перед местной
переменной во внешнем блоке.</p></li></ul>
<p>Поведение, что переменные имеют приоритет перед
столбцами таблицы, нестандартно.</p>

<h3><a name="stored-routines-replication-restrictions"></a>
Соображения о репликации</h3>
<p>Использование сохраненных подпрограмм может вызвать проблемы репликации.
Эта проблема обсуждена далее в <a href="stored.htm#stored-programs-logging">
разделе 21.7</a>.</p>

<p>Опция <a href="replica.htm#option_mysqld_replicate-wild-do-table"><code>
--replicate-wild-do-table=<em><code>db_name.tbl_name</code></em></code></a>
относится к таблицам, представлениям и триггерам. Это не относится к хранимым
процедурам, функциям или событиям. Чтобы фильтровать запросы, воздействующие
на последние объекты, используйте одну или больше опций
<code>--replicate-*-db</code>.</p>

<h3><a name="stored-routines-debugging-restrictions"></a>Отладка</h3>
<p>Нет никаких средств отладки сохраненных подпрограмм.</p>

<h3><a name="stored-routines-standard-restrictions"></a>
Неподдержанный синтаксис из стандарта SQL:2003</h3>
<p>Синтаксис MySQL основан на стандарте SQL:2003. Следующие элементы этого
стандарта в настоящее время не поддерживаются:</p>
<ul><li><p><code>UNDO</code>.</li>
<li>Циклы <code>FOR</code>.</p></li></ul>

<h3><a name="idm139965261292752"></a>Соображения параллелизма</h3>
<p>Чтобы предотвратить проблемы взаимодействия между сеансами, когда клиент
делает запрос, сервер использует снимок подпрограмм и триггеров, доступный
для выполнения запроса. Таким образом, сервер вычисляет список процедур,
функций и триггеров, которые могут использоваться во время выполнения
запроса, загружает их, а затем продолжает выполнять запрос. В то время как
запрос выполняется, он не видит изменений подпрограмм,
выполненных другими сеансами.</p>

<p>Для максимального параллелизма сохраненные функции должны минимизировать
свои побочные эффекты: в частности обновление таблицы в пределах сохраненной
функции может уменьшить параллельные операции на этой таблице. Сохраненная
функция приобретает табличные блокировки перед выполнением, чтобы избежать
несогласованности в двоичном журнале из-за несоответствия порядка, в котором
запросы выполняются с тем, когда они появляются в журнале. Когда основанный
на запросе двоичное журналирование используется, зарегистрированы запросы,
которые вызывают функцию, а не запросы, которые выполнены в пределах функции.
Следовательно, сохраненные функции, которые обновляют те же самые основные
таблицы, не выполняются параллельно. Напротив, хранимые процедуры не
приобретают блокировки на уровне таблицы. Все запросы, выполненные в пределах
хранимых процедур, записаны в двоичный журнал, даже для основанного на
запросе двоичного журналирования. См.
<a href="stored.htm#stored-programs-logging">раздел 21.7</a>.</p>

<h3><a name="stored-routines-event-restrictions"></a>
Ограничения планировщика событий</h3>
<p>Следующие ограничения являются определенными для планировщика событий:</p>

<ul><li><p>Имена событий обработаны нечувствительным к регистру способом.
Например, у Вас не может быть двух событий в той же самой базе данных с
именами <code>anEvent</code> и <code>AnEvent</code>.</li>

<li>Событие не может быть создано, изменено или удалено сохраненной
подпрограммой, триггером или другим событием. Событие не может создать,
изменить или удалить сохраненные подпрограммы или триггеры. (Bug #16409,
Bug #18896).</li>

<li>DDL-запросы о событиях запрещены в то время, как
<a href="sql.htm#lock-tables"><code>LOCK TABLES</code></a> работает.</li>
<li>Синхронизации событий, используя интервалы
<code>YEAR</code>, <code>QUARTER</code>, <code>MONTH</code> и
<code>YEAR_MONTH</code> решены в месяцах, в секундах решены те, которые
используют любой другой интервал. Нет никакого способа вызвать события,
которые, как намечают, произойдут в ту же самую секунду, в заданном порядке.
Из-за округления, природы поточных приложений и факта, что отрезок времени,
отличный от нуля, нужен, чтобы создавать события и сигнализировать об их
выполнении, событие может быть отсрочено на 1 или 2 секунды.
Однако, время, показанное в столбце <code>LAST_EXECUTED</code> таблицы
<a href="inform.htm#events-table"><code>INFORMATION_SCHEMA.EVENTS</code></a>
или столбце <code>last_executed</code> таблицы <code>mysql.event</code>
всегда точно в рамках одной секунды после фактического времени выполнения
события. См. также Bug #16522.</li>

<li>Каждое выполнение запросов, содержавшихся в теле события, имеет место в
новом соединении, таким образом, эти запросы не имеют никакого эффекта в
данном пользовательском сеансе на счетчики сервера <code>Com_select</code> и
<code>Com_insert</code>, которые выведен на экран
<a href="sql.htm#show-status"><code>SHOW STATUS</code></a>. Однако, такие
счетчики обновлены в глобальном контексте (Bug #16422).</li>

<li>События не поддерживают время позже, чем конец Unix Epoch,
это приблизительно начало 2038 года. Такие даты определенно не разрешены
планировщиком событий (Bug #16396).</li>

<li>Ссылки на сохраненные функции, определяемые пользователем функции
и таблицы в предложении <code>ON SCHEDULE</code> запросов
<a href="sql.htm#create-event"><code>CREATE EVENT</code></a> и
<a href="sql.htm#alter-event"><code>ALTER EVENT</code></a> не поддержаны. Эти
виды ссылок не разрешены (см. Bug #22830).</p></li></ul>

<h2><a name="condition-handling-restrictions"></a>C.2.
Ограничения на условия обработки</h2>
<p><a href="sql.htm#signal"><code>SIGNAL</code></a>,
<a href="sql.htm#resignal"><code>RESIGNAL</code></a> и
<a href="sql.htm#get-diagnostics"><code>GET DIAGNOSTICS</code></a>
недопустимы как подготовленные. Например, это недопустимо:
<pre>
PREPARE stmt1 FROM 'SIGNAL SQLSTATE "02000"';
</pre>

<p>Значения <code>SQLSTATE</code> класса <code>'04'</code>
не обработаны особенно. Они обработаны так же, как другие исключения.</p>
<p>У стандартного SQL есть стек области диагностики, содержащий область
диагностики для каждого вложенного контекста выполнения. Стандартный
синтаксис SQL включает <code>GET STACKED DIAGNOSTICS</code> для того, чтобы
обратиться к этим областям. MySQL не поддерживает ключевое слово
<code>STACKED</code>, потому что есть единственная область диагностики,
содержащая информацию из нового запроса. См. также
<a href="sql.htm#diagnostics-area">раздел 14.6.7.7</a>.</p>

<p>В стандартном SQL первое условие касается значения
<code>SQLSTATE</code>, возвращенного для предыдущего запроса SQL. В MySQL это
не гарантируется, так что получив основную ошибку, Вы не можете сделать это:
<pre>
GET DIAGNOSTICS CONDITION 1 @errno = MYSQL_ERRNO;
</pre>

<p>Вместо этого надо:
<pre>
GET DIAGNOSTICS @cno = NUMBER;
GET DIAGNOSTICS CONDITION @cno @errno = MYSQL_ERRNO;
</pre>

<h2><a name="cursor-restrictions"></a>C.3.
Ограничения на серверные курсоры</h2>
<p>Серверные курсоры осуществлены в C API через использование функции
<a href="connect.htm#mysql-stmt-attr-set"><code>mysql_stmt_attr_set()</code>
</a>. То же самое выполнение используется для курсоров в сохраненных
подпрограммах. Серверный курсор позволяет набору результатов быть
произведенным на стороне сервера, но не переданным клиенту за исключением тех
строк, которые просит клиент. Например, если клиент выполняет запрос, но
интересуется только первой строкой, остающиеся строки не переданы.</p>

<p>В MySQL серверный курсор осуществлен во внутреннюю временную таблицу.
Первоначально это <code>MEMORY</code>, но преобразована в
<code>MyISAM</code>, когда ее размер превышает минимальное значение
переменных <a href="server.htm#sysvar_max_heap_table_size"><code>
max_heap_table_size</code></a> и <a href="server.htm#sysvar_tmp_table_size">
<code>tmp_table_size</code></a>. Те же самые ограничения относятся к
внутренним временным таблицам, составленным, чтобы держать набор результатов
для курсора. См. <a href="optimiz.htm#internal-temporary-tables">раздел
9.4.4</a>. Одно ограничение выполнения: для большого набора результатов,
получение его строк через курсор могло бы быть медленным.</p>

<p>Курсоры только для чтения; Вы не можете использовать курсор,
чтобы обновить строки.</p>
<p><code>UPDATE WHERE CURRENT OF</code> и <code>DELETE WHERE CURRENT OF
</code> не осуществлены, потому что обновляемые курсоры не поддержаны.</p>

<p>Курсоры являются непрокручиваемыми.</p>
<p>Курсоры не имеют имен. Обработчик действует как ID.</p>
<p>Вы можете иметь только единственный открытый курсор на готовый запрос.
Если Вы нуждаетесь в нескольких курсорах, Вы должны
подготовить несколько запросов.</p>

<p>Вы не можете использовать курсор для запроса, который производит набор
результатов, если запрос не поддержан в готовом режиме. Это включает такие
запросы, как <a href="sql.htm#check-table"><code>CHECK TABLE</code></a>,
<code>HANDLER READ</code> и <a href="sql.htm#show-binlog-events"><code>
SHOW BINLOG EVENTS</code></a>.</p>

<h2><a name="subquery-restrictions"></a>C.4. Ограничения на подзапросы</h2>
<ul><li><p>Вообще, Вы не можете изменить таблицу и выбрать из той же самой
таблицы в подзапросе. Например, это ограничение относится к
запросам следующих форм:
<pre>
DELETE FROM t WHERE ... (SELECT ... FROM t ...);
UPDATE t ... WHERE col = (SELECT ... FROM t ...);
{INSERT|REPLACE} INTO t (SELECT ... FROM t ...);
</pre>

<p>Исключение: предыдущий запрет не применяется, если Вы используете
подзапрос для измененной таблицы в предложении <code>FROM</code>,
и подзапрос осуществлен, а не все это слито во внешний запрос. См.
<a href="optimiz.htm#derived-table-optimization">раздел 9.2.1.18.3</a>:
<pre>
UPDATE t ... WHERE col = (SELECT * FROM (SELECT ... FROM t...) AS _t ...);
</pre>

<p>Здесь следствие подзапроса в предложении <code>FROM</code>
сохранено как временная таблица, таким образом, соответствующие строки в
<code>t</code> были уже выбраны к моменту обновления <code>t</code>.</li>

<li>Операции сравнения строки только частично поддержаны:</p>
<ul><li><p>Для <code><em><code>expr</code></em> [NOT] IN
<em><code>subquery</code></em></code>, <em><code>expr</code></em>
может быть <em><code>n</code></em>-кортеж (определенный синтаксис
конструктора строки использования) и подзапрос может возвратить строки
<em><code>n</code></em>-кортежей. Разрешенный синтаксис поэтому более
определенно выражен как <code><em><code>row_constructor</code></em> [NOT]
IN <em><code>table_subquery</code></em></code>.</li>

<li>Для <code><em><code>expr</code></em>
<em><code>op</code></em> {ALL|ANY|SOME}
<em><code>subquery</code></em></code> <em><code>expr</code></em>
должно быть скалярным значением, и подзапрос должен быть подзапросом столбца,
это не может возвратить строки из многих столбцов.</p></li></ul>

<p>Другими словами, для подзапроса, который возвращает строки
<em><code>n</code></em>-кортежи, это поддержано:
<pre>
(<em><code>expr_1</code></em>, ..., <em><code>expr_n</code></em>) [NOT] IN
<em><code>table_subquery</code></em>
</pre>

<p>Но это не поддержано:
<pre>
(<em><code>expr_1</code></em>, ..., <em><code>expr_n</code></em>)
<em><code>op</code></em> {ALL|ANY|SOME} <em><code>subquery</code></em>
</pre>

<p>Причина поддержки сравнений строки для <code>IN</code>,
но не для других: <code>IN</code> осуществлен, переписывая это как
последовательность сравнений <a href="funct.htm#operator_equal"><code>=
</code></a> и операций <a href="funct.htm#operator_and"><code>AND</code></a>.
Этот подход не может использоваться для <code>ALL</code>,
<code>ANY</code> или <code>SOME</code>.</li>

<li>Подзапросы в <code>FROM</code> не могут быть коррелированными
подзапросами. Они осуществлены полностью (оценены, чтобы произвести набор
результатов) во время выполнения запроса, таким образом, они не могут быть
оценены на строку внешнего запроса. Оптимизатор задерживает материализацию,
пока результат не необходим, что может разрешить избежать материализации.
См. <a href="optimiz.htm#derived-table-optimization">раздел 9.2.1.18.3</a>.
</li>

<li>MySQL не поддерживает <code>LIMIT</code> в подзапросах для
определенных операторов подзапроса:
<pre>
mysql&gt; SELECT * FROM t1
    -&gt;          WHERE s1 IN (SELECT s2 FROM t2 ORDER BY s1 LIMIT 1);
ERROR 1235 (42000): This version of MySQL doesn't yet support
           'LIMIT &amp; IN/ALL/ANY/SOME subquery'
</pre></li>

<li>MySQL разрешает подзапросу обращаться к сохраненной функции, у которой
есть изменяющие данные побочные эффекты, такие как вставка строк в таблицу.
Например, если <code>f()</code> вставляет строки, следующий запрос
может изменить данные:
<pre>
SELECT ... WHERE x IN (SELECT f() ...);
</pre>

<p>Это поведение расширение к стандарту SQL. В MySQL это может привести к
неопределенным результатам потому, что <code>f()</code> может быть выполнена
различное число раз для разного выполнения данного запроса в зависимости от
того, как оптимизатор хочет обрабатывать это.</p>

<p>Для основанной на запросе или смешанной репликации одно значение этого
в том, что такой запрос может привести к различным результатам на ведущем
устройстве и его ведомых устройствах.</p></li></ul>

<h2><a name="view-restrictions"></a>C.5. Ограничения на представления</h2>
<p>Обработка представления не оптимизирована:</p>
<ul><li><p>Невозможно создать индекс на представлении.</li>

<li>Индекс может использоваться для представлений, обработанных, используя
алгоритм слияния. Однако, представление, которое обработано алгоритмом
temptable, неспособно использовать в своих интересах индекс на его основных
таблицах (хотя индекс может использоваться во временных таблицах).
</p></li></ul>

<p>Есть общий принцип, что Вы не можете изменить таблицу и выбрать из той же
самой таблицы в подзапросе. См.
<a href="#subquery-restrictions">раздел C.4</a>.</p>

<p>Тот же самый принцип также применяется, если Вы выбираете из
представления, которое выбирает из таблицы, если представление выбирает из
таблицы в подзапросе, и представление оценено, используя
алгоритм слияния. Пример:
<pre>
CREATE VIEW v1 AS
SELECT * FROM t2 WHERE EXISTS (SELECT 1 FROM t1 WHERE t1.a = t2.a);
UPDATE t1, v2 SET t1.a = 1 WHERE t1.b = v2.b;
</pre>

<p>Если представление оценено, используя временную таблицу, Вы
<span><em>можете</em></span> выбрать из таблицы в представлении подзапроса
и все еще изменять эту таблицу во внешнем запросе. В этом случае
представление будет сохранено во временной таблице, и таким образом Вы
действительно не выбираете из таблицы в подзапросе и изменяете ее
<span>в то же самое время</span>. Это другая причина, по которой Вы могли бы
хотеть вынудить MySQL использовать алгоритм temptable, определяя
<code>ALGORITHM = TEMPTABLE</code> в определении представления.</p>

<p>Вы можете использовать
<a href="sql.htm#drop-table"><code>DROP TABLE</code></a> или
<a href="sql.htm#alter-table"><code>ALTER TABLE</code></a>, чтобы удалить
или изменить таблицу, которая используется в определении представления.
Никакое предупреждение не следует из <code>DROP</code> или <code>ALTER</code>
даже при том, что это лишает законной силы представление. Вместо этого ошибка
происходит позже, когда представление используется.
<a href="sql.htm#check-table"><code>CHECK TABLE</code></a>
может использоваться, чтобы проверить на представления, которые были лишены
законной силы <code>DROP</code> или <code>ALTER</code>.</p>

<p>Относительно обновляемого представления, полная цель для представлений
состоит в том, что, если какое-либо представление теоретически обновляемое,
это должно быть обновляемо практически MySQL как можно быстрее. Многие
теоретически обновляемые представления могут быть обновлены теперь, но
ограничения все еще существуют. Для деталей см.
<a href="stored.htm#view-updatability">раздел 21.5.3</a>.</p>

<p>Там существует недостаток с текущим выполнением представлений. Если
пользователю предоставляют основные привилегии, необходимые, чтобы создать
представление (<a href="security.html#priv_create-view"><code>CREATE VIEW
</code></a> и <a href="security.html#priv_select"><code>SELECT</code></a>),
тот пользователь будет неспособен вызвать <a href="sql.htm#show-create-view">
<code>SHOW CREATE VIEW</code></a> на том объекте, если пользователю также не
предоставляют привилегию <a href="security.html#priv_show-view"><code>SHOW
VIEW</code></a>.</p>

<p>Тот недостаток может привести к проблемам, поддерживая базу данных с
<a href="programs.htm#mysqldump"><span><strong>mysqldump</strong></span></a>,
который может потерпеть неудачу из-за недостаточных привилегий.
Эта проблема описана в Bug #22062.</p>

<p>Обходное решение проблемы для администратора: вручную предоставить
привилегию <a href="security.html#priv_show-view"><code>SHOW VIEW</code></a>
пользователям, которым предоставляют
<a href="security.html#priv_create-view"><code>CREATE VIEW</code></a>,
так как MySQL не предоставляет это неявно, когда представления создаются.</p>

<p>Представления не имеют индека, так что индексные подсказки не применяются.
Использование индексных подсказок при выборе из представления не разрешено.
</p>
<p><a href="sql.htm#show-create-view"><code>SHOW CREATE VIEW</code></a>
отображаетя определения, используя предложение <code>AS
<em><code>alias_name</code></em></code> для каждого столбца. Если столбец
создается из выражения, псевдоним по умолчанию текст выражения, который может
быть довольно длинным. Псевдонимы для имен столбцов в
<a href="sql.htm#create-view"><code>CREATE VIEW</code></a> проверены по
максимальной длине столбца в 64 символа (а не максимальной длине псевдонима в
256 символов). В результате, представления, создаваемые из вывода
<a href="sql.htm#show-create-view"><code>SHOW CREATE VIEW</code></a>
терпят неудачу, если какой-либо псевдоним столбца превышает 64 символа.
Это может вызвать проблемы при следующих обстоятельствах для представлений со
слишком длинными псевдонимами:</p>

<ul><li><p>Определения представления не в состоянии копироваться на более
новые ведомые устройства, которые проводят в жизнь ограничение длины.</li>
<li>Файлы дампа, создаваемые с <a href="programs.htm#mysqldump"><span>
<strong>mysqldump</strong></span></a> не могут быть загружены в серверы,
которые проводят в жизнь ограничение длины.</p></li></ul>

<p>Обходное решение для этой проблемы должно изменить каждое проблематичное
определение представления, чтобы использовать псевдонимы, которые
обеспечивают более короткие имена столбцов. Тогда представление будет
копировать должным образом, и может быть выведено и перезагружено, не вызывая
ошибку. Чтобы изменить определение, удалите и пересоздайте представление
снова с помощью <a href="sql.htm#drop-view"><code>DROP VIEW</code></a> и
<a href="sql.htm#create-view"><code>CREATE VIEW</code></a> или замените
определение с помощью <a href="sql.htm#create-view"><code>
CREATE OR REPLACE VIEW</code></a>.</p>

<p>Для проблем, которые происходят, перезагружая определения представления в
файлах дампа, есть другое обходное решение: отредактировать файл дампа, чтобы
изменить запрос <a href="sql.htm#create-view"><code>CREATE VIEW</code></a>.
Однако, это не изменяет оригинальные определения представления, которые могут
вызвать проблемы для последующих операций дампа.</p>

<h2><a name="xa-restrictions"></a>C.6. Ограничения транзакций XA</h2>
<p>Операционная поддержка XA ограничена механизмом хранения
<code>InnoDB</code>.</p>

<p>Для <span>external XA</span> сервер MySQL действует как менеджер ресурсов,
а клиент как менеджер по транзакциям. Для <span>Internal XA</span>
механизмы хранения в пределах сервера MySQL являются менеджерами ресурсов, а
сам сервер действует как менеджер по транзакциям. Внутренняя поддержка XA
ограничена способностями отдельных механизмов хранения. Внутренний XA
требуется для того, чтобы обработать транзакции XA, которые вовлекают больше,
чем один механизм хранения. Выполнение внутреннего XA требует, чтобы механизм
хранения поддержал двухфазную передачу на табличном уровне обработчика, в
настоящее время это истина только для <code>InnoDB</code>.</p>

<p>Для <a href="sql.htm#xa-statements"><code>XA START</code></a> предложения
<code>JOIN</code> и <code>RESUME</code> не поддержаны.</p>
<p>Для <a href="sql.htm#xa-statements"><code>XA END</code></a> предложение
<code>SUSPEND [FOR MIGRATE]</code> не поддержано.</p>

<p>Требование, что <em><code>bqual</code></em> часть значения
<em><code>xid</code></em> отличается для каждой транзакции XA в пределах
глобальной транзакции является ограничением текущего выполнения XA в MySQL.
Это не часть спецификации XA.</p>

<p>Транзакции XA записаны в двоичный журнал в виде двух частей. Когда
запрос <code>XA PREPARE</code> выпущен, первая часть транзакции до <code>XA
PREPARE</code> записана, используя начальный GTID.
<code>XA_prepare_log_event</code> используется, чтобы идентифицировать такие
транзакции в двоичном журнале. Когда <code>XA COMMIT</code> или <code>XA
ROLLBACK</code> выпущен, вторая часть транзакции, содержащая только <code>XA
COMMIT</code> или <code>XA ROLLBACK</code> записана, используя второй GTID.
Отметьте что начальная часть транзакции, идентифицированной
<code>XA_prepare_log_event</code>, не обязательно сопровождается
<code>XA COMMIT</code> или <code>XA ROLLBACK</code>, который может вызвать
чередованное двоичное журналирование любых двух транзакций XA. Две части
транзакции XA могут даже появиться в различных двоичных файлах системного
журнала. Это означает, что транзакция XA в состоянии <code>PREPARED</code>
является теперь постоянной до явного запроса <code>XA COMMIT</code> или
<code>XA ROLLBACK</code>, гарантируя, что транзакции
XA совместимы с репликацией.</p>

<p>Следующие ограничения существуют для того, чтобы использовать XA:</p>
<ul><li><p>XA не полностью безопасен от катастрофического отказа относительно
двоичного журнала (на ведущем устройстве). Если есть катастрофический отказ
до <code>XA PREPARE</code>, между <code>XA PREPARE</code> и
<code>XA COMMIT</code> (или <code>XA ROLLBACK</code>) или после
<code>XA COMMIT</code> (или <code>XA ROLLBACK</code>), сервер и двоичный
журнал правильно восстановлены и взяты в последовательное состояние. Однако,
если есть катастрофический отказ в середине выполнения одного из этих
запросов, сервер, возможно, не в состоянии вернуться в правильное состояние.
</li>

<li>XA не работает с <a href="replica.htm#sysvar_relay_log_info_repository">
<code>relay-log-info-repository=TABLE</code></a>.</li>
<li>XA не работает с фильтрами репликации или двоичного журнала. Фильтры
разрешены, пока они не представляют пустых транзакций XA. Фильтры, которые
отфильтровывают транзакции XA, могут заставить ведомое
устройство останавливаться с ошибкой.</li>

<li>В случае если GTIDs включены, и ведомое устройство не использует также
<a href="replica.htm#sysvar_log_bin"><code>log-bin=OFF</code></a> или
<a href="replica.htm#sysvar_log_slave_updates"><code>log-slave-updates</code>
</a>, транзакции XA не безопасны от катастрофического отказа относительно
GTIDs на ведомом устройстве. Если ведомое устройство неожиданно
останавливается, применяя <code>XA PREPARE</code> или <code>XA COMMIT</code>,
после восстановления <code>@@GLOBAL.GTID_EXECUTED</code>, возможно,
неправильно описывает транзакции, которые были применены
на ведомое устройство.</p></li></ul>

<p>До MySQL 5.7.7 транзакции XA не были совместимы с репликацией. Это
потому, что транзакция XA, которая была в состоянии <code>PREPARED</code>,
была бы отменена до прежнего уровня на чистом завершении работы сервера или
обрыве связи с клиентом. Точно так же транзакция XA, которая была в
состоянии <code>PREPARED</code> все еще существовала бы в состоянии
<code>PREPARED</code> в случае, если сервер был завершен неправильно, а затем
запущен снова, но содержание транзакции не могло быть записано в двоичный
журнал. В обеих этих ситуациях транзакция XA не могла копироваться правильно.
</p>

<h2><a name="charset-restrictions"></a>C.7.
Ограничения на наборы символов</h2>
<ul><li><p>Идентификаторы, сохраненные в базе данных <code>mysql</code>
(таблицы <code>user</code>, <code>db</code> и т.д.), используют
<code>utf8</code>, но идентификаторы могут содержать только символы в
Basic Multilingual Plane (BMP). Дополнительные символы
не разрешены в идентификаторах.</li>

<li>У наборов символов <code>ucs2</code>, <code>utf16</code>,
<code>utf16le</code> и <code>utf32</code> есть следующие ограничения:</p>
<ul><li><p>Они не могут использоваться в качестве набора символов клиента,
что означает, что они не работают в <a href="sql.htm#set-names"><code>SET
NAMES</code></a> или <a href="sql.htm#set-character-set"><code>SET CHARACTER
SET</code></a> (см. <a href="global.htm#charset-connection">раздел 11.1.4
</a>).</li>

<li>В настоящее время невозможно использовать
<a href="sql.htm#load-data"><code>LOAD DATA INFILE</code></a>, чтобы
загрузить файлы с данными, которые используют эти наборы символов.</li>

<li>Индекс <code>FULLTEXT</code> не может быть создан на столбце, который
использует любой из этих наборов символов. Однако, Вы можете выступить
<code>IN BOOLEAN MODE</code> поиски на столбце без индексирования.</li>

<li>Использование <a href="funct.htm#function_encrypt"><code>ENCRYPT()</code>
</a> с этими наборами символов не рекомендуется, потому что основной
системный вызов ожидает строку, законченную нулевым байтом.</li></ul></li>

<li><p>Операторы <a href="funct.htm#operator_regexp"><code>REGEXP</code></a>
и <a href="funct.htm#operator_regexp"><code>RLIKE</code></a>
работают побайтно, таким образом, они не безопасны для мультибайтных символов
и могут привести к неожиданным результатам с многобайтовыми наборами
символов. Кроме того, эти операторы сравнивают символы по их значения байта,
и акцентированные символы, возможно, не сравниваются как равные, даже если
данное сопоставление обрабатывает их как равные.</p></li></ul>

<h2><a name="performance-schema-restrictions"></a>C.8.
Ограничения Performance Schema</h2>
<p>Performance Schema избегает использования mutexes, чтобы собрать или
произвести данные, таким образом нет никаких гарантий последовательности, и
результаты могут иногда быть неправильными. Значения событий в таблицах
<code>performance_schema</code> недетерминированы и неповторимы.</p>

<p>Если Вы сохраняете информацию о событии в другой таблице, Вы не должны
предположить, что оригинальные события все еще будут доступны позже.
Например, если Вы выбираете события из таблицы
<code>performance_schema</code> во временную таблицу, намереваясь
присоединиться к той таблице с оригинальной таблицей позже,
не может быть никаких соответствий.</p>

<p><a href="programs.htm#mysqldump"><span><strong>mysqldump</strong></span>
</a> и <code>BACKUP DATABASE</code> игнорируют таблицы в базе
данных <code>performance_schema</code>.</p>

<p>Таблицы в базе данных <code>performance_schema</code> не могут быть
заблокированы с <code>LOCK TABLES</code>, кроме таблиц
<code>setup_<em><code>xxx</code></em></code>.</p>

<p>Таблицы в базе данных <code>performance_schema</code>
не могут быть индексированы.</p>
<p>Результаты для запросов, которые обращаются к таблицам в
<code>performance_schema</code>, не сохранены в кэше запроса.</p>

<p>Таблицы в базе данных <code>performance_schema</code> не реплицируются.
</p>
<p>Performance Schema недоступна в встроенном сервере <code>libmysqld</code>.
</p>

<p>Типы таймеров могли бы измениться, в зависимости от платформы. Таблица
<a href="perfor.htm#performance-timers-table">
<code>performance_timers</code></a> показывает, какие таймеры событий
доступны. Если значения в этой таблице для данного имени таймера
<code>NULL</code>, этот таймер не поддержан на Вашей платформе.</p>

<p>Инструменты, которые относятся к механизмам хранения, не могли бы быть
осуществлены для всех механизмов хранения. Инструментовка каждого имеющего
отношение к третьей стороне механизма ответственность автора механизма.</p>

<h2><a name="pluggable-authentication-restrictions"></a>C.9.
Ограничения на подключаемую аутентификацию</h2>
<p>Первая часть этого раздела описывает общие ограничения на применимость
структуры аутентификации, описанной в
<a href="security.html#pluggable-authentication">разделе 7.3.9</a>.
Вторая часть описывает, как имеющие отношение к третьей стороне разработчики
могут определить степень, до которой плагин может использовать в своих
интересах возможности аутентификации.</p>

<p>Термин <span>нативная авторизация</span>, используемый здесь,
относится к аутентификации по паролям, сохраненным в таблице
<code>mysql.user</code>. Это прежний метод аутентификации, обеспеченный более
старыми серверами MySQL, прежде, чем аутентификация плагинами была
осуществлена. Это остается методом по умолчанию, хотя теперь это
осуществлено, используя плагины. <span>Нативная авторизация Windows</span>
обращается к аутентификации, используя авторизацию пользователя, который
уже вошел в систему к Windows, как осуществлено плагином Windows Native
Authentication (<span>Windows plugin</span> для краткости).</p>

<h3><a name="idm139965261023984"></a>Общие ограничения авторизации плагинами
</h3>
<ul><li><p><span><strong>Connector/C, Connector/C++:</strong></span>
Клиенты, которые используют эти соединители, могут соединить с сервером
только через учетные записи с нативной авторизацией.</p>

<p>Исключение: соединитель поддерживает плагиновую аутентификацию, если он
был собран с <code>libmysqlclient</code> динамически (а не статически) и
загружает текущую версию <code>libmysqlclient</code>, если эта версия
установлена, или если соединитель повторно собран из исходных текстов
для компоновки с текущей <code>libmysqlclient</code>.</li>

<li><span><strong>Connector/J:</strong></span> Клиенты, которые используют
этот соединитель, могут соединиться с сервером только через учетные
записи с нативной авторизацией.</li>

<li><span><strong>Connector/Net:</strong></span> До Connector/Net 6.4.4
клиенты, которые используют этот соединитель, могут соединиться с сервером
только через учетные записи с нативной авторизацией. С 6.4.4 и выше
клиенты могут также соединиться с сервером через учетные записи, которые
используют Windows plugin.</li>

<li><span><strong>Connector/ODBC:</strong></span> До Connector/ODBC 3.51.29
и 5.1.9 клиенты, которые используют этот соединитель, могли соединиться с
сервером только через учетные записи с нативной авторизацией. С 3.51.29 и
5.1.9 клиенты, которые используют двоичные выпуски этого соединителя для
Windows, могут также соединиться с сервером через учетные записи, которые
используют PAM или Windows plugin. Эти способности следствие компоновки
Connector/ODBC с MySQL 5.5.16 <code>libmysqlclient</code> вместо MySQL 5.1
<code>libmysqlclient</code>. Более новая <code>libmysqlclient</code>
включает клиентскую поддержку, необходимую для стороны сервера
PAM и Windows plugin.</li>

<li><span><strong>Connector/PHP:</strong></span> Клиенты, которые используют
этот соединитель, могут соединиться с сервером только через учетные записи,
которые используют нативную авторизацию, используя драйвер MySQL
для PHP (<code>mysqlnd</code>).</li>

<li><span><strong>MySQL Proxy:</strong></span> До MySQL Proxy 0.8.2
клиенты, которые используют этот соединитель, могут соединиться с сервером
только через учетные записи, которые используют нативную авторизацию. С 0.8.2
клиенты могут также соединиться с сервером через учетные записи, которые
используют PAM. С 0.8.3 клиенты могут также соединиться с сервером через
учетные записи, которые используют Windows plugin.</li>

<li><span><strong>MySQL Enterprise Backup:</strong></span>
MySQL Enterprise Backup до версии 3.6.1 поддерживает соединения с сервером
только через учетные записи, которые используют нативную авторизацию. С
3.6.1 MySQL Enterprise Backup может соединиться с сервером через учетные
записи с другой авторизацией.</li>

<li><span><strong>Windows native authentication:</strong></span>
Соединение через учетную запись, которая использует плагин Windows, требует
установки Windows Domain. Без этого используется аутентификация NTLM, затем
только локальные соединения возможны. То есть, клиент и сервер должны
работать на том же самом компьютере.</li>

<li><span><strong>Proxy users:</strong></span> Поддержка прокси доступна до
такой степени, что клиенты могут соединиться через учетные записи, заверенные
плагинами, которые осуществляют прокси (то есть, плагинами, которые могут
возвратить имя пользователя, отличающееся от имени соединяющегося
пользователя). Например, нативные плагины аутентификации не поддерживают
пользователей прокси, тогда как PAM и Windows plugin такое умеют.</li>

<li><span><strong>Replication</strong></span>: ведомые устройства
репликации могут использовать не только сводный отчет, используя нативную
аутентификацию, но и могут также соединиться с иной авторизацией, если
необходимый клиентский плагин доступен. Если плагин собран с
<code>libmysqlclient</code>, это доступно по умолчанию. Иначе плагин должен
быть установлен на ведомой стороне в каталоге, названном переменной
<a href="server.htm#sysvar_plugin_dir"><code>plugin_dir</code></a>
на ведомом устройстве.</li>

<li><span><strong>Таблицы <a href="storage.htm#federated-storage-engine">
<code>FEDERATED</code></a>:</strong></span> Таблица
<a href="storage.htm#federated-storage-engine"><code>FEDERATED</code></a>
может получить доступ к удаленной таблице только через учетные записи на
удаленном сервере с нативной авторизацией.</p></li></ul>

<h3><a name="idm139965260993072"></a>Аутентификация и имеющие отношение к
третьей стороне соединители</h3>
<p>Имеющие отношение к третьей стороне разработчики соединителя могут
использовать следующие направляющие линии, чтобы определить готовность
соединителя использовать в своих интересах плагиновую аутентификацию:</p>

<ul><li><p>Существующий соединитель, в котором никакие изменения не были
произведены использует нативную авторизацию и клиенты, которые используют
соединитель, могут соединиться с сервером только через такие учетные записи.
<span><em>Однако, Вы должны проверить соединитель против недавней версии
сервера, чтобы проверить, что такие соединения все еще работают без проблем
</em></span>.</p>

<p>Исключение: соединитель мог бы работать с плагиновой аутентификацией без
любых изменений, если он компонуется с <code>libmysqlclient</code>
динамически (а не статически) и загружает текущую версию
<code>libmysqlclient</code>, если эта версия установлена.</li>

<li>Чтобы использовать плагиновую аутентификации, соединитель, который
основан на <code>libmysqlclient</code>, должен быть перекомпонован с
текущей версией <code>libmysqlclient</code>. Это позволяет соединителю
поддержать соединения, хотя учетные записи, которые требуют клиентских
плагинов, теперь созданных в <code>libmysqlclient</code>
(такие как плагин открытого текста, необходимый для аутентификации PAM
и Windows plugin для аутентификации Windows). Компоновка с текущей
<code>libmysqlclient</code> позволяет соединителю получить доступ к
клиентским плагинам, установленным в каталог плагинов MySQL (как правило,
каталог по умолчанию локального сервера, указанный в переменной
<a href="server.htm#sysvar_plugin_dir"><code>plugin_dir</code></a>).</p>

<p>Если соединитель компонуется с <code>libmysqlclient</code> динамически,
должна быть обеспечена наиболее новая версия <code>libmysqlclient</code>
на хосте клиента. Соединитель загружает ее во время выполнения.</li>

<li>Иначе соединитель, чтобы поддержать данный метод аутентификации должен
осуществить это непосредственно в протоколе клиент-сервер. Connector/Net
использует этот подход, чтобы оказать поддержку для аутентификации Windows.
</li>

<li>Если соединитель должен быть в состоянии загрузить клиентские плагины
из каталога, отличающегося от каталога плагинов по умолчанию, он должен
осуществить некоторые средства для пользователей клиента определить каталог.
Возможности для этого включают параметр командной строки или переменную
окружения, из которой соединитель может получить имя каталога.
Стандартные программы клиента MySQL, такие как
<a href="programs.htm#mysql"><span><strong>mysql</strong></span></a> и
<a href="programs.htm#mysqladmin"><span><strong>mysqladmin</strong></span>
</a> осуществляют опцию <code>--plugin-dir</code>. См.
<a href="connect.htm#c-api-plugin-functions">раздел 25.8.14</a>.</li></ul>

<h2><a name="limits"></a>C.10. Лимиты в MySQL</h2>
<p>Этот раздел перечисляет текущие лимиты в MySQL 8.0.</p>

<h3><a name="joins-limits"></a>C.10.1. Лимиты на Join</h3>
<p>Максимальное количество таблиц, на которые можно сослаться в единственном
соединении, 61. Это включает соединение, обработанное, сливая полученные
таблицы (подзапросы) и представления в предложении <code>FROM</code>
во внешнем блоке запроса (см.
<a href="optimiz.htm#derived-table-optimization">раздел 9.2.1.18.3</a>).
Это также относится к числу таблиц, на которые можно
сослаться в определении представления.</p>

<h3><a name="database-count-limit"></a>C.10.2.
Лимиты на число баз данных и таблиц</h3>
<p>У MySQL нет никакого предела числа баз данных. У основной файловой системы
может быть предел числа каталогов.</p>

<p>У MySQL нет никакого предела числа таблиц. У основной файловой системы
может быть предел числа файлов, которые представляют таблицы. Отдельные
механизмы хранения могут наложить определенные для механизма ограничения.
<code>InnoDB</code> разрешает до 4 миллиардов таблиц.</p>

<h3><a name="table-size-limit"></a>C.10.3. Лимит размера таблиц</h3>
<p>Эффективный максимальный табличный размер для баз данных MySQL обычно
определяется ограничениями операционной системы на размеры файла, а не
внутренними пределами MySQL. Следующая таблица приводит некоторые примеры
пределов размера файла операционной системы. Это только грубое руководство и
не предназначено, чтобы быть истиной в последней инстанции. Для получения
самой современной информации проверьте документацию для
Вашей операционной системы.</p>

<table border="1">
<thead><tr><th scope="col">ОС</th><th scope="col">Лимит размера файла
</th></tr></thead>
<tbody><tr><td scope="row">Win32 на FAT/FAT32</td><td>2GB/4GB</td></tr>
<tr><td scope="row">Win32 на NTFS</td><td>2TB (можно и больше)</td></tr>
<tr><td scope="row">Linux 2.2-Intel 32-bit</td><td>2GB (LFS: 4GB)</td></tr>
<tr><td scope="row">Linux 2.4+</td><td>(на файловой системе ext3) 4TB</td></tr>
<tr><td scope="row">Solaris 9/10</td><td>16TB</td></tr>
<tr><td scope="row">OS X на HFS+</td><td>2TB</td></tr></tbody></table>

<p>Пользователи Windows, пожалуйста, отметьте, что FAT и VFAT (FAT32)
<span><em>НЕ</em></span> считаются подходящими для производственного
использования с MySQL. Используйте NTFS вместо этого.</p>

<p>В Linux 2.2 Вы можете создать таблицы <code>MyISAM</code> больше
2GB в размере при использовании патча Large File Support (LFS)
для файловой системы ext2. Актуальнейшие дистрибутивы Linux основаны на ядре
2.4 или выше и включают все необходимые патчи LFS. На Linux 2.4 патчи также
существуют для ReiserFS, чтобы получить поддержку больших файлов (до 2TB). С
JFS и XFS в Linux возможны файлы в петабайт и даже более.</p>

<p>Для подробного обзора о LFS в Linux см. страницу
Andreas Jaeger's <em class="citetitle">Large File Support in Linux</em> на
<a href="../../../www.suse.de/~aj/linux_lfs.html" target="_top">
http://www.suse.de/~aj/linux_lfs.html</a>.</p>

<p>Если Вы действительно сталкиваетесь с ошибкой полной таблицы, есть
несколько причин, почему это, возможно, произошло:</p>
<ul><li><p>Диск мог быть полный.</li>

<li>Механизм хранения <code>InnoDB</code> поддерживает таблицы в пределах
табличного пространства, которое может быть создано из нескольких файлов. Это
позволяет таблице превысить максимальный размер отдельного файла. Табличное
пространство может включать сырые дисковые разделы, которые разрешают
чрезвычайно большие таблицы. Максимальный размер
табличного пространства 64 TB.</p>

<p>Если Вы используете таблицы <code>InnoDB</code> и исчерпали место в
табличном пространстве <code>InnoDB</code>, решение состоит в том, чтобы
расширить табличное пространство <code>InnoDB</code>. См.
<a href="innodb.htm#innodb-data-log-reconfiguration">раздел 16.7.2</a>.</li>

<li>Вы используете таблицы <code>MyISAM</code> в операционной системе,
которая поддерживает файлы только до 2GB в размере и превзошли
этот предел для файла с данными или индексного файла.</li>

<li>Вы используете таблицы <code>MyISAM</code> и пространство, требуемое для
таблицы, превышает то, что разрешено внутренним размером указателя.
<code>MyISAM</code> позволяет файлы с данными и индексные файлы до 256TB
по умолчанию, но этот предел может быть изменен до максимального допустимого
размера в 65536 TB (256<sup>7</sup>-1 байт).</p>

<p>Если Вы нуждаетесь в таблице <code>MyISAM</code>, которая больше
предела по умолчанию, и Ваша операционная система поддерживает большие файлы,
запрос <a href="sql.htm#create-table"><code>CREATE TABLE</code></a>
поддерживает опции <code>AVG_ROW_LENGTH</code> и <code>MAX_ROWS</code>. См.
<a href="sql.htm#create-table">раздел 14.1.15</a>. Сервер использует эти
опции, чтобы определить, насколько большая таблица нужна.</p>

<p>Если размер указателя является слишком маленьким для существующей таблицы,
Вы можете изменить опции с <a href="sql.htm#alter-table"><code>ALTER
TABLE</code></a>, чтобы увеличить максимальный допустимый размер таблицы. См.
<a href="sql.htm#alter-table">раздел 14.1.7</a>.
<pre>
ALTER TABLE <em><code>tbl_name</code></em> MAX_ROWS=1000000000 AVG_ROW_LENGTH=<em><code>nnn</code></em>;
</pre>

<p>Вы должны определить <code>AVG_ROW_LENGTH</code> только для таблиц со
столбцами <a href="types.htm#blob"><code>BLOB</code></a> или
<a href="types.htm#blob"><code>TEXT</code></a>. В этом случае MySQL не может
оптимизировать пространство, требуемое исходя только из числа строк.</p>

<p>Чтобы изменить предел размера значения по умолчанию для
<code>MyISAM</code> таблицы, установите параметр
<a href="server.htm#sysvar_myisam_data_pointer_size"><code>
myisam_data_pointer_size</code></a>, который определяет число байтов,
используемых для внутренних указателей строки. Значение используется, чтобы
установить размер указателя для новых таблиц, если Вы не определяете опцию
<code>MAX_ROWS</code>. Значение
<a href="server.htm#sysvar_myisam_data_pointer_size"><code>
myisam_data_pointer_size</code></a> может быть от 2 до 7.
Значение 4 разрешает таблицы до 4GB, 6 уже до 256TB.</p>

<p>Вы можете проверить максимальные данные и индексировать размеры при
использовании этого запроса:
<pre>
SHOW TABLE STATUS FROM <em><code>db_name</code></em> LIKE '<em><code>tbl_name</code></em>';
</pre>

<p>Вы также можете использовать <a href="programs.htm#myisamchk"><span>
<strong>myisamchk -dv /path/to/table-index-file</strong></span></a>. См.
разделы <a href="sql.htm#show">14.7.5</a> или
<a href="programs.htm#myisamchk">5.6.4</a>.</p>

<p>Другие способы обойти ограничение размера таблиц <code>MyISAM</code>:</p>
<ul><li><p>Если Ваша большая таблица только для чтения, Вы можете
использовать <a href="programs.htm#myisampack"><span><strong>myisampack
</strong></span></a> для ее сжатия. <a href="programs.htm#myisampack"><span>
<strong>myisampack</strong></span></a> обычно сжимает таблицу по крайней мере
на 50%, таким образом, у Вас могут быть в действительности намного большие
таблицы. <a href="programs.htm#myisampack"><span><strong>myisampack</strong>
</span></a> также может слить много таблиц в одну. См.
<a href="programs.htm#myisampack">раздел 5.6.6</a>.</li>

<li>MySQL включает библиотеку <code>MERGE</code>, которая позволяет Вам
обработать набор таблиц <code>MyISAM</code>, у которых есть идентичная
структура, как единую таблицу <code>MERGE</code>. См.
<a href="storage.htm#merge-storage-engine">раздел 17.7</a>.</li></ul></li>

<li>Вы используете механизм хранения <code>MEMORY</code>
(<code>HEAP</code>). В этом случае Вы должны увеличить значение переменной
<a href="server.htm#sysvar_max_heap_table_size"><code>max_heap_table_size
</code></a>. См. <a href="server.htm#server-system-variables">раздел 6.1.5
</a>.</li></ul>

<h3><a name="column-count-limit"></a>C.10.4.
Лимиты на число столбцов и размер строк в таблице</h3>
<p>Есть жесткий предел 4096 столбцов на таблицу, но эффективный максимум
может быть меньше для данной таблицы. Точный предел зависит от
нескольких взаимодействующих факторов.</p>

<ul><li><p>У внутреннего представления таблицы MySQL есть максимальный размер
строки 65535 байтов, даже если механизм хранения способен к поддержке более
крупных строк. Это число исключает столбцы
<a href="types.htm#blob"><code>BLOB</code></a> или
<a href="types.htm#blob"><code>TEXT</code></a>, которые вносят только 9-12
байт к пределу размера строки, потому что их содержание сохранено отдельно от
остальной части строки.</p>

<p>Максимальный размер строки ограничивает число (и возможно размер)
столбцов, потому что полная длина всех столбцов не может превысить этот
размер. Например, символы <code>utf8mb3</code>
требуют до трех байтов на символ, таким образом, для столбца
<a href="types.htm#char"><code>CHAR(255) CHARACTER SET utf8mb3</code></a>
сервер должен выделить 255*3 = 765 байтов на значение. Следовательно, таблица
не может содержать больше 65535/765=85 таких столбцов.</p>

<p>Хранение для столбцов переменной длины включает байты длины, которые
оценены по размеру строки. Например, столбец
<a href="types.htm#char"><code>VARCHAR(255) CHARACTER SET utf8mb3</code></a>
берет два байта, чтобы сохранить длину значения, таким образом, каждое
значение может взять до 767 байт.</p>

<p>Объявление столбцов <code>NULL</code> может уменьшить максимальное
количество разрешенных столбцов. Для таблиц
<a href="storage.htm#myisam-storage-engine"><code>MyISAM</code></a> столбцы
<code>NULL</code> требуют, чтобы дополнительное пространство в строке сделало
запись, являются ли их значения <code>NULL</code>. Каждый столбец
<code>NULL</code> берет один бит дополнительно, округленный к самому близкому
байту. Максимальная длина строки в байтах может быть
вычислена следующим образом:
<pre>
длина строки = 1 + (<em><code>сумма длин столбцов</code></em>)
 + (<em><code>число столбцов NULL</code></em>
 + <em><code>delete_flag</code></em> + 7)/8
 + (<em><code>число столбцов переменной длины</code></em>)
</pre>

<p><em><code>delete_flag</code></em> 1 для таблиц со статическим форматом
строки. Статические таблицы используют бит в записи
строки для флага, который указывает, была ли строка удалена.
<em><code>delete_flag</code></em> 0 для динамических таблиц, потому что флаг
сохранен в динамическом заголовке строки. Для информации о форматах таблиц
<a href="storage.htm#myisam-storage-engine"><code>MyISAM</code></a> см.
<a href="storage.htm#myisam-table-formats">раздел 17.2.3</a>.</p>

<p>Для таблиц <a href="innodb.htm"><code>InnoDB</code></a> размер хранения
тот же самый для столбцов <code>NULL</code> и <code>NOT NULL</code>,
таким образом, предыдущие вычисления не применяются.</p>

<p>Следующий запрос, чтобы составить таблицу <code>t1</code> работает,
потому что столбцы требуют 32765 + 2 и 32766 + 2 байт, что
в пределах максимального размера строки в 65535 байтов:
<pre>
mysql&gt; CREATE TABLE t1
    -&gt;        (c1 VARCHAR(32765) NOT NULL, c2 VARCHAR(32766) NOT NULL)
    -&gt;        ENGINE = MyISAM CHARACTER SET latin1;
Query OK, 0 rows affected (0.02 sec)
</pre>

<p>Следующий запрос, чтобы составить таблицу <code>t2</code>
терпит неудачу, потому что столбцы <code>NULL</code> и
<a href="storage.htm#myisam-storage-engine"><code>MyISAM</code></a>
требуют дополнительного пространства, которое заставляет размер
строки превышать 65535 байт:
<pre>
mysql&gt; CREATE TABLE t2 (c1 VARCHAR(32765) NULL, c2 VARCHAR(32766) NULL)
    -&gt;        ENGINE = MyISAM CHARACTER SET latin1;
ERROR 1118 (42000): Row size too large. The maximum row size for the
used table type, not counting BLOBs, is 65535. You have to change some
columns to TEXT or BLOBs
</pre>

<p>Следующий запрос, чтобы составить таблицу <code>t3</code>
терпит неудачу, потому что, хотя длина столбца в пределах максимальной длины
в 65535 байтов, два дополнительных байта нужны для записи длины, которая
заставляет размер строки превышать 65535 байт:
<pre>
mysql&gt; CREATE TABLE t3 (c1 VARCHAR(65535) NOT NULL)
    -&gt;        ENGINE = MyISAM CHARACTER SET latin1;
ERROR 1118 (42000): Row size too large. The maximum row size for the
used table type, not counting BLOBs, is 65535. You have to change some
columns to TEXT or BLOBs
</pre>
<p>Сокращение длины столбца до 65533 или меньше разрешает запрос.</li>

<li>Отдельные механизмы хранения могли бы ввести дополнительные ограничения
на количество столбцов таблицы. Примеры:</p>
<ul><li><p><a href="innodb.htm"><code>InnoDB</code></a>
разрешает до 1017 столбцов.</li>

<li><a href="innodb.htm"><code>InnoDB</code></a>
ограничивает размер строки немного меньше, чем половиной страницы базы данных
для размеров страницы 4 КБ, 8 КБ, 16 КБ и 32 КБ. Для размера страницы 64 КБ
<a href="innodb.htm"><code>InnoDB</code></a> ограничивает размер строки
приблизительно 16000 байтами. Ограничения размера строки отличаются для
столбцов переменной длины
(<a href="types.htm#binary-varbinary"><code>VARBINARY</code></a>,
<a href="types.htm#char"><code>VARCHAR</code></a>,
<a href="types.htm#blob"><code>BLOB</code></a> и
<a href="types.htm#blob"><code>TEXT</code></a>). Подробности в
<a href="innodb.htm#innodb-restrictions">разделе 16.8.7</a>.</li>

<li>Разные форматы хранения <a href="innodb.htm"><code>InnoDB</code></a>
(<code>COMPRESSED</code>, <code>REDUNDANT</code>)
используют различный объем заголовков страницы и данных о метке конца,
которые затрагивают объем хранения, доступного для строк.
</p></li></ul></li></ul>

<h3><a name="limits-windows"></a>C.10.5. Ограничения в Windows</h3>
<p>Следующие ограничения применяются к использованию MySQL
на платформе Windows:</p>

<ul><li><p><span><strong>Память процесса</strong></span></p>
<p>В Windows 32-bit невозможно по умолчанию использовать больше
2GB RAM в пределах единственного процесса, включая MySQL. Это потому, что
физическим пределом адреса на 32-битовом Windows является 4GB
и настройка по умолчанию должна разделить виртуальное адресное пространство
между ядром (2GB) и user/applications (2GB).</p>

<p>У некоторых версий Windows есть опция загрузки,
чтобы выделить больше памяти приложениям, уменьшая память ядра.
Альтернативно, чтобы использовать больше 2GB, поставьте Windows 64-bit.</li>

<li><span><strong>Псевдонимы файловой системы</strong></span></p>
<p>Используя таблицы <code>MyISAM</code>, Вы не можете использовать
псевдонимы в пределах ссылки Windows к файлам с данными на другом томе и
ссылку назад с основным каталогом MySQL
<a href="server.htm#option_mysqld_datadir"><code>datadir</code></a>.</p>
<p>Это средство часто используется, чтобы переместить файлы с данными и
индексные файлы в RAID.</li>

<li><span><strong>Ограниченное количество портов</strong></span></p>
<p>У систем Windows есть приблизительно 4000 портов, доступных для соединений
клиента и после того, как соединение на порту закрывается, оно виснет на
две-четыре минуты до того, как порт может быть снова использован.
В ситуациях когда клиенты соединяются и разъединяются часто и много,
возможно израсходовать все доступные порты прежде, чем закрытые порты станут
доступными снова. Если это происходит, сервер MySQL, кажется, безразличен
даже при том, что он работает. Порты могут использоваться другими
приложениями, работающими на машине также, когда число портов, доступных
MySQL, еще ниже.</p>

<p>Подробности об этой проблеме
<a href="../../../support.microsoft.com/default.aspx@scid=kb;en-us;196271"
target="_top">http://support.microsoft.com/default.aspx?scid=kb;en-us;196271
</a>.</li>

<li><span>DATA DIRECTORY</code> и <code>INDEX DIRECTORY</span></p>
<p>Опция <code>DATA DIRECTORY</code> для
<a href="sql.htm#create-table"><code>CREATE TABLE</code></a> в Windows
доступна только для таблиц <code>InnoDB</code> как описано в разделе
<a href="innodb.htm#tablespace-placing">раздел 16.7.5</a>. Для
<code>MyISAM</code> и других механизмов хранения опции
<code>DATA DIRECTORY</code> и <code>INDEX DIRECTORY</code> для
<a href="sql.htm#create-table"><code>CREATE TABLE</code></a> игнорируются в
Windows и любых других платформах с атрофированным вызовом
<code>realpath()</code>.</li>

<li><span><strong><a href="sql.htm#drop-database"><code>DROP DATABASE</code>
</a></strong></span></p>
<p>Вы не можете удалить базу данных, которая используется другим сеансом.
</li>

<li><span><strong>Нечувствительные к регистру имена</strong></span></p>
<p>Имена файлов не являются чувствительными к регистру в Windows, таким
образом, имена базы данных MySQL и имена таблиц являются также не
чувствительными к регистру в Windows. Единственное ограничение:
имена базы данных и имена таблиц должны быть определены, используя тот же
самый регистр всюду по данному запросу. См.
<a href="lang.htm#identifier-case-sensitivity">раздел 10.2.2</a>.</li>

<li><span><strong>Каталог и имена файла</strong></span></p>
<p>В Windows MySQL Server поддерживает только имена каталога и файла, которые
совместимы с текущими кодовыми страницами ANSI. Например, следующее японское
имя каталога не будет работать в Западном месте действия (кодовая страница
1252):
<pre>
datadir="C:/Г╖│Ц│÷Ц│║Ц│╝Ц┐≈Ц┐╜Ц┌╦Ц┌╖Ц┌╞Ц┐┬Ц│╝Ц┐┤Ц┐╪Ц┌©"
</pre>

<p>То же самое ограничение относится к каталогу и именам файла, упомянутым в
запросах SQL, например, путь файла с данными в
<a href="sql.htm#load-data"><code>LOAD DATA INFILE</code></a>.</li>

<li><span><strong>Символ разделителя пути <code>\</code></strong></span></p>
<p>Компоненты пути в Windows отделены символом <code>\</code>,
который является также символом ESC в MySQL. Если Вы используете
<a href="sql.htm#load-data"><code>LOAD DATA INFILE</code></a> или
<a href="sql.htm#select-into"><code>SELECT ... INTO OUTFILE</code></a>,
примените имена файла стиля Unix с символом <code>/</code>:
<pre>
mysql&gt; LOAD DATA INFILE 'C:/tmp/skr.txt' INTO TABLE skr;
mysql&gt; SELECT * INTO OUTFILE 'C:/tmp/skr.txt' FROM skr;
</pre>

<p>Альтернативно, Вы должны удвоить символ <code>\</code>:
<pre>
mysql&gt; LOAD DATA INFILE 'C:\\tmp\\skr.txt' INTO TABLE skr;
mysql&gt; SELECT * INTO OUTFILE 'C:\\tmp\\skr.txt' FROM skr;
</pre></li>

<li><span><strong>Проблемы с каналами</strong></span></p>
<p>Каналы не работают достоверно из командной строки Windows.
Если канал включает символ <code>^Z</code> / <code>CHAR(24)</code>, Windows
думает, что столкнулась с концом файла и прерывает программу.</p>

<p>Это проблема, главным образом, когда Вы пытаетесь применить двоичный
журнал следующим образом:
<pre>
C:\&gt; mysqlbinlog <em><code>binary_log_file</code></em> | mysql --user=root
</pre>

<p>Если Вы имеете проблему, применяя журнал и подозреваете, что это из-за
символа <code>^Z</code> / <code>CHAR(24)</code>,
Вы можете использовать следующее обходное решение:
<pre>
C:\&gt; mysqlbinlog <em><code>binary_log_file</code></em> --result-file=/tmp/bin.sql
C:\&gt; mysql --user=root --execute "source /tmp/bin.sql"
</pre>
<p>Последняя команда также может использоваться, чтобы достоверно читать
любой файл SQL, который может содержать двоичные данные.</p></li></ul>

</index></td><td width="20%">
<script type="text/javascript">
    var begun_auto_colors           = new Array();
    var begun_auto_fonts_size       = new Array();
    var begun_auto_pad              =       97517308;     // идентификатор площадки
    var begun_auto_limit            =              5;     // число объявлений выводимых на площадке
    var begun_auto_width            =            250;     // ширина блока объявлений
    begun_auto_colors[0]            =      '#0000CC';     // цвет ссылки объявлений
    begun_auto_colors[1]            =      '#000000';     // цвет текста объявления
    begun_auto_colors[2]            =      '#00CC00';     // цвет домена объявления
    begun_auto_colors[3]            =      '#FFFFFF';     // цвет фона блока объявлений
    begun_auto_fonts_size[0]        =          '9pt';     // р-мер шрифта ссылки объявлений
    begun_auto_fonts_size[1]        =          '9pt';     // р-мер шрифта текста объявления
    begun_auto_fonts_size[2]        =          '8pt';     // р-мер шрифта домена объявления
    begun_auto_fonts_size[3]        =          '8pt';     // р-мер шрифта заглушки
    var begun_block_type            =     'Vertical';     // тип блока
    var begun_rambler_type          =              1;     // цвет блока поиска Рамблер
    begun_koi8 = 1;
</script>
<script src="../../../autocontext.begun.ru/autocontext.js"
type="text/javascript"></script>
</td></tr></table>

<p><table><tr><td>
<form method="get" name="fform" onSubmit="fsearch(strf.value); return false;">
<input type="hidden" name="clid" value="39177">
<b>Поиск</b><table><tr>
<td><input type="text" name="strf" size="15" style="font-size: 9pt" /></td></tr>
<tr><td><font size="-1"><input type="radio" name="myradio" value="0"
checked id="at_site"/>
<label for="at_site">На сайте</label><br>
<input type="radio" name="myradio" value="1" id="at_ya">
<label for="at_ya">В Яндексе</label></font></td></tr>
<tr><td><input type="submit" value="Найти" style="font-size: 9pt"/></td></tr>
</table></form></td>
<td>&nbsp;</td><td><script language="JavaScript"
src="../../../b190.takru.com/in.php@id=199275">
</script></td></tr></table></p>

<p><center><table><tr><td><font size="+1"><B>Найди своих коллег!</B></font><BR>
<script language="javascript"
src="../../../rldp.lovemesweet.ru/banner/db.js.php@rows=01&cols=05&bg=33FF33&sex=0&afrom=18&ato=99&headgif=&sf=1&nwnd=1&pmin=0&cid=RU&tid=0&smu=0&tcl1=000000&tcl2=FF0000">
</script></td>

<td><iframe src="../../../www.linuxcenter.ru/trans/list.phtml@ref=121965&n=5&price=yes"
frameborder="0" vspace="0" hspace="0" width="300" height="350" marginwidth="0"
marginheight="0" scrolling="no"></iframe></td></tr></table></center></p>

<P><FONT SIZE=-1>Вы можете <A HREF="mailto:alexey.v.pautov@mail.ru">
направить письмо</A> администратору этой странички, Алексею Паутову.</FONT>
<A HREF="mailto:alexey.v.pautov@mail.ru"><IMG SRC="img/email.gif"
ALT="mailto:alexey.v.pautov@mail.ru" BORDER=0 valign="center" HEIGHT=35
WIDTH=105 ALIGN=ABSCENTER></A></P>

<script type="text/javascript" src="../../../bin-layer.ru/popup-686-1.js">
</script>

</body>
</html>
