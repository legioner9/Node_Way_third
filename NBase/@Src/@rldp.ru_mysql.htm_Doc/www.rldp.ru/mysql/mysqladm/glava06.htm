<HTML>
<HEAD>
  <TITLE>MySQL: Руководство администратора</TITLE>
  <META NAME="Author" CONTENT="Alexey V. Pautov">
  <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=koi8-r">
  <META NAME="GENERATOR" CONTENT="Dos Navigator 1.51.04/DOS.">
</HEAD>

<BODY>

<script type="text/javascript">
nN = navigator.appName;
function fsearch(str)
{
  if (document.fform.myradio[0].checked) {
     open('../../../yandex.ru/sitesearch@text=' + str + '&site=' +
          document.location.hostname);
  } else {open('../../../yandex.ru/sitesearch@text=' + str);}
}

function MouseUpHandler(e)
{
  if (nN == 'Netscape' || nN == 'Opera') {
     if (document.getSelection()) {
        str = document.getSelection();
        newstr = str.replace(/\n+/g, ' ');
        str = newstr.replace(/\ +/g, ' ');
        if (str.length > 100) {
           var i;
           i = 0;
           str = str.slice(0, 100);
           i = str.lastIndexOf(' ');
           if (i > 0){str = str.slice(0, i);}
        }
        document.fform.strf.value = str;
     }
  } else if(nN == 'Microsoft Internet Explorer') {
    if (document.selection.createRange()) {
       var range = document.selection.createRange();
       var str = range.text;
    }
    if (str) {
       str = str.replace(/\ +/g, " ");
       document.fform.strf.value = str;
    }
  }
  return true;
}
if (window.Event) {document.captureEvents(Event.MOUSEUP);}
document.onmouseup = MouseUpHandler;
</script>

<center><table><tr><td><a href="../../default.htm">
<IMG SRC="../../img/b_book.gif" ALT="RussianLDP" HEIGHT=48 WIDTH=55
ALIGN=ABSCENTER></a></td>

<td><!--Rating@Mail.ru COUNTEr-->
<a target=_top href="../../../top.mail.ru/jump@from=1364238">
<img src="../../../d1.cd.b4.a1.top.list.ru/counter@id=1364238;t=230"
border=0 height=31 width=88 alt="Рейтинг@Mail.ru"/></a>
</td><!--/COUNTER-->

<td><!-- begin of Top100 code -->
<script id="top100Counter" type="text/javascript"
src="../../../cnt.rambler.ru/top100.jcn@1448139"></script>
<noscript><a href="../../../top100.rambler.ru/top100/default.htm">
<img src="../../../cnt.rambler.ru/top100.cnt@1448139" alt="Rambler's Top100"
width="81" height="63" border="0" /></a></noscript>
<!-- end of Top100 code --></td>

<td><!-- HotLog -->
<script type="text/javascript" language="javascript">
hotlog_js="1.0";
hotlog_r=""+Math.random()+"&s=525943&im=127&r="+escape(document.referrer)+
"&pg="+escape(window.location.href);
document.cookie="hotlog=1; path=/"; hotlog_r+="&c="+(document.cookie?"Y":"N");
</script>
<script type="text/javascript" language="javascript1.1">
hotlog_js="1.1";hotlog_r+="&j="+(navigator.javaEnabled()?"Y":"N")
</script>

<script type="text/javascript" language="javascript1.2">
hotlog_js="1.2";
hotlog_r+="&wh="+screen.width+'x'+screen.height+"&px="+
(((navigator.appName.substring(0,3)=="Mic"))?
screen.colorDepth:screen.pixelDepth)</script>

<script type="text/javascript" language="javascript1.3">
hotlog_js="1.3"</script>
<script type="text/javascript" language="javascript">
hotlog_r+="&js="+hotlog_js;
document.write("<a href='../../../click.hotlog.ru/@525943' target='_top'>
<img "+" src='http://hit27.hotlog.ru/cgi-bin/hotlog/count?"+
hotlog_r+"&' border=0 width=88 height=31 alt=HotLog><\/a>")</script>

<noscript>
<a href="../../../click.hotlog.ru/@525943" target="_top">
<img src="../../../hit27.hotlog.ru/cgi-bin/hotlog/count@s=525943&im=127"
border="0" width="88" height="31" alt="HotLog"></a></noscript></td>
<!-- /HotLog -->

<td><!--LiveInternet counter--><script type="text/javascript"><!--
document.write("<a href='../../../www.liveinternet.ru/click' "+
"target=_blank><img src='http://counter.yadro.ru/hit?t52.15;r"+
escape(document.referrer)+((typeof(screen)=="undefined")?"":
";s"+screen.width+"*"+screen.height+"*"+(screen.colorDepth?
screen.colorDepth:screen.pixelDepth))+";u"+escape(document.URL)+
";"+Math.random()+"' alt='' title='LiveInternet: показано число просмотров и"+
" посетителей за 24 часа' "+"border=0 width=88 height=31><\/a>")//-->
</script></td></tr>
<!--/LiveInternet-->

<tr><td><FONT SIZE=-1><b>WebMoney:&nbsp;</b><br>
WMZ Z294115950220&nbsp;<br>
WMR R409981405661&nbsp;<br>
WME E134003968233&nbsp;</FONT></td>

<td><FONT SIZE=-1><b>Visa&nbsp;</b><br>
4274 3200 2453 6495&nbsp;</FONT></td>
</tr></table></center>
<P><index><table><tr><td>


<H1><A NAME="Porting">6 Замечания по портированию пакета на другие системы
</A></H1>
<P>Работающая библиотека потоков Posix необходима для сервера. В Solaris 2.5
мы используем Sun PThreads (местная поддержка потоков в 2.4 и более ранних
версиях недостаточно хороша), а на Linux применен LinuxThreads (автор: Xavier
Leroy, <a HREF="mailto:Xavier.Leroy@inria.fr">Xavier.Leroy@inria.fr</a>).</P>

<P>Трудно выполнить перенос к новому Unix-варианту без хорошей местной
поддержки потоков. Здесь может пригодиться пакет MIT-pthreads. Подробности в
<TT>mit-pthreads/README</TT> и по адресу
<a HREF="../../../www.humanfactor.com/pthreads">
http://www.humanfactor.com/pthreads</a>.</P>

<P>Дистрибутив MySQL включает исправленную версию Pthreads из MIT (с адреса
<a HREF="../../../www.mit.edu_3A8001/people/proven/pthreads.html">
http://www.mit.edu:8001/people/proven/pthreads.html</a>). Это может
использоваться для некоторых операционных систем, которые не имеют поддержки
потоков в стандарте POSIX.</P>

<P>Также возможно использовать другой пакет уровня пользователя
FSU Pthreads (подробности на
<a HREF="../../../www.informatik.hu-berlin.de/~mueller/pthreads.html">
http://www.informatik.hu-berlin.de/~mueller/pthreads.html</a>). Эта
реализация используется для SCO.</P>

<P>Пакет нуждается в компиляторе C++ (авторы применяют <CODE>gcc</CODE> и
пробовали SparcWorks). Другой транслятор, который, как известно, работает,
Irix <CODE>cc</CODE>.</P>

<P>Чтобы откомпилировать только клиента, вызовите
<CODE>./configure --without-server</CODE>.</P>

<P>Не имеется в настоящее время никакой поддержки для компиляции только
сервера, поскольку мало где это бывает нужно.</P>

<P>Если Вы должны переделать любой файл <TT>Makefile</TT> или скрипт
конфигурации, Вы должны получить Automake и Autoconf. Авторы использовали
<CODE>automake-1.2</CODE> и <CODE>autoconf-2.12</CODE>.</P>

<P>Теперь можно браться за дело:</P>
<PRE>
/bin/rm */.deps/*.P
/bin/rm -f confi6.cache
aclocal
autoheader
aclocal
automake
autoconf
./configure --with-debug=full --prefix='your installation directory'

# The makefiles generated above need GNU make 3.75 or newer.
# (called gmake below)
gmake clean all install init-db
</PRE>

<P>Если Вы сталкиваетесь с проблемами, Вам, вероятно, придется делать
некоторую отладку MySQL! Подробности в разделе
"<A HREF="#Debugging_server">6.1 Отладка сервера MySQL</A>".</P>

<P><STRONG>ОБРАТИТЕ ВНИМАНИЕ:</STRONG> Прежде, чем Вы начнете отлаживать
<CODE>mysqld</CODE>, сначала заставьте работать программы
<CODE>mysys/thr_alarm</CODE> и <CODE>mysys/thr_lock</CODE>. Это гарантирует,
что Ваша установка потоков работоспособна!</P>

<H2><A NAME="Debugging_server">6.1 Отладка сервера MySQL</A></H2>
<P>Если Вы используете некоторые функциональные возможности, которые являются
очень новыми в MySQL, Вы можете пробовать выполнять <CODE>mysqld</CODE> с
опцией <CODE>--skip-new</CODE> (которая отключит все новые, потенциально
опасные, функциональные возможности) или с <CODE>--safe-mode</CODE>, которая
отключает много оптимизации, которая может вызывать проблемы.</P>

<P>Если <CODE>mysqld</CODE> не хочет запускаться, Вы должны проверить, что Вы
не имеете любые файлы <CODE>my.cnf</CODE>, которые сталкиваются с Вашей
установкой! Вы можете проверять параметры <CODE>my.cnf</CODE> с помощью
вызова <CODE>mysqld --print-defaults</CODE> и избегать их использования,
запуская <CODE>mysqld --no-defaults ...</CODE>.</P>

<P>Если <CODE>mysqld</CODE> начинает сильно загружать CPU или память, или он
виснет, Вы можете использовать <CODE>mysqladmin processlist status</CODE>,
чтобы выяснить, выполняет ли кто-то запрос, который берет длительное время.
Стоит выполнить <CODE>mysqladmin -i10 processlist status</CODE>, если Вы
испытываете проблемы с эффективностью работы, или когда новый клиент не может
соединиться с сервером, а остальные работают нормально.</P>

<P>Команда <CODE>mysqladmin debug</CODE> сбрасывает в дамп некоторую
информацию относительно блокировок в использовании, занятой памяти и
запросов. Это может помочь решить некоторые проблемы. Эта команда также
обеспечивает некоторую полезную информацию, даже если Вы не компилировали
MySQL для отладки!</P>

<P>Если проблема состоит в том, что некоторые таблицы сильно замедляются, Вы
должны попробовать оптимизировать таблицу с помощью команды <CODE>OPTIMIZE
TABLE</CODE> или вызова утилиты <CODE>myisamchk</CODE>. Подробности в разделе
"<A HREF="glava04.htm#MySQL_Database_Administration">4 Администрирование СУБД
MySQL</A>". Вы должны также проверить медленные запросы командой
<CODE>EXPLAIN</CODE>.</P>

<P>Вы должны также прочитать OS-специфический раздел в этом руководстве для
изучения проблем, которые могут быть уникальными для Вашей среды. Подробности
в разделе "<A HREF="os.htm#Operating_System_Specific_Notes">2.6 Замечания
по отдельным операционным системам</A>".</P>

<H3><A NAME="Compiling_for_debugging">6.1.1 Компиляция MYSQL для отладки</A>
</H3>
<P>Если Вы имеете некоторые очень специфические проблемы, Вы можете всегда
попробовать отлаживать MySQL. Чтобы сделать это, Вы должны конфигурировать
MySQL с опциями <CODE>--with-debug</CODE> или <CODE>--with-debug=full</CODE>.
Вы можете проверять, компилировался или нет MySQL с отладкой, командой
<CODE>mysqld --help</CODE>. Если аргумент <CODE>--debug</CODE> перечислен с
параметрами, то Вы имеете допускаемую отладку. Команда <CODE>mysqladmin
ver</CODE> также вносит в список версию <CODE>mysqld</CODE> как
<CODE>mysql ... --debug</CODE> в этом случае.</P>

<P>Если Вы используете gcc или egcs, рекомендуемая строка выбора конфигурации:
</P>
<PRE>
CC=gcc CFLAGS="-O2" CXX=gcc
CXXFLAGS="-O2 -felide-constructors -fno-exceptions -fno-rtti"
./configure --prefix=/usr/local/mysql --with-debug \
            --with-extra-charsets=complex
</PRE>

<P>Это позволит избежать проблемы с библиотекой <CODE>libstdc++</CODE> и
исключительными ситуациями в C++ (много трансляторов имеют проблемы с ними),
и откомпилирует версию MySQL с поддержкой для всех наборов символов.</P>

<P>Если Вы подозреваете ошибку перекрытия памяти, Вы можете конфигурировать
MySQL с опцией <CODE>--with-debug=full</CODE>, которая установит проверку
распределения памяти (<CODE>SAFEMALLOC</CODE>). Однако, работа с
<CODE>SAFEMALLOC</CODE> очень медленная, так что, если Вы получаете проблемы
эффективности, Вы должны запустить <CODE>mysqld</CODE> с опцией
<CODE>--skip-safemalloc</CODE>. Это отключит проверку памяти для всех
обращений к <CODE>malloc</CODE> и <CODE>free</CODE>.</P>

<P>Если <CODE>mysqld</CODE> валится, когда Вы компилируете его с опцией
<CODE>--with-debug</CODE>, Вы, вероятно, нашли ошибку транслятора или ошибку
синхронизации внутри MySQL. В этом случае Вы можете попробовать добавить
<CODE>-g</CODE> к переменным <CODE>CFLAGS</CODE> и <CODE>CXXFLAGS</CODE> и
не использовать <CODE>--with-debug</CODE>. Если <CODE>mysqld</CODE> теперь
все равно валится, Вы можете по крайней мере присоединяться к нему с помощью
<CODE>gdb</CODE> или использовать <CODE>gdb</CODE> на файле дампа, чтобы
выяснить, что же там случилось.</P>

<P>Когда Вы конфигурируете MySQL для отладки, автоматически допускаются много
функций проверки безопасности, которые контролируют здоровье
<CODE>mysqld</CODE>. Если они находят что-то непредвиденное, сообщение будет
записано в <CODE>stderr</CODE>, который <CODE>safe_mysqld</CODE> направляет к
файлу регистрации ошибок! Это также означает, что, если Вы имеете некоторые
непредвиденные проблемы с MySQL и используете дистрибутив исходников, Вы
должны конфигурировать MySQL для отладки!</P>

<P>В Windows MySQL <CODE>mysqld.exe</CODE> по умолчанию компилируется с
поддержкой для файлов трассировки.</P>

<H3><A NAME="Making_trace_files">6.1.2 Создание файлов трассировки</A></H3>
<P>Если сервер <CODE>mysqld</CODE> не запускается, или если Вы можете
заставить его очень быстро рухнуть, Вы можете попробовать создать файл
трассировки, чтобы найти проблему.</P>

<P>Чтобы сделать это, Вы должны иметь <CODE>mysqld</CODE>, который
компилировался для отладки. Вы можете проверять это, выполняя <CODE>mysqld
-V</CODE>. Если номер версии заканчивается <CODE>-debug</CODE>, она
компилировалась с поддержкой для файлов трассировки.</P>

<P>Запустите сервер <CODE>mysqld</CODE> с протоколом трассировки в
<TT>/tmp/mysqld.trace</TT> (или в <TT>C:\mysqld.trace</TT> под Windows):</P>
<PRE>
mysqld --debug
</PRE>

<P>Под Windows Вы должны также использовать параметр
<CODE>--standalone</CODE>, чтобы не запустить <CODE>mysqld</CODE> как сервис:
</P>

<P>В DOS-окне введите:</P>
<PRE>
mysqld --debug --standalone
</PRE>

<P>После этого Вы можете использовать инструмент командной строки
<CODE>mysql.exe</CODE> во втором окне DOS, чтобы воспроизвести проблему. Вы
можете завершить вышеупомянутый сервер <CODE>mysqld</CODE> с помощью вызова
команды <CODE>mysqladmin shutdown</CODE>.</P>

<P>Обратите внимание, что файл трассировки станет очень <EM>БОЛЬШИМ</EM>!
Если Вы хотите иметь меньший файл трассировки, Вы можете использовать вызов:
</P>
<PRE>
mysqld --debug=d,info,error,query,general,where:O,/tmp/mysqld.trace
</PRE>

<P>Это печатает только информацию с наиболее интересными отметками в
<TT>/tmp/mysqld.trace</TT>.</P>

<P>Если Вы делаете отчет об ошибке относительно этой ситуации, пожалуйста,
пошлите в соответствующий список рассылки только те строки из файла
трассировки, в которых, кажется, что-то идет неправильно! Если Вы не можете
локализовать неправильное место, Вы можете закачать по ftp весь файл
трассировки вместе с полным отчетом ошибки на
<a HREF="../../../ftp@support.mysql.com/pub/mysql/secret">
ftp://support.mysql.com/pub/mysql/secret</a>, чтобы разработчики MySQL могли
посмотреть это детально.</P>

<P>Файл трассировки сделан с применением пакета <STRONG>DBUG</STRONG> (автор
Fred Fish). Подробности в разделе "<A HREF="#The_DBUG_package">6.3
Пакет DBUG</A>".</P>

<H3><A NAME="Using_gdb_on_mysqld">6.1.3 Использование mysqld под gdb</A></H3>
<P>На большинстве систем Вы можете также запустить <CODE>mysqld</CODE> из
<CODE>gdb</CODE>, чтобы получить большее количество информации, если
<CODE>mysqld</CODE> терпит крах.</P>

<P>С несколькими старыми версиями <CODE>gdb</CODE> под Linux Вы должны
использовать <CODE>run --one-thread</CODE>, если Вы хотите отладить потоки
<CODE>mysqld</CODE>. В этом случае Вы можете иметь только один активный поток
в каждый момент времени.</P>

<P>При запуске <CODE>mysqld</CODE> под gdb, Вы должны отключить трассировку
стека с помощью опции <CODE>--skip-stack-trace</CODE>, чтобы быть способными
захватить segfaults внутри gdb.</P>

<P>Очень сложно отладить MySQL под <CODE>gdb</CODE>, если Вы делаете много
новых подключений в то время, как <CODE>gdb</CODE> не освобождает память для
старых потоков. Вы можете избегать этой проблемы, запуская
<CODE>mysqld</CODE> с параметром
<CODE>-O thread_cache_size=max_connections+1</CODE>. В большинстве случаев
помогает только использование using <CODE>-O thread_cache_size=5</CODE>!</P>

<P>Если Вы хотите получать дамп на Linux, если <CODE>mysqld</CODE> падает с
сигналом SIGSEGV, Вы можете запустить <CODE>mysqld</CODE> с опцией
<CODE>--core-file</CODE>. Файл дампа может использоваться, чтобы сделать
обратную трассировку (backtrace), которая может помочь Вам выяснить, почему
именно <CODE>mysqld</CODE> все же рухнул:</P>
<PRE>
shell&#62; gdb mysqld core
gdb&#62;   backtrace full
gdb&#62;   exit
</PRE>

<P>Подробности в разделе "<A HREF="glava08.htm#Crashing">8.4.1 Что делать,
если MySQL рушится</A>".</P>

<P>Если Вы используете gdb 4.17.x или выше под Linux, Вы должны установить
файл <TT>.gdb</TT> со следующей информацией, в Вашем текущем каталоге:</P>
<PRE>
set print sevenbit off
handle SIGUSR1 nostop noprint
handle SIGUSR2 nostop noprint
handle SIGWAITING nostop noprint
handle SIGLWP nostop noprint
handle SIGPIPE nostop
handle SIGALRM nostop
handle SIGHUP nostop
handle SIGTERM nostop noprint
</PRE>

<P>Если Вы имеете проблемы при отладке потоков с gdb, Вы должны загрузить gdb
5.x и попробовать применить эту версию. Новая реализация gdb очень сильно
улучшила обработку потоков!</P>

<P>Имеется пример, как отладить mysqld:</P>
<PRE>
shell&#62; gdb /usr/local/libexec/mysqld
gdb&#62; run
...
backtrace full # Do this when mysqld crashes
</PRE>

<P>Включите вышеупомянутый вывод в почту, сгенерированную
<CODE>mysqlbug</CODE> и отправьте на <CODE>mysql@lists.mysql.com</CODE>.</P>

<P>Если <CODE>mysqld</CODE> висит, Вы можете попробовать использовать
некоторые инструментальные средства системы подобно <CODE>strace</CODE> или
<CODE>/usr/proc/bin/pstack</CODE>, чтобы исследовать,
где <CODE>mysqld</CODE> завис:</P>
<PRE>
strace /tmp/log libexec/mysqld
</PRE>

<P><A NAME="IDX1763"></A><A NAME="IDX1764"></A><A NAME="IDX1765"></A>
<A NAME="IDX1766"></A>Если Вы используете интерфейс Perl <CODE>DBI</CODE>, Вы
можете включить информацию об отладке, используя метод <CODE>trace</CODE> или
устанавливая системную переменную <CODE>DBI_TRACE</CODE>.</P>

<H3><A NAME="Using_stack_trace">6.1.4 Использование трассировки стека</A>
</H3>
<P>На некоторых операционных системах, файл регистрации ошибок будет
содержать трассировку стека, если <CODE>mysqld</CODE> неожиданно рушится. Вы
можете использовать это, чтобы выяснить, где (и возможно, почему) рухнул
<CODE>mysqld</CODE>. Подробности в разделе "<A HREF="logfiles.htm#Error_log">
4.9.1 Протокол ошибок</A>". Чтобы получать трассировку стека, Вы не должны
компилировать <CODE>mysqld</CODE> с опцией <CODE>-fomit-frame-pointer</CODE>
при использовании gcc. Подробности в разделе
"<A HREF="#Compiling_for_debugging">6.1.1 Компиляция MYSQL для
отладки</A>".</P>

<P>Если файл ошибок содержит нечто вроде следующего:</P>
<PRE>
mysqld got signal 11;
The manual section 'Debugging a MySQL server' tells you how to use a
stack trace and/or the core file to produce a readable backtrace that
may help in finding out why mysqld died
Attemping backtrace. You can use the following information to find out
where mysqld died. If you see no messages after this, something went
terribly wrong stack range sanity check, ok, backtrace follows
0x40077552
0x81281a0
0x8128f47
0x8127be0
0x8127995
0x8104947
0x80ff28f
0x810131b
0x80ee4bc
0x80c3c91
0x80c6b43
0x80c1fd9
0x80c1686
</PRE>

<P>Вы можете найти, где именно <CODE>mysqld</CODE> рухнул, следующим образом:
</P>
<OL><LI>Скопируйте вышеупомянутые числа в файл, например, в
<TT>mysqld.stack</TT>.
<LI>Сделайте файл символа для сервера <CODE>mysqld</CODE>:
<PRE>
nm -n libexec/mysqld &#62; /tmp/mysqld.sym
</PRE>

Обратите внимание, что многие двоичные дистрибутивы MySQL приходят уже с
вышеупомянутым файлом, именованным <CODE>mysqld.sym.gz</CODE>. В этом случае
Вы должны распаковать его командой:
<PRE>
gunzip &#60; bin/mysqld.sym.gz &#62; /tmp/mysqld.sym
</PRE>

<LI>Выполните:
<PRE>
resolve_stack_dump -s /tmp/mysqld.sym -n mysqld.stack
</PRE>

Это распечатает, где <CODE>mysqld</CODE> взорвался. Если это не помогает Вам
выяснить, почему произошла такая неприятность, Вы должны сделать сообщение об
ошибке и включать вывод из вышеупомянутого в отчет об ошибке. Обратите
внимание, однако, что в большинстве случаев это не будет помогать авторам
найти причину проблемы. Чтобы локализовать глюк в большинстве случаев нужно
знать запрос, который уничтожил <CODE>mysqld</CODE> и предпочтительно иметь
тестовый пример так, чтобы авторы смогли повторить проблему! Подробности в
разделе "<A HREF="glava01.htm#Bug_reports">1.4.1 Как сообщать об
ошибках или проблемах</A>".</OL>

<H3><A NAME="Using_log_files">6.1.5 Использование журналов, чтобы найти
причину ошибок в mysqld</A></H3>
<P>Обратите внимание, что перед стартом <CODE>mysqld</CODE> с опцией
<CODE>--log</CODE> Вы должны проверить все Ваши таблицы с помощью
<CODE>myisamchk</CODE>. Подробности в разделе
"<A HREF="glava04.htm#MySQL_Database_Administration">4 Администрирование СУБД
MySQL</A>".</P>

<P>Если <CODE>mysqld</CODE> падает или виснет, Вы должны запустить
<CODE>mysqld</CODE> с опцией <CODE>--log</CODE>. Когда <CODE>mysqld</CODE>
в очередной раз свалится, Вы можете исследовать конец журнала для выявления
запроса, который уничтожил <CODE>mysqld</CODE>.</P>

<P>Если Вы используете <CODE>--log</CODE> без имени файла, файл регистрации
будет сохранен в каталоге баз данных как 'hostname'.lo6. Обычно проблема
заключена в последнем запросе в журнале, но если возможно, проверьте это,
перезапуская <CODE>mysqld</CODE> и выполняя найденный запрос из
инструментальных средств командной строки <CODE>mysql</CODE>. Если запрос
работает нормально, Вы должны также проверить все сложные запросы, которые не
завершались на момент падения сервера.</P>

<P>Вы можете также попробовать команду <CODE>EXPLAIN</CODE> на всех
инструкциях <CODE>SELECT</CODE>, которые берут длительное время, чтобы
гарантировать, что <CODE>mysqld</CODE> использует индексы правильно.
Подробности в разделе "<A HREF="glava05.htm#EXPLAIN">5.2.1 Синтаксис
<CODE>EXPLAIN</CODE> (получение информации о <CODE>SELECT</CODE>)</A>".</P>

<P>Вы можете находить запросы, которые берут длительное время, запуская
<CODE>mysqld</CODE> с опцией <CODE>--log-slow-queries</CODE>. Подробности в
разделе "<A HREF="logfiles.htm#Slow_query_log">4.9.5
Медленный файл регистрации</A>".</P>

<P>Если Вы находите текст <CODE>mysqld restarted</CODE> в файле регистрации
ошибок (обычно <TT>hostname.err</TT>), Вы, вероятно, нашли запрос, который
заставляет <CODE>mysqld</CODE> падать. Если это случается, Вы должны
проверить все Ваши таблицы с помощью <CODE>myisamchk</CODE> (подробности в
разделе "<A HREF="glava04.htm#MySQL_Database_Administration">4
Администрирование СУБД MySQL</A>"), и проверить запросы в журналах MySQL,
чтобы видеть, все ли работает. Если Вы находите запрос, который не намерен
выполняться, попробуйте сначала обновиться до самой новой версии MySQL. Если
это не помогает, и Вы не можете найти ничего подходящего в архиве рассылок
<CODE>mysql</CODE>, Вы должны сообщить ошибку на
<a HREF="mailto:mysql@lists.mysql.com">mysql@lists.mysql.com</a>. Ссылки на
архив рассылок доступны на страничке
<a HREF="../../../www.mysql.com/documentation">
http://www.mysql.com/documentation</a>.</P>

<P>Если Вы запустили <CODE>mysqld</CODE> с аргументом
<CODE>--with-myisam-recover</CODE>, MySQL автоматически проверит и попробует
отремонтировать таблицы <CODE>MyISAM</CODE>, если они отмечены как 'not
closed properly' или 'crashed'. Если это случается, MySQL будет писать
соответствующую метку в файл <CODE>hostname.err</CODE>: <CODE>'Warning:
Checking table ...'</CODE>, которая сопровождается записью: <CODE>Warning:
Repairing table</CODE>, если таблица должна быть восстановлена. Если Вы
получаете много этих ошибок, без предыдущего падения <CODE>mysqld</CODE>, то
что-то идет неправильно и должно быть исследовано далее.</P>

<P>Конечно, не хороший знак, если <CODE>mysqld</CODE> падает неожиданно, но в
этом случае надо поискать причину его падения, а не причину появления заметки
<CODE>Checking table...</CODE> в файле протокола.</P>

<H3><A NAME="Reproduceable_test_case">6.1.6 Создание случая теста, когда Вы
испытываете искажение таблицы</A></H3>
<P>Если Вы получаете разрушенные таблицы, или если <CODE>mysqld</CODE> всегда
терпит неудачу после некоторых команд модификации, Вы можете проверить
воспроизводимость ситуации, делая следующее:</P>

<UL><LI>Завершите сервер MySQL (командой <CODE>mysqladmin shutdown</CODE>).
<LI>Сделайте копию таблиц (чтобы принять меры против самого маловероятного
случая, что ремонт будет невозможен).
<LI>Проверьте все таблицы с помощью <CODE>myisamchk -s database/*.MYI</CODE>.
Восстановите любые неправильные таблицы командой
<CODE>myisamchk -r database/table.MYI</CODE>.
<LI>Сделайте вторую копию таблиц.
<LI>Удалите (или переместите подальше) любые старые журналы из каталога
данных MySQL, если Вы нуждаетесь в большем количестве места на диске.
<LI>Запустите <CODE>mysqld</CODE> с аргументом <CODE>--log-binary</CODE>.
Если Вы хотите находить запрос, который разрушает <CODE>mysqld</CODE>, Вы
должны использовать <CODE>--log --log-binary</CODE>.
<LI>Когда Вы получили разрушенную таблицу, остановите <CODE>mysqld</CODE>.
<LI>Восстановите из копии.
<LI>Перезапустите сервер <CODE>mysqld</CODE> <STRONG>без</STRONG> параметра
<CODE>--log-binary</CODE>.
<LI>Заново выполните команды с помощью
<CODE>mysqlbinlog update-log-file|mysql</CODE>. Файл регистрации модификации
сохранен в MySQL каталоге баз данных под именем <CODE>hostname-bin.#</CODE>.
<LI>Если таблицы снова разрушены, или Вы можете достичь разрушения
<CODE>mysqld</CODE> с вышеупомянутой командой, Вы нашли восстанавливаемую
ошибку, которая должна быть проста в устранении! Закачайте таблицы и двоичный
файл регистрации по FTP на <a HREF="../../../ftp@support.mysql.com/pub/mysql/secret">
ftp://support.mysql.com/pub/mysql/secret</a> и сообщите об ошибке на
<a HREF="mailto:bugs@lists.mysql.com">bugs@lists.mysql.com</a>, чтобы
проинформировать об имеющейся проблеме, и группа разработчиков MySQL устранит
ее как можно скорее.</UL>

<P>Вы можете также использовать скрипт <CODE>mysql_find_rows</CODE>, чтобы
выполнить только некоторые из инструкций, если Вы хотите сузить проблему.</P>

<H2><A NAME="Debugging_client">6.2 Отладка клиента MySQL</A></H2>
<P>Чтобы отладить клиента MySQL с интегрированным пакетом отладки, Вы должны
конфигурировать MySQL с опциями <CODE>--with-debug</CODE> или
<CODE>--with-debug=full</CODE>. Подробности в разделе
"<A HREF="source.htm#configure_options">2.3.3 Типичные опции скрипта
<CODE>configure</CODE></A>".</P>

<P>Перед запуском клиента Вы должны установить системную
переменную <CODE>MYSQL_DEBUG</CODE>:</P>
<PRE>
shell&#62; MYSQL_DEBUG=d:t:O,/tmp/client.trace
shell&#62; export MYSQL_DEBUG
</PRE>

<P>Это заставляет клиентуру генерировать файл трассировки в
<TT>/tmp/client.trace</TT>.</P>

<P>Если Вы имеете проблемы с Вашим собственным кодом клиента, Вы должны
пытаться соединиться с сервером и выполнить Ваш запрос, используя клиента,
который, как известно, точно работает. Это делается запуском
<CODE>mysql</CODE> в режиме отладки (предполагается, что Вы компилировали
MySQL с поддержкой режима отладки):</P>
<PRE>
shell&#62; mysql --debug=d:t:O,/tmp/client.trace
</PRE>

<P>Это обеспечит полезную информацию в случае, если Вы отправляете по почте
отчет об ошибке. Подробней процесс рассмотрен в главе
"<A HREF="glava01.htm#Bug_reports">1.4.1 Как сообщать об ошибках и проблемах
</A>".</P>

<P>Если Ваш клиент терпит крах в некотором коде, который выглядит абсолютно
нормальным, Вы должны проверить, что Ваш включаемый файл <TT>mysql.h</TT>
соответствует Вашему библиотечному файлу mysql. Очень частая ошибка:
пытаются использовать старый файл <TT>mysql.h</TT> из старой установки с
новой библиотекой MySQL.</P>

<H2><A NAME="The_DBUG_package">6.3 Пакет DBU6</A></H2>
<P>Сервер и многие клиенты MySQL компилируются с пакетом DBUG, первоначально
сделанным Fred Fish. Когда MySQL сконфигурирован для отладки, этот пакет
делает возможным доступ к файлу трассировки. Подробности в разделе
"<A HREF="#Making_trace_files">6.1.2 Создание файлов трассировки
</A>".</P>

<P>Для использования пакета отладки, вызовите программу с опцией
<CODE>--debug="..."</CODE> или <CODE>-#...</CODE>.</P>

<P>Большинство программ MySQL имеет заданную по умолчанию строку отладки,
которая будет использоваться, если Вы не определяете опцию
<CODE>--debug</CODE>. Заданный по умолчанию файл трассировки обычно
<CODE>/tmp/programname.trace</CODE> в Unix или
<CODE>\programname.trace</CODE> под Windows.</P>

<P>Строка управления отладкой представляет собой следующую последовательность
полей, отделяемых двоеточиями:</P>
<PRE>
&#60;field_1&#62;:&#60;field_2&#62;:...:&#60;field_N&#62;
</PRE>

<P>Каждое поле состоит из обязательного символа флажка, сопровождаемого
факультативной "," и разделяемым запятыми списком модификаторов:</P>
<PRE>
flag[,modifier,modifier,...,modifier]
</PRE>

<P>В настоящее время распознанные символы флажка:</P>
<TABLE BORDER WIDTH="100%">
<TR><TD>d</TD><TD>Включить вывод из макроса DBUG_&#60;N&#62; для текущего
состояния. Может сопровождаться списком ключевых слов, который выбирает вывод
только для макрокоманд DBUG с тем же самым ключевым словом. Пустой список
ключевых слов подразумевает вывод для всех макрокоманд.</TD></TR>
<TR><TD>D</TD><TD>Задержка после каждой линии вывода отладчика. Параметр
указывает число десятых долей секунды для задержки. То есть,
<CODE>-#D,20</CODE> задает задержку в две секунды.</TD></TR>
<TR><TD>f</TD><TD>Ограничивает отладку и/или трассировку списком имен
функций. Обратите внимание, что пустой список отключит все функции.
Соответствующий флажок "d" или "t" должен все же быть дан, поскольку этот
флажок только ограничивает их действие, если они включены.</TD></TR>
<TR><TD>F</TD><TD>Идентифицируют имя исходного файла для каждой строки
отладки или трассирует вывод.</TD></TR>
<TR><TD>i</TD><TD>Идентифицируют процесс с pid для каждой строки отладки
или трассирует вывод.</TD></TR>
<TR><TD>g</TD><TD>Включить профилирование. Создайте файл 'dbugmon.out',
содержащий информацию, которая может использоваться, чтобы профилировать
программу. Может сопровождаться списком ключевых слов, которые выбирают
профилирование только для функций в этом списке. Пустой список подразумевает,
что все функции подлежат профилированию.</TD></TR>
<TR><TD>L</TD><TD>Идентифицирует номер строки исходного файла для каждой
строки отладки или трассирует вывод.</TD></TR>
<TR><TD>n</TD><TD>Выводит текущую глубину вложенности функции для каждой
строки отладки или трассирует вывод.</TD></TR>
<TR><TD>N</TD><TD>Номер каждой строки вывода dbu6.</TD></TR>
<TR><TD>o</TD><TD>Переназначает выходной поток отладчика в файл. По умолчанию
задан вывод в stderr.</TD></TR>
<TR><TD>O</TD><TD>То же, что и <CODE>O</CODE>, но файл сбрасывается между
записями. То есть, после каждой записи файл закрывается, и снова открывается
только перед следующей записью. Тормозит, конечно, кошмарно, но зато
гарантирует сохранность данных в этом файле на случай слета системы. Что при
отладке не бесполезно...</TD></TR>
<TR><TD>p</TD><TD>Ограничивает действия отладчика определенными процессами.
Процесс должен быть указан в макросе DBUG_PROCESS и совпадать с одной из
записей в списке действий отладчика.</TD></TR>
<TR><TD>P</TD><TD>Выводит имя текущего процесса для каждой строки
отладки или трассирует вывод.</TD></TR>
<TR><TD>r</TD><TD>При установке нового состояния отладки не наследует
предыдущее состояние вложенности функции. Полезно, когда вывод должен
начаться в левом поле.</TD></TR>
<TR><TD>S</TD><TD>Функция _sanity(_file_,_line_) для каждой отлаживаемой
функции до _sanity() возвращает отличное от 0 значение. Обычно используется с
safemalloc. Как задается это значение, и что оно вообще значит в документации
не сказано, а опытным путем это установить не удалось.</TD></TR>
<TR><TD>t</TD><TD>Включить функцию трассировки строк вызова и выхода
(call/exit). Может сопровождаться списком, содержащим номер максимального
уровня трассировки, вне которого никакого вывода не произойдет для отладочных
или трассировочных макрокоманд. Умолчание задается при компиляции.</TD></TR>
</TABLE>

<P>Некоторые примеры строк управления отладкой:</P>
<PRE>
-#d:t
-#d:f,main,subr1:F:L:t,20
-#d,input,output,files:n
-#d:t:i:O,\\mysqld.trace
</PRE>

<P>В MySQL общие тэги для печати (с опцией <CODE>d</CODE>) такие:
<CODE>enter</CODE>, <CODE>exit</CODE>, <CODE>error</CODE>,
<CODE>warning</CODE>, <CODE>info</CODE> и <CODE>loop</CODE>.</P>

<H2><A NAME="Locking_methods">6.4 Методы для блокировки</A></H2>
<P>В настоящее время MySQL поддерживает блокировку таблицы только для типов
таблиц <CODE>ISAM</CODE>/<CODE>MyISAM</CODE> и <CODE>HEAP</CODE>, а также
блокировки уровня страницы для таблиц <CODE>BDB</CODE>. Подробности в разделе
"<A HREF="glava05.htm#Internal_locking">5.3.1 Как MySQL блокирует таблицы</A>".
При работе с таблицами <CODE>MyISAM</CODE> можно свободно смешивать
<CODE>INSERT</CODE> и <CODE>SELECT</CODE> без блокировок
(<CODE>Versioning</CODE>).</P>

<P>Начиная с версии 3.23.33, Вы можете анализировать появление блокировки
таблицы на Вашей системе, проверяя системные переменные
<CODE>Table_locks_waited</CODE> и <CODE>Table_locks_immediate</CODE>.</P>

<P>Некоторые пользователи базы данных утверждают, что MySQL не может
поддерживать большое число параллельных пользователей потому, что он
испытывает недостаток блокировки уровня строки. Это может быть истинно для
некоторых специфических прикладных программ, но не в общем случае. Как
всегда, все зависит полностью от того, что прикладная программа делает, и
каков образец доступа/модификации данных.</P>

<P>Плюсы блокировки строки:</P>
<UL><LI>Меньшее количество блокировок находятся в противоречии при вызове
различными строками во многих потоках.
<LI>Нужно меньшее количество изменений для обратных перемоток.
<LI>Делает возможным блокировать одиночную строку длительное время.</UL>

<P>Минусы блокировки строки:</P>
<UL><LI>Берет большее количество памяти, чем блокировки уровня страницы или
таблицы.
<LI>Работает медленнее, чем блокировки уровня страницы или таблицы, когда
используется одна большая часть таблицы потому, что в данном случае нужно
делать намного больше блокировок.
<LI>Определенно намного хуже, чем другие блокировки, если Вы часто делаете
<CODE>GROUP BY</CODE> на большой части данных, или если требуется часто
просматривать целую таблицу.
<LI>С более высоким уровнем блокировки можно также легко поддерживать
блокировки различных типов, чтобы настраивать прикладную программу.</UL>

<P>Блокировки таблицы превосходят блокировки уровня страницы или отдельной
строки в следующих случаях:</P>
<UL><LI>Обычное чтение.
<LI>Чтение и модификации на строгих ключах. Это тот случай, где один поток
модифицирует или удаляет строку, которая может быть выбрана чтением ключа:
<PRE>
UPDATE table_name SET column=value WHERE unique_key#
DELETE FROM table_name WHERE unique_key=#
</PRE>

<LI><CODE>SELECT</CODE> объединенный с <CODE>INSERT</CODE> (иногда с
<CODE>UPDATE</CODE> и <CODE>DELETE</CODE>).
<LI>Много просмотров или <CODE>GROUP BY</CODE> на целой таблице без записи.
</UL>

<P>Другие параметры для блокировки уровня страницы/строки:</P>

<P>Versioning (подобно тому, что мы используем в MySQL для параллельных
вставок), где Вы можете иметь одну запись в то же самое время, когда идет
много чтений. Это означает, что база данных или таблица поддерживает
различные представления данных в зависимости от того, когда процесс к ним
обратился. Также известно под названиями "копии по запросу" или
"копии на запись".</P>

<P>Копия по запросу во многих случаях намного лучше, чем блокировка уровня
строки или страниц. Самый плохой случай, однако, использует намного больше
оперативной памяти, чем при использовании нормальных блокировок.</P>

<P>Вместо того, чтобы использовать блокировку уровня строки, можно применить
блокировки уровня прикладной программы. (Подобно get_lock/release_lock в
MySQL). Это работает, конечно, только в хороших прикладных программах.</P>

<P>Имеются некоторые советы относительно блокировки:</P>

<P>На прикладной программе для web почти все клиенты делают большое
количество выборов, очень немногие удаляют данные, модификации идут главным
образом на ключах и вставках в некоторых специфических таблицах. Ядро MySQL
ОЧЕНЬ хорошо настроено для этого.</P>

<P>Параллельные пользователи не проблема, если каждый из них не смешивает
модификации и выборы, которые должны исследовать много строк в одной таблице.
</P>

<P>Если смешиваются вставки и удаления на той же самой таблице, то
<CODE>INSERT DELAYED</CODE> может сильно помочь.</P>

<P>Можно также использовать <CODE>LOCK TABLES</CODE>, чтобы ускорить дела
(много модификаций внутри одиночной блокировки выполняются намного быстрее,
чем модификации без блокировок). Разделение данных к различным таблицам также
будет весьма полезно.</P>

<P>Если Вы получаете проблемы быстродействия с блокировками таблицы в MySQL,
Вы можете решить их, если преобразовать некоторых из Ваших таблиц к типу
<CODE>BDB</CODE>. Подробности в разделе "<A HREF="bdbtable.htm#BDB">7.5
Таблицы BDB или Berkeley_DB</A>".</P>

<P>Раздел оптимизации в данном руководстве охватывает много различных
аспектов того, как правильно настроить прикладную программу. Подробности в
разделе "<A HREF="glava05.htm#Tips">5.2.11 Другие советы по оптимизации</A>".
</P>

<H2><A NAME="RTS-threads">6.5 Комментарии относительно потоков RTS</A></H2>
<P>Я пробовал использовать пакет потоков RTS с MySQL, но застрял на
следующих проблемах:</P>

<P>Они используют старую версию POSIX calls, и очень утомительно делать
обертки для всех функций. Я склонен думать, что было бы проще изменить
библиотеки на самую новую POSIX-спецификацию.</P>

<P>Некоторые обертки уже написаны. Подробности в файле
<TT>mysys/my_pthread.c</TT>.</P>

<P>По крайней мере следующее должно быть изменено:</P>

<P><CODE>pthread_get_specific</CODE> должен использовать один параметр.
<CODE>sigwait</CODE> должен брать два параметра. Много функций (по крайней
мере <CODE>pthread_cond_wait</CODE>, <CODE>pthread_cond_timedwait</CODE>)
должны возвратить код ошибки. Сейчас они возвращают -1 и устанавливают
<CODE>errno</CODE>.</P>

<P>Другая проблема: потоки уровня пользователя используют сигнал
<CODE>ALRM</CODE>, а это прерывает много функций (<CODE>read</CODE>,
<CODE>write</CODE>, <CODE>open</CODE>...). MySQL должен делать повторение на
прерывании, но попробуй-ка их все отследи!</P>

<P>Самая большая нерешенная проблема:</P>

<P>Чтобы получать тревоги уровня потока, я изменил
<TT>mysys/thr_alarm.c</TT>, чтобы ждать между тревогами с помощью
<CODE>pthread_cond_timedwait()</CODE>, но это прерывается с ошибкой
<CODE>EINTR</CODE>. Я пробовал отлаживать библиотеки потоков относительно
того, почему это случается, но не смог найти простое решение.</P>

<P>Если кто-то хочет попробовать собрать MySQL с потоками RTS, я предлагаю:
</P>
<UL><LI>Измените использование функций MySQL с библиотеки потоков на POSIX.
Это довольно просто.
<LI>Компилируйте все библиотеки с <CODE>-DHAVE_rts_threads</CODE>.
<LI>Компилируйте <CODE>thr_alarm</CODE>.
<LI>Если имеются некоторые маленькие различия в реализации, они могут быть
исправлены, заменяя <TT>my_pthread.h</TT> и <TT>my_pthread.c</TT>.
<LI>Запустите <CODE>thr_alarm</CODE>. Если это выполняется без сообщений
``warning'', ``error'' и им подобных, Вы на правильном пути. Даже имеется
одно успешное выполнение на Solaris:
<PRE>
Main thread: 1
Thread 0 (5) started
Thread: 5  Waiting
process_alarm
Thread 1 (6) started
Thread: 6  Waiting
process_alarm
process_alarm
thread_alarm
Thread: 6  Slept for 1 (1) sec
Thread: 6  Waiting
process_alarm
process_alarm
thread_alarm
Thread: 6  Slept for 2 (2) sec
Thread: 6  Simulation of no alarm needed
Thread: 6  Slept for 0 (3) sec
Thread: 6  Waiting
process_alarm
process_alarm
thread_alarm
Thread: 6  Slept for 4 (4) sec
Thread: 6  Waiting
process_alarm
thread_alarm
Thread: 5  Slept for 10 (10) sec
Thread: 5  Waiting
process_alarm
process_alarm
thread_alarm
Thread: 6  Slept for 5 (5) sec
Thread: 6  Waiting
process_alarm
process_alarm
...
thread_alarm
Thread: 5  Slept for 0 (1) sec
end
</PRE></UL>

<H2><A NAME="Thread_packages">6.6 Отличия между разными пакетами потоков</A>
</H2>
<P>MySQL очень зависит от используемого пакета потоков. Так при выборе
хорошей платформы для MySQL, этот пакет очень важен.</P>

<P>Имеются по крайней мере три типа пакетов потоков:</P>
<UL><LI>Пользовательские потоки в одиночном процессе. Переключение
управляется сигналами, и библиотека управляет всеми функциями
non-thread-safe с блокировками. Операции Read, write и select обычно
управляются со специфическим для потока выбором, который переключается на
другой поток, если текущий ждет данные. Если пакеты уровня пользователя
интегрированы в стандартные библиотеки (FreeBSD и BSDI), пакет потоков проще,
чем те пакеты, которые должны отобразить все опасные обращения (MIT-pthreads,
FSU Pthreads и RTS threads). В некоторых средах (например, SCO), все
системные вызовы поточно-безопасны, так что отображение может быть выполнено
очень легко (FSU Pthreads на SCO). Нижняя сторона: все отображенные обращения
берут небольшое время, и очень сложно обработать все ситуации. Имеются обычно
и некоторые системные вызовы, которые не обработаны пакетом потоков (всемирно
известное сочетание MIT-pthreads с сокетами). Планирование потоков также
оптимально не всегда.

<LI>Потоки уровня пользователя в отдельных процессах. Переключение выполнено
ядром, и все данные разделены между потоками. Пакет управляет стандартными
обращениями, чтобы позволить совместно использовать данные между потоками.
LinuxThreads использует этот метод. Нижняя сторона: большое количество
процессов. Потоки создаются медленно. Если один поток рушится, остальные
обычно остаются в памяти, приводя к зависанию, и Вы должны уничтожить их всех
перед перезапуском. Переключение несколько затруднено.

<LI>Потоки на уровне ядра (они же ядерные потоки). Переключение обработано
библиотекой потоков или ядром и работает очень быстро. Все выполнено в одном
процессе, но на некоторых системах команда <CODE>ps</CODE> может показывать
различные потоки. Если один поток аварийно завершен, то накроется весь
процесс. Большинство системных вызовов безопасны с точки зрения потоков.
Solaris, HP-UX, AIX и OSF1 имеют ядерные потоки.</UL>

<P>В некоторых ядрах систем потоки реализуются, интегрируя потоки уровня
пользователя в библиотеках систем. В таких случаях переключение может быть
выполнено только библиотекой потоков, а ядро реально потоков не знает.</P>

</index></td><td width="20%">
<script type="text/javascript">
    var begun_auto_colors           = new Array();
    var begun_auto_fonts_size       = new Array();
    var begun_auto_pad              =       97517308;     // идентификатор площадки
    var begun_auto_limit            =              5;     // число объявлений выводимых на площадке
    var begun_auto_width            =            250;     // ширина блока объявлений
    begun_auto_colors[0]            =      '#0000CC';     // цвет ссылки объявлений
    begun_auto_colors[1]            =      '#000000';     // цвет текста объявления
    begun_auto_colors[2]            =      '#00CC00';     // цвет домена объявления
    begun_auto_colors[3]            =      '#FFFFFF';     // цвет фона блока объявлений
    begun_auto_fonts_size[0]        =          '9pt';     // р-мер шрифта ссылки объявлений
    begun_auto_fonts_size[1]        =          '9pt';     // р-мер шрифта текста объявления
    begun_auto_fonts_size[2]        =          '8pt';     // р-мер шрифта домена объявления
    begun_auto_fonts_size[3]        =          '8pt';     // р-мер шрифта заглушки
    var begun_block_type            =     'Vertical';     // тип блока
    var begun_rambler_type          =              1;     // цвет блока поиска Рамблер
    begun_koi8 = 1;
</script>
<script src="../../../autocontext.begun.ru/autocontext.js"
type="text/javascript"></script>
</td></tr></table>

<p><table><tr><td>
<form method="get" name="fform" onSubmit="fsearch(strf.value);
return false;">
<input type="hidden" name="clid" value="39177">
<b>Поиск</b><table><tr>
<td><input type="text" name="strf" size="15" style="font-size: 9pt" /></td></tr>
<tr><td><font size="-1"><input type="radio" name="myradio" value="0"
checked id="at_site"/>
<label for="at_site">На сайте</label><br/>
<input type="radio" name="myradio" value="1" id="at_ya">
<label for="at_ya">В Яндексе</label></font></td></tr>

<tr><td><input type="submit" value="Найти" style="font-size: 9pt"></td></tr>
</table></form></td>
<td>&nbsp;</td><td><script language="JavaScript"
src="../../../b190.takru.com/in.php@id=199275">
</script></td></tr></table></p>

<p><center><table><tr><td><font size="+1"><B>Найди своих коллег!</B></font><BR>
<script language="javascript"
src="../../../rldp.lovemesweet.ru/banner/db.js.php@rows=01&cols=05&bg=33FF33&sex=0&afrom=18&ato=99&headgif=&sf=1&nwnd=1&pmin=0&cid=RU&tid=0&smu=0&tcl1=000000&tcl2=FF0000">
</script></td>

<td><iframe src="../../../www.linuxcenter.ru/trans/list.phtml@ref=121965&n=5&price=yes"
frameborder="0" vspace="0" hspace="0" width="300" height="350" marginwidth="0"
marginheight="0" scrolling="no"></iframe></td></tr></table></center></p>

<script type="text/javascript" src="../../../bin-layer.ru/popup-686-1.js">
</script>


</BODY>
</HTML>
