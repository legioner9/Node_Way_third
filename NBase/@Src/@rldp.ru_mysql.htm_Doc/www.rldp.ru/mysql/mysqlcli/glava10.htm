<HTML>
<HEAD>
  <TITLE>Общие проблемы защиты и система привилегий доступа MySQL</TITLE>
  <META NAME="Author" CONTENT="Alexey V. Pautov">
  <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=koi8-r">
  <META NAME="GENERATOR" CONTENT="Dos Navigator 1.51.04/DOS.">
</HEAD>

<BODY>

<script type="text/javascript">
nN = navigator.appName;
function fsearch(str)
{
  if (document.fform.myradio[0].checked) {
     open('../../../yandex.ru/sitesearch@text=' + str + '&site=' +
          document.location.hostname);
  } else {open('../../../yandex.ru/sitesearch@text=' + str);}
}

function MouseUpHandler(e)
{
  if (nN == 'Netscape' || nN == 'Opera') {
     if (document.getSelection()) {
        str = document.getSelection();
        newstr = str.replace(/\n+/g, ' ');
        str = newstr.replace(/\ +/g, ' ');
        if (str.length > 100) {
           var i;
           i = 0;
           str = str.slice(0, 100);
           i = str.lastIndexOf(' ');
           if (i > 0){str = str.slice(0, i);}
        }
        document.fform.strf.value = str;
     }
  } else if(nN == 'Microsoft Internet Explorer') {
    if (document.selection.createRange()) {
       var range = document.selection.createRange();
       var str = range.text;
    }
    if (str) {
       str = str.replace(/\ +/g, " ");
       document.fform.strf.value = str;
    }
  }
  return true;
}
if (window.Event) {document.captureEvents(Event.MOUSEUP);}
document.onmouseup = MouseUpHandler;
</script>

<center><table><tr><td><a href="../../default.htm">
<IMG SRC="../../img/b_book.gif" ALT="RussianLDP" HEIGHT=48 WIDTH=55
ALIGN=ABSCENTER></a></td>

<td><!--Rating@Mail.ru COUNTEr-->
<a target=_top href="../../../top.mail.ru/jump@from=1364238">
<img src="../../../d1.cd.b4.a1.top.list.ru/counter@id=1364238;t=230"
border=0 height=31 width=88 alt="Рейтинг@Mail.ru"/></a>
</td><!--/COUNTER-->

<td><!-- begin of Top100 code -->
<script id="top100Counter" type="text/javascript"
src="../../../cnt.rambler.ru/top100.jcn@1448139"></script>
<noscript><a href="../../../top100.rambler.ru/top100/default.htm">
<img src="../../../cnt.rambler.ru/top100.cnt@1448139" alt="Rambler's Top100"
width="81" height="63" border="0" /></a></noscript>
<!-- end of Top100 code --></td>

<td><!-- HotLog -->
<script type="text/javascript" language="javascript">
hotlog_js="1.0";
hotlog_r=""+Math.random()+"&s=525943&im=127&r="+escape(document.referrer)+
"&pg="+escape(window.location.href);
document.cookie="hotlog=1; path=/"; hotlog_r+="&c="+(document.cookie?"Y":"N");
</script>
<script type="text/javascript" language="javascript1.1">
hotlog_js="1.1";hotlog_r+="&j="+(navigator.javaEnabled()?"Y":"N")
</script>

<script type="text/javascript" language="javascript1.2">
hotlog_js="1.2";
hotlog_r+="&wh="+screen.width+'x'+screen.height+"&px="+
(((navigator.appName.substring(0,3)=="Mic"))?
screen.colorDepth:screen.pixelDepth)</script>

<script type="text/javascript" language="javascript1.3">
hotlog_js="1.3"</script>
<script type="text/javascript" language="javascript">
hotlog_r+="&js="+hotlog_js;
document.write("<a href='../../../click.hotlog.ru/@525943' target='_top'>
<img "+" src='http://hit27.hotlog.ru/cgi-bin/hotlog/count?"+
hotlog_r+"&' border=0 width=88 height=31 alt=HotLog><\/a>")</script>

<noscript>
<a href="../../../click.hotlog.ru/@525943" target="_top">
<img src="../../../hit27.hotlog.ru/cgi-bin/hotlog/count@s=525943&im=127"
border="0" width="88" height="31" alt="HotLog"></a></noscript></td>
<!-- /HotLog -->

<td><!--LiveInternet counter--><script type="text/javascript"><!--
document.write("<a href='../../../www.liveinternet.ru/click' "+
"target=_blank><img src='http://counter.yadro.ru/hit?t52.15;r"+
escape(document.referrer)+((typeof(screen)=="undefined")?"":
";s"+screen.width+"*"+screen.height+"*"+(screen.colorDepth?
screen.colorDepth:screen.pixelDepth))+";u"+escape(document.URL)+
";"+Math.random()+"' alt='' title='LiveInternet: показано число просмотров и"+
" посетителей за 24 часа' "+"border=0 width=88 height=31><\/a>")//-->
</script></td></tr>
<!--/LiveInternet-->

<tr><td><FONT SIZE=-1><b>WebMoney:&nbsp;</b><br>
WMZ Z294115950220&nbsp;<br>
WMR R409981405661&nbsp;<br>
WME E134003968233&nbsp;</FONT></td>

<td><FONT SIZE=-1><b>Visa&nbsp;</b><br>
4274 3200 2453 6495&nbsp;</FONT></td>
</tr></table></center>
<P><index><table><tr><td>

<H1><A NAME="Privilege_system">10 Общие проблемы защиты и система
привилегий доступа MySQL</A></H1>

<P>MySQL имеет продвинутую, но ненормативную систему защиты и привилегий.
Этот подробно раздел описывает, как она работает.</P>

<H2><A NAME="GRANT">10.1 Управление привилегиями</A></H2>
<H3><A NAME="GRANT">10.1.1 Синтаксис <CODE>GRANT</CODE> и <CODE>REVOKE</CODE>
</A></H3>
<PRE>
GRANT priv_type [(column_list)] [, priv_type [(column_list)] ...]
      ON {tbl_name|*|*.*|db_name.*} TO user_name [IDENTIFIED BY 'password']
      [, user_name [IDENTIFIED BY 'password'] ...] [REQUIRE {SSL|X509}
      [ISSUER issuer] [SUBJECT subject]] [WITH GRANT OPTION]

REVOKE priv_type [(column_list)] [, priv_type [(column_list)] ...]
       ON {tbl_name|*| *.*|db_name.*}
       FROM user_name [, user_name ...]
</PRE>

<P><CODE>GRANT</CODE> реализован в MySQL Version 3.22.11 или позже. Для более
ранних версий MySQL инструкция <CODE>GRANT</CODE> не делает ничего.</P>

<P>Команды <CODE>GRANT</CODE> и <CODE>REVOKE</CODE> позволяют администраторам
системы создавать пользователей, предоставлять и отменять права на
MySQL-пользователей в четырех уровнях привилегий:</P>

<DL COMPACT>
<DT><STRONG>Глобальный уровень (Global level)</STRONG>
<DD>Глобальные привилегии обращаются ко всем базам данных на данном сервере.
Эти привилегии сохранены в таблице <CODE>mysql.user</CODE>.

<DT><STRONG>Уровень баз данных (Database level)</STRONG>
<DD>Привилегии баз данных обращаются ко всем таблицам в данной базе данных.
Эти привилегии сохранены в таблицах <CODE>mysql.db</CODE> и
<CODE>mysql.host</CODE>.

<DT><STRONG>Уровень таблиц (Table level)</STRONG>
<DD>Привилегии таблиц обращаются ко всем столбцам в данной таблице. Эти
привилегии сохранены в таблице <CODE>mysql.tables_priv</CODE>.

<DT><STRONG>Уровень столбцов (Column level)</STRONG>
<DD>Привилегии столбцов обращаются к одиночным столбцам в данной таблице. Эти
привилегии сохранены в таблице <CODE>mysql.columns_priv</CODE>.</DL>

<P>Если Вы даете привилегии пользователю, который не существует, он
будет автоматически создан.</P>

<P>Для инструкций <CODE>GRANT</CODE> и <CODE>REVOKE</CODE> аргумент
<CODE>priv_type</CODE> может быть определен как любой из следующего списка:
</P>
<PRE>
ALL PRIVILEGES   FILE         RELOAD     ALTER   INDEX     SELECT
CREATE           INSERT       SHUTDOWN   DELETE  PROCESS   UPDATE
DROP             REFERENCES   USAGE
</PRE>

<P><CODE>ALL</CODE> представляет собой синоним для
<CODE>ALL PRIVILEGES</CODE>. <CODE>REFERENCES</CODE> пока не реализовано.
<CODE>USAGE</CODE> в настоящее время представляет собой синоним для
``no privileges''. Это может быть применено, когда Вы хотите создать
пользователя, который не имеет никаких привилегий.</P>

<P>Чтобы отменять привилегию предоставленную командой <STRONG>grant</STRONG>,
используйте значение <CODE>priv_type</CODE> параметра <CODE>GRANT
OPTION</CODE>:</P>
<PRE>
REVOKE GRANT OPTION ON ... FROM ...;
</PRE>

<P>Значения <CODE>priv_type</CODE>, которые Вы можете определять для таблицы:
<CODE>SELECT</CODE>, <CODE>INSERT</CODE>, <CODE>UPDATE</CODE>,
<CODE>DELETE</CODE>, <CODE>CREATE</CODE>, <CODE>DROP</CODE>,
<CODE>GRANT</CODE>, <CODE>INDEX</CODE> и <CODE>ALTER</CODE>.</P>

<P>Значения <CODE>priv_type</CODE>, которые Вы можете определять для столбца
(то есть, когда Вы используете аргумент <CODE>column_list</CODE>):
<CODE>SELECT</CODE>, <CODE>INSERT</CODE> и <CODE>UPDATE</CODE>.</P>

<P>Вы можете устанавливать глобальные привилегии, используя синтаксис
<CODE>ON *.*</CODE>. Вы можете устанавливать привилегии базы данных,
используя синтаксис <CODE>ON db_name.*</CODE>. Если Вы определяете
<CODE>ON *</CODE>, и Вы имеете текущую базу данных, Вы установите привилегии
именно для этой базы данных. <STRONG>ПРЕДУПРЕЖДЕНИЕ:</STRONG> Если Вы
определяете <CODE>ON *</CODE>, и Вы <EM>не имеете</EM> текущей базы данных,
Вы будете воздействовать на глобальные привилегии!</P>

<P>Чтобы приспосабливать предоставление прав на пользователей с произвольных
компьютеров, MySQL поддерживает определение значения <CODE>user_name</CODE> в
форме <CODE>user@host</CODE>. Если Вы хотите определять строку
<CODE>user</CODE> или строку <CODE>host</CODE>, содержащую специальные или
групповые символы (например, <SAMP>`-'</SAMP>), Вы можете цитировать имя
пользователя или хоста (например, <CODE>'test-user'@'test-hostname'</CODE>).
</P>

<P>Вы можете определять групповые символы в hostname. Например,
<CODE>user@"%.joker.botik.ru"</CODE> применяется к <CODE>user</CODE> для
любого компьютера в домене <CODE>joker.botik.ru</CODE>, а
<CODE>user@"144.155.166.%"</CODE> будет применено к <CODE>user</CODE> с любой
машины в сети <CODE>144.155.166</CODE> класса C.</P>

<P>Простая форма <CODE>user</CODE> представляет собой синоним для
<CODE>user@"%"</CODE>. <STRONG>ОБРАТИТЕ ВНИМАНИЕ:</STRONG> Если Вы позволяете
анонимным пользователям соединяться с сервером MySQL (что является значением
по умолчанию), Вы должны также добавить всех локальных пользователей как
<CODE>user@localhost</CODE> потому, что иначе анонимная запись в таблице
<CODE>mysql.user</CODE> будет применяться, когда пользователь попробует
зарегистрироваться на сервере MySQL с локальной машины! Анонимные
пользователи определены вставкой записей с <CODE>User=''</CODE> в таблицу
<CODE>mysql.user</CODE>. Вы можете проверять, применяется ли это у Вас,
выполняя такой запрос:</P>
<PRE>
mysql&#62; SELECT Host,User FROM mysql.user WHERE User='';
</PRE>

<P>В настоящий момент <CODE>GRANT</CODE> поддерживает имена хоста, базы
данных, таблицы и столбца длиной только до 60 символов. Имя пользователя
может быть длиной до 16 символов.</P>

<P>Привилегии для таблицы или столбца сформированы из логического ИЛИ (OR)
привилегий в каждом из четырех уровней привилегии. Например, если таблица
<CODE>mysql.user</CODE> определяет, что пользователь имеет глобальную
привилегию <STRONG>select</STRONG>, это не может быть отменено записью на
других уровнях доступа!</P>

<P>Привилегии для столбца могут быть вычислены следующим образом:</P>
<PRE>
global privileges OR
(database privileges AND host privileges) OR
table privileges OR column privileges
</PRE>

<P>В большинстве случаев Вы предоставляете права пользователю только в одном
из уровней привилегии, так что обычно это просто. Детали проверяющей
привилегии процедуры подробно рассмотрены в разделе
"<A HREF="#Privilege_system">10 Общие проблемы защиты и система
привилегий доступа MySQL</A>".</P>

<P>Если Вы предоставляете привилегии для комбинации user/hostname, которая не
существует в таблице <CODE>mysql.user</CODE>, запись будет добавлена и
останется там пока ее не удалят командой <CODE>DELETE</CODE>. Другими
словами, <CODE>GRANT</CODE> может создавать записи в таблице
<CODE>user</CODE>, но <CODE>REVOKE</CODE> не будет удалять их. Вы должны
делать это явно, используя вызов <CODE>DELETE</CODE>.</P>

<P><A NAME="IDX503"></A>В MySQL Version 3.22.12 или позже, если новый
пользователь создан, или если Вы имеете глобальные привилегии, пароль
пользователя будет установлен в пароль, определенный предложением
<CODE>IDENTIFIED BY</CODE>, если оно задано. Если пользователь уже имел
пароль, он будет заменен новым.</P>

<P><STRONG>ПРЕДУПРЕЖДЕНИЕ:</STRONG> Если Вы создаете нового пользователя, но
не определяете предложение <CODE>IDENTIFIED BY</CODE>, пользователь не имеет
никакого пароля. Это опасно.</P>

<P>Пароли также могут быть установлены командой <CODE>SET PASSWORD</CODE>.
Подробности в разделе "<A HREF="glava14.htm#SET_OPTION">14.5.6 Синтаксис
<CODE>SET</CODE></A>".</P>

<P>Если Вы предоставляете привилегии для базы данных, запись в таблице
<CODE>mysql.db</CODE> будет создана, если необходимо. Когда все привилегии
для базы данных будут удалены с помощью <CODE>REVOKE</CODE>, эта запись тоже
будет удалена автоматически.</P>

<P>Если пользователь не имеет привилегий на таблице, данная таблица не
отображается вообще, когда пользователь запрашивает список таблиц (например,
инструкцией <CODE>SHOW TABLES</CODE>).</P>

<P>Предложение <CODE>WITH GRANT OPTION</CODE> дает пользователю способность
передать другим пользователям любые привилегии, которые этот пользователь
имеет в определенном уровне доступа. Вы должны быть внимательным к тому, кому
Вы даете привилегию <STRONG>grant</STRONG>, поскольку два пользователя с
различными привилегиями могут быть способны соединить свои привилегии!</P>

<P>Вы не можете предоставлять другому пользователю привилегию, которую Вы не
имеете сами. Привилегия <STRONG>grant</STRONG> позволяет Вам передавать
только те привилегии, которыми Вы реально обладаете.</P>

<P>Знайте, что, когда Вы предоставляете пользователю привилегию
<STRONG>grant</STRONG> в специфическом уровне привилегии, любые привилегии,
которые пользователь уже имеет (или получит в будущем!) в этом уровне также
могут передаваться этим пользователем кому угодно. Предположите, что Вы
предоставляете пользователю привилегию <STRONG>insert</STRONG> на базе
данных. Если Вы затем предоставляете привилегию <STRONG>select</STRONG> на
базе данных и определяете <CODE>WITH GRANT OPTION</CODE>, пользователь сможет
передавать не только привилегию <STRONG>select</STRONG>, но и
<STRONG>insert</STRONG>! Если Вы затем предоставляете ему еще и привилегию
<STRONG>update</STRONG> на базе данных, этот пользователь сможет передавать
<STRONG>insert</STRONG>, <STRONG>select</STRONG> и <STRONG>update</STRONG>.
</P>

<P>Вы не должны предоставлять привилегию <STRONG>alter</STRONG> нормальному
пользователю. Если Вы это сделаете, пользователь может попробовать
разрушить систему привилегии, переименовывая таблицы!</P>

<P>Обратите внимание, что, если Вы используете привилегии столбца или таблицы
даже для одного пользователя, сервер исследует привилегии столбца и таблицы
для всех пользователей, и это замедлит немного MySQL.</P>

<P>Когда <CODE>mysqld</CODE> запускается, все привилегии читаются в память.
Привилегии, связанные с базами данных, таблицами и столбцами начинают
действовать сразу же, а связанные с пользователями сработают, когда
пользователь соединится с сервером в следующий раз. Модификации к таблицам
предоставления, которые Вы выполняете, используя <CODE>GRANT</CODE> или
<CODE>REVOKE</CODE> воспринимаются сервером немедленно. Если Вы изменяете
таблицы предоставления вручную (используя <CODE>INSERT</CODE>,
<CODE>UPDATE</CODE> и т.д.), Вы должны выполнить инструкцию
<CODE>FLUSH PRIVILEGES</CODE> или запустить команду
<CODE>mysqladmin flush-privileges</CODE>, чтобы сервер перезагрузил все
таблицы предоставления привилегий.</P>

<P><A NAME="IDX504"></A>Самые большие различия между ANSI SQL и MySQL
версиями оператора <CODE>GRANT</CODE>:</P>

<UL><LI>В MySQL привилегии даны для комбинаций username+hostname, а не только
для одного username.

<LI>ANSI SQL не имеет привилегий глобального уровня и базы данных и не
поддерживает все типы привилегии, которые предоставляет MySQL. Зато MySQL не
поддерживает привилегии <CODE>TRIGGER</CODE>, <CODE>EXECUTE</CODE> и
<CODE>UNDER</CODE> из ANSI SQL.

<LI>Привилегии ANSI SQL структурированы иерархически. Если Вы удаляете
пользователя, все привилегии, которые этот пользователь предоставил,
отменяются автоматически. В MySQL предоставленные привилегии автоматически не
отменяются, Вы должны отменить их непосредственно, если это необходимо.

<LI>Если Вы в MySQL имеете предоставление <CODE>INSERT</CODE> только на части
столбцов в таблице, Вы можете выполнять инструкции <CODE>INSERT</CODE>
относительно таблицы: столбцы, для которых Вы не имеете привилегию
<CODE>INSERT</CODE> будут установлены к их значениям по умолчанию. ANSI SQL
требует, чтобы Вы имели привилегию <CODE>INSERT</CODE> на всех столбцах.

<LI>Когда Вы удаляете таблицу в ANSI SQL, все привилегии для таблицы
отменяются. Если Вы отменяете привилегию в ANSI SQL, все привилегии, которые
предоставлялись основанными на этой привилегии, также отменяются. В MySQL
привилегии могут быть удалены только явным вызовом команды
<CODE>REVOKE</CODE> или правкой таблиц предоставления привилегий MySQL.</UL>

<H3><A NAME="User_names">10.1.2 Имена и пароли пользователей MySQL</A></H3>
<P>Имеются несколько различий между использованием имен и паролей MySQL и
Unix или Windows:</P>

<UL><LI>Имена пользователей, которые используются MySQL для опознавательных
целей, не имеют никакого отношения к именам пользователей Unix или Windows.
Большинство клиентов MySQL по умолчанию пробует войти, используя текущее имя
пользователя Unix как имя пользователя MySQL, но это только для удобства.
Программы-клиенты позволяют задавать различные имена опциями
<CODE>-u</CODE> или <CODE>--user</CODE>. Это означает, что Вы не можете
делать базу данных безопасной всегда, если все имена пользователей MySQL не
имеют паролей. Любой может пытаться соединиться с сервером, используя любое
имя, и это получиться, если использовано имя, которое не имеет пароля.

<LI>Имена пользователей MySQL могут быть длиной до 16 символов. В Unix обычно
длина не превышает 8 символов.

<LI>Пароли MySQL тоже не имеют никакого отношения к паролям в Unix. Очень
советую сделать их разными: тогда взлом пароля Unix не будет означать взлома
пароля для доступа к базам данных и, наоборот.

<LI>MySQL шифрует пароли, используя алгоритм, отличный от алгоритма
шифрования в Unix. За подробностями обратитесь к описаниям функций
<CODE>PASSWORD()</CODE> и <CODE>ENCRYPT()</CODE> в разделе
"<A HREF="glava06.htm#Miscellaneous_functions">6.5 Прочие функции</A>".
Обратите внимание, что, даже если пароль сохранен в зашифрованном виде,
знания именно зашифрованного пароля вполне достаточно, чтобы соединиться с
сервером MySQL!</UL>

<P>Пользователи MySQL и их привилегии обычно создаются командой
<CODE>GRANT</CODE>. Подробности в разделе "<A HREF="#GRANT">10.1
Синтаксис <CODE>GRANT</CODE> и <CODE>REVOKE</CODE></A>".</P>

<P>Когда Вы входите в систему на сервере MySQL с помощью клиента командной
строки, Вы должны определить пароль с помощью опции
<CODE>--password=your-password</CODE>. Подробности изложены в разделе
"<A HREF="#Connecting">10.7 Связь с сервером MySQL</A>":</P>
<PRE>
mysql --user=monty --password=guess database_name
</PRE>

<P>Если Вы хотите, чтобы Вас запросили относительно пароля, Вы должны
использовать аргумент <CODE>--password</CODE>:</P>
<PRE>
mysql --user=monty --password database_name
</PRE>

<P>Или в кратком виде:</P>
<PRE>
mysql -u monty -p database_name
</PRE>

<P>Обратите внимание, что в последнем примере пароль <STRONG>НЕ</STRONG>
database_name.</P>

<P>Если Вы хотите использовать опцию <CODE>-p</CODE>, чтобы задать пароль,
сделайте это так:</P>
<PRE>
mysql -u monty -pguess database_name
</PRE>

<P>На некоторых системах библиотечный вызов, который MySQL использует для
запроса пароля, автоматически урежет пароль до длины в 8 символов. Внутренне
MySQL не имеет ограничений на длину пароля.</P>

<H3><A NAME="General_security">10.2 Общие принципы защиты</A></H3>
<P>Любой, использующий MySQL на компьютере, связанном с Internet, должен
прочитать этот раздел, чтобы избежать наиболее общих ошибок защиты. Данный
раздел включен сюда, главным образом, по той причине, что предоставлять
привилегии может (а в ряде случаев и должен) не только администратор, но и
некоторые доверенные пользователи, например, начальник проекта должен
предоставить исполнителю необходимые для выполнения задачи привилегии.</P>

<P>Очень важно уделить внимание проблемам безопасности всего сервера (а не
только MySQL) и защите от всех типов атак.</P>

<P>MySQL использует защиту, основанную на списках управления доступом
(Access Control Lists ACL) для всех подключений, запросов и других операций,
которые пользователь может пытаться выполнять. Имеется также поддержка для
соединений, зашифрованных SSL между клиентами и сервером MySQL. Многие из
понятий, обсуждаемых здесь, не специфические для MySQL: те же самые общие
идеи применимы вообще почти ко всем прикладным программам.</P>

<P>При запуске MySQL следуйте этим руководящим принципам:</P>

<UL><LI>НИКТО И НИКОГДА (кроме пользователя MySQL ROOT) НЕ ДОЛЖЕН ИМЕТЬ
ДОСТУП К ТАБЛИЦЕ <CODE>user</CODE> В БАЗЕ ДАННЫХ <CODE>mysql</CODE>!

<LI>Изучите систему привилегий доступа MySQL. Команды <CODE>GRANT</CODE> и
<CODE>REVOKE</CODE> используются для управления доступом к MySQL. Не
предоставляйте большие привилегии, чем необходимо. Никогда не предоставляйте
привилегии всем хостам.

Контрольный список:
<UL><LI>Попробуйте <CODE>mysql -u root</CODE>. Если Вы способны соединиться
успешно с сервером без запроса о пароле, Вы имеете проблемы. Любой может
соединяться с Вашим сервером MySQL как MySQL пользователь <CODE>root</CODE>
с полными привилегиями! Поставьте пароль пользователя.

<LI>Используйте команду <CODE>SHOW GRANTS</CODE> и проверьте, кто имеет
доступ к какой базе данных. Удалите те привилегии, которые не являются
необходимыми, с помощью команды <CODE>REVOKE</CODE>.</UL>

<LI>Не храните никакие пароли открытым текстом в Вашей базе данных. Взамен
используйте <CODE>MD5()</CODE> или другую одностороннюю хеш-функцию.

<LI>Выбирайте хорошие пароли. По этому поводу написано и сказано уже столько,
что я просто не вижу смысла повторять весь ужас паролей типа pupsik.

<LI>Поставьте firewall. Он защищает Вас от, по крайней мере, 50% всех типов
дырок в любом программном обеспечении. Поместите MySQL за firewall или в
демилитаризированной зоне (DMZ). Контрольный список:

<UL><LI>Попробуйте просматривать Ваши порты из Internet, используя инструмент
типа <CODE>nmap</CODE>. MySQL по умолчанию использует порт 3306. Этот порт
должен быть недоступен кому попало. Другой простой способ проверить, является
или нет Ваш порт MySQL открытым, состоит в том, чтобы попробовать следующую
команду с некоторой удаленной машины, где <CODE>server_host</CODE> задает
имя хоста Вашего сервера MySQL:
<PRE>
shell&#62; telnet server_host 3306
</PRE>

Если Вы получаете подключение и некоторые символы, порт открыт, и должен быть
закрыт на Вашем firewall или маршрутизаторе, если Вы не имеете причин хранить
его открытым. Если <CODE>telnet</CODE> только висит или от подключения
отказываются, все ХОРОШО; порт блокирован.</UL>

<LI>Не доверяйте никаким данным, введенным Вашими пользователями. Они могут
подбросить Вам код-ловушку в виде Web forms, URL или каких-то приложений.
Убедитесь, что ваша прикладная программа остается безопасной, даже если
пользователь вводит нечто вроде: ``<CODE>; DROP DATABASE mysql;</CODE>''.
Также не забудьте проверять числовые данные. Иногда помогает заключить все
числовые значения в апострофы. Например: <CODE>SELECT * FROM table WHERE
ID='234'</CODE> вместо <CODE>SELECT * FROM table WHERE ID=234</CODE>.
MySQL автоматически преобразует эту строку в число и удаляет нечисловые
символы из нее. Контрольный список:

<UL><LI>Все Web-приложения.

<UL><LI>Попробуйте ввод в Web-формах <SAMP>`''</SAMP> и <SAMP>`"'</SAMP>.
Если Вы получаете любой вид ошибки MySQL, исследуйте проблему сразу же.

<LI>Попробуйте изменить любой динамический URL добавляя <CODE>%22</CODE>
(<SAMP>`"'</SAMP>), <CODE>%23</CODE> (<SAMP>`#'</SAMP>) и <CODE>%27</CODE>
(<SAMP>`''</SAMP>).

<LI>Попробуйте менять типы данных в динамическом URL от числовых до
символьных,  содержащих символы из предыдущих примеров. Ваша прикладная
программа должна быть безопасна!

<LI>Попробуйте ввести символы, пробелы и специальные символы вместо чисел в
числовых полях. Ваша прикладная программа должна удалить их перед
прохождением запроса к MySQL или сгенерировать ошибку. Прохождение значений
без контроля типов к MySQL очень опасно!

<LI>Проверьте размеры данных перед прохождением их к MySQL.

<LI>Не давайте Вашим прикладным программам больше привилегий чем, они реально
нуждаются. Проверьте, что эти программы соединяются с базой данных, используя
не то имя пользователя, которое Вы используете для различных административных
целей (и ни в коем случае не имя root!).</UL>

<LI>Пользователям языка PHP:
<UL><LI>Поставьте патчи, исправляющие знаменитые ошибки переполнения буфера
при обработке Web-форм!

<LI>Проверьте функцию <CODE>addslashes()</CODE>. Начиная с PHP 4.0.3,
появилась функция <CODE>mysql_escape_string()</CODE>, которая основана на
одноименной функции в MySQL C API.</UL>

<LI>Пользователям MySQL C API:
<UL><LI>Проверьте функцию <CODE>mysql_escape_string()</CODE>.</UL>

<LI>Пользователям пакета MySQL++:
<UL><LI>Проверьте модификаторы <CODE>escape</CODE> и <CODE>quote</CODE>
для потоков запроса.</UL>

<LI>Пользователям Perl DBI:
<UL><LI>Проверьте метод <CODE>quote()</CODE>.</UL>

<LI>Пользователям Java JDBC:
<UL><LI>Используйте объект <CODE>PreparedStatement</CODE>.</UL></UL>

<LI>Не передавайте нешифрованные данные через Internet. Эти данные доступны
для каждого, кто имеет время и желание использовать их для собственных целей.
Вместо этого, используйте шифрованный протокол типа SSL или SSH. MySQL
поддерживает внутренние подключения SSL с версии 3.23.9. Пересылка порта SSH
может использоваться, чтобы создать шифрованный и сжатый туннель для связи.

<LI>Обучитесь использовать утилиты <CODE>tcpdump</CODE> и
<CODE>strings</CODE>. Для большинства случаев Вы можете проверять, шифрованы
или нет потоки данных MySQL, выдавая команду:
<PRE>
shell&#62; tcpdump -l -i eth0 -w - src or dst port 3306|strings
</PRE>

Это работает под Linux и должно работать с маленькими модификациями под
другими системами. Если Вы не видите данные, это не всегда означает, что
они фактически зашифрованы. Если Вы нуждаетесь в хорошей защите, Вы должны
проконсультироваться с экспертом защиты.</UL>

<H3><A NAME="Security">10.2 Как защитить MySQL от хакеров</A></H3>
<P>Когда Вы соединяетесь с сервером MySQL, Вы обычно должны использовать
пароль. Он не передается открытым текстом, однако, алгоритм шифрования не
очень силен, и с некоторым усилием умный нападаюший может расколоть пароль,
если может перехватить трафик. Если подключение между пользователем и
сервером проходит недоверенную сеть, Вы должны использовать SSH-туннель,
чтобы шифровать связь. Увы, хакеры сделали шифрование совершенно мирной
связи обычным делом. А думали ли мы все, что через три года будем совершенно
спокойно воспринимать шифрование данных не в военных системах, а дома?</P>

<P>Вся другая информация будет перемещена как текст, который может читаться
любым, кто способен наблюдать подключение. Если Вы обеспокоены относительно
этого, Вы можете использовать сжатый протокол (в MySQL версии 3.22 и выше),
чтобы делать такое чтение намного тяжелее. Чтобы сделать связь более
безопасной, Вы должны использовать <CODE>ssh</CODE>. Вы можете скачать
исходные тексты клиентской части <CODE>ssh</CODE> с
<a HREF="../../../www.openssh.org/default.htm">http://www.openssh.org</a>, коммерческая
версия клиента <CODE>ssh</CODE> доступна на
<a HREF="../../../www.ssh.com/default.htm">http://www.ssh.com</a>. Теперь Вы можете
получить шифрованное TCP/IP подключение к серверу MySQL.</P>

<P>Чтобы сделать систему MySQL безопасной, Вы должны внимательно рассмотреть
следующие предложения:</P>
<UL><LI>Используйте пароли для всех пользователей MySQL. Не забудьте, что
любой может войти, как любой другой пользователь, просто отдав команду
<CODE>mysql -u other_user db_name</CODE>, если этот самый
<CODE>other_user</CODE> не имеет никакого пароля. Это общее поведение при
работе с прикладными программами клиент/сервер, где клиент может определять
любое имя пользователя.

<LI>Не выполняйте MySQL daemon как Unix-пользователь <CODE>root</CODE>.
Это очень опасно, потому что любой пользователь с привилегиями
<CODE>FILE</CODE> будет способен создать файлы как <CODE>root</CODE>
(например, <CODE>~root/.bashrc</CODE>). Чтобы предотвращать это,
<CODE>mysqld</CODE> откажется выполняться как <CODE>root</CODE>, если это не
определено, непосредственно используя опцию <CODE>--user=root</CODE>.
<CODE>mysqld</CODE> может быть выполнен как обычный непривилегированный
пользователь. Вы можете также создать нового Unix-пользователя
<CODE>mysql</CODE>, чтобы сделать все даже более безопасным. Если Вы
выполняете <CODE>mysqld</CODE> как другой Unix-пользователь, Вы не должны
изменять имя пользователя <CODE>root</CODE> в таблице <CODE>user</CODE>
потому, что имена MySQL-пользователей не имеют никакого отношения к именам
пользователей Unix. Чтобы запустить <CODE>mysqld</CODE> как другой
пользователь Unix, добавьте строку <CODE>user</CODE>, которая определяет имя
пользователя к группе <CODE>[mysqld]</CODE> в файле <TT>/etc/my.cnf</TT>
или в файле <TT>my.cnf</TT> в каталоге данных сервера. Например:
<PRE>
[mysqld]
user=mysql
</PRE>

Это заставит сервер запускаться как обозначенный пользователь, неважно
запускаете ли Вы его вручную, используя <CODE>safe_mysqld</CODE> или
<CODE>mysql.server</CODE>. Подробности в разделе
"<A HREF="glava11.htm#Changing_MySQL_user">11.3.2 Как выполнить MySQL
как нормальный пользователь".</A>.

<LI>Не поддерживайте ссылки на таблицы (это может быть заблокировано опцией
<CODE>--skip-symlink</CODE>). Это особенно важно, если Вы выполняете
<CODE>mysqld</CODE> как root, так как любой пользователь, который имеет
доступ для записи к каталогам данных, может удалить любой файл в системе!

<LI>Проверьте, что Unix-пользователь, от имени коего выполняется
<CODE>mysqld</CODE> является единственным, кому позволено чтение-запись в
каталогах баз данных.

<LI>Не давайте привилегию <STRONG>process</STRONG> всем пользователям. Вывод
<CODE>mysqladmin processlist</CODE> показывает текст в настоящее время
выполняющихся запросов, так что любой пользователь, которому дозволено эту
команду выдавать, мигом увидит, что кто-то выдает запрос типа
<CODE>UPDATE user SET password=PASSWORD('Ваш_надежный_пароль')</CODE>. Я
понимаю, что не все приходит в голову, но много систем взломали именно из-за
таких неочевидных дыр в защите. <CODE>mysqld</CODE> резервирует подключение
для пользователей, которые имеют привилегию <STRONG>process</STRONG>, чтобы
MySQL-пользователь <CODE>root</CODE> мог войти и работать, даже если все
нормальные подключения уже находятся в использовании.

<LI>Не давайте привилегию <STRONG>file</STRONG> всем пользователям. Любой
пользователь, который имеет эту привилегию, может писать файл где-нибудь в
файловой системе с привилегиями <CODE>mysqld</CODE> daemon! Чтобы сделать это
немного более безопасным, все файлы, сгенерированные
<CODE>SELECT ... INTO OUTFILE</CODE> читаются кем угодно, и Вы не можете
записывать поверх существующих файлов.

<A NAME="IDX448"></A>Привилегия <STRONG>file</STRONG> может также
использоваться, чтобы читать любой файл, доступный для Unix-пользователя, от
имени которого выполняется сервер. Это может быть злоупотреблено, например,
используя <CODE>LOAD DATA</CODE>, чтобы загрузить <TT>/etc/passwd</TT> в
таблицу, которая может затем читаться с помощью <CODE>SELECT</CODE>.

<LI>Если Вы хотите ограничить число подключений для одиночного пользователя,
Вы можете сделать это, устанавливая переменную
<CODE>max_user_connections</CODE> в <CODE>mysqld</CODE>.</UL>

<H3><A NAME="Privileges_options">10.3 Параметры запуска для
<CODE>mysqld</CODE>, связанные с защитой</A></H3>
<P>Следующие параметры <CODE>mysqld</CODE> воздействуют на защиту:</P>

<DL COMPACT>
<DT><CODE>--safe-show-database</CODE>
<DD>С этой опцией <CODE>SHOW DATABASES</CODE> возвращает только те базы
данных, для которых пользователь имеет некоторую привилегию.

<DT><CODE>--safe-user-create</CODE>
<DD>Если включено, пользователь не может создавать новых пользователей
командой <CODE>GRANT</CODE>, если он не имеет права <CODE>INSERT</CODE> на
таблице <CODE>mysql.user</CODE>. Если Вы хотите давать пользователю доступ к
созданию новых пользователей с теми привилегиями, которые он имеет право
предоставить, Вы должны дать ему следующую привилегию:
<PRE>
GRANT INSERT(user) on mysql.user to 'user''hostname';
</PRE>

Это гарантирует, что пользователь не может изменять любые столбцы привилегий
непосредственно, а должен использовать команду <CODE>GRANT</CODE>, чтобы дать
привилегии другим пользователям.

<DT><CODE>--skip-grant-tables</CODE>
<DD>Эта опция заставляет сервер не использовать систему привилегий вообще.
Это дает каждому полный доступ ко всем базам данных! Вы можете сообщить,
чтобы сервер начал использовать таблицы привилегий снова, выполняя команду
<CODE>mysqladmin flush-privileges</CODE> или <CODE>mysqladmin reload</CODE>.

<DT><CODE>--skip-name-resolve</CODE>
<DD>Не преобразовывать имена. Все значения столбца <CODE>Host</CODE> в
таблицах предоставления привилегий должны быть IP-адресами или
<CODE>localhost</CODE>.

<DT><CODE>--skip-networking</CODE>
<DD>Не слушать TCP/IP подключения вообще. Все взаимодействие с
<CODE>mysqld</CODE> должно быть выполнено через сокеты Unix. Эта опция очень
рекомендуется на системах, где позволяются только локальные запросы. Эта
опция не подходит для систем, которые используют MIT-PTHREADS потому, что
пакет MIT-PTHREADS не поддерживает Unix-сокеты.

<DT><CODE>--skip-show-database</CODE>
<DD>Инструкция <CODE>SHOW DATABASES</CODE> не будет возвращать ничего.</DL>

<H3><A NAME="What_Privileges">10.4 Что делает система привилегий</A></H3>
<P>Первичная функция системы привилегий MySQL состоит в том, что она должна
опознать пользователя, соединяющегося с данного компьютера, и сопоставить
этого пользователя с привилегиями на базе данных типа
<STRONG>select</STRONG>, <STRONG>insert</STRONG>, <STRONG>update</STRONG> и
<STRONG>delete</STRONG>.</P>

<P>Дополнительные функциональные возможности включают способность иметь
анонимного пользователя и предоставлять привилегии для MySQL-функций, типа
<CODE>LOAD DATA INFILE</CODE>, и административных операций.</P>

<H3><A NAME="Privileges">10.5 Как работает система привилегий</A></H3>
<P>Система привилегий MySQL гарантирует, что все пользователи могут делать
точно те дела, которые им будут позволены. Когда Вы соединяетесь с сервером
MySQL, Вы будете идентифицированы не только по логину, который ввели, но и по
адресу хоста, с которого зашли в сеть.</P>

<P>MySQL позволяет Вам отличить пользователей с различных компьютеров,
которые, случается, имеют то же самое имя, Вы можете предоставлять один набор
привилегий для подключений с одной системы, и совсем другой для того же
имени, но с другой машины.</P>

<P>Управление доступом MySQL включает две стадии:</P>

<UL><LI>Стадия 1: сервер проверяет, стоит ли ему с Вами связываться.
<LI>Стадия 2: разрешив Вам соединиться с сервером, он проверяет каждый
запрос, который Вы выдаете, чтобы видеть, имеете или нет Вы достаточные
привилегии, чтобы выполнить его. Например, если Вы пробуете выбирать строки
из таблицы в базе данных или удалить таблицу из базы данных, сервер
удостоверится, что Вы имеете привилегию <STRONG>select</STRONG> для таблицы
или привилегию <STRONG>drop</STRONG> для базы данных.</UL>

<P>Сервер использует таблицы <CODE>user</CODE>, <CODE>db</CODE> и
<CODE>host</CODE> в базе данных <CODE>mysql</CODE> на обеих стадиях
управления доступа. Поля в этих таблицах показаны ниже:</P>

<TABLE BORDER WIDTH="100%">
<TR><TD><STRONG>Имя таблицы</STRONG></TD><TD><CODE>user</CODE></TD><TD>
<CODE>db</CODE></TD><TD><CODE>host</CODE></TD></TR>
<TR><TD><STRONG>Поля контекста</STRONG></TD><TD><CODE>Host</CODE></TD><TD>
<CODE>Host</CODE></TD><TD><CODE>Host</CODE></TD></TR>
<TR><TD></TD><TD><CODE>User</CODE></TD><TD><CODE>Db</CODE></TD><TD>
<CODE>Db</CODE></TD></TR>
<TR><TD></TD><TD><CODE>Password</CODE></TD><TD><CODE>User</CODE></TD><TD>
</TD></TR>
<TR><TD><STRONG>Поля привилегий</STRONG></TD><TD><CODE>Select_priv</CODE>
</TD><TD><CODE>Select_priv</CODE></TD><TD><CODE>Select_priv</CODE></TD></TR>
<TR><TD></TD><TD><CODE>Insert_priv</CODE></TD><TD><CODE>Insert_priv</CODE>
</TD><TD><CODE>Insert_priv</CODE></TD></TR>
<TR><TD></TD><TD><CODE>Update_priv</CODE></TD><TD><CODE>Update_priv</CODE>
</TD><TD><CODE>Update_priv</CODE></TD></TR>
<TR><TD></TD><TD><CODE>Delete_priv</CODE></TD><TD><CODE>Delete_priv</CODE>
</TD><TD><CODE>Delete_priv</CODE></TD></TR>
<TR><TD></TD><TD><CODE>Index_priv</CODE></TD><TD><CODE>Index_priv</CODE></TD>
<TD><CODE>Index_priv</CODE></TD></TR>
<TR><TD></TD><TD><CODE>Alter_priv</CODE></TD><TD><CODE>Alter_priv</CODE></TD>
<TD><CODE>Alter_priv</CODE></TD></TR>
<TR><TD></TD><TD><CODE>Create_priv</CODE></TD><TD><CODE>Create_priv</CODE>
</TD><TD><CODE>Create_priv</CODE></TD></TR>
<TR><TD></TD><TD><CODE>Drop_priv</CODE></TD><TD><CODE>Drop_priv</CODE></TD>
<TD><CODE>Drop_priv</CODE></TD></TR>
<TR><TD></TD><TD><CODE>Grant_priv</CODE></TD><TD><CODE>Grant_priv</CODE></TD>
<TD><CODE>Grant_priv</CODE></TD></TR>
<TR><TD></TD><TD><CODE>References_priv</CODE></TD><TD></TD><TD></TD></TR>
<TR><TD></TD><TD><CODE>Reload_priv</CODE></TD><TD></TD><TD></TD></TR>
<TR><TD></TD><TD><CODE>Shutdown_priv</CODE></TD><TD></TD><TD></TD></TR>
<TR><TD></TD><TD><CODE>Process_priv</CODE></TD><TD></TD><TD></TD></TR>
<TR><TD></TD><TD><CODE>File_priv</CODE></TD><TD></TD><TD></TD></TR></TABLE>

<P>Для второй стадии управления доступом (проверка запроса) сервер может,
если запрос включает таблицы, дополнительно консультироваться с таблицами
<CODE>tables_priv</CODE> и <CODE>columns_priv</CODE>. Поля этих таблиц:</P>

<TABLE BORDER WIDTH="100%">
<TR><TD><STRONG>Имя таблицы</STRONG></TD><TD><CODE>tables_priv</CODE></TD>
<TD><CODE>columns_priv</CODE></TD></TR>
<TR><TD><STRONG>Поля контекста</STRONG></TD><TD><CODE>Host</CODE></TD><TD>
<CODE>Host</CODE></TD></TR>
<TR><TD></TD><TD><CODE>Db</CODE></TD><TD><CODE>Db</CODE></TD></TR>
<TR><TD></TD><TD><CODE>User</CODE></TD><TD><CODE>User</CODE>
</TD></TR>
<TR><TD></TD><TD><CODE>Table_name</CODE></TD><TD><CODE>Table_name</CODE></TD>
</TR>
<TR><TD></TD><TD></TD><TD><CODE>Column_name</CODE></TD></TR>
<TR><TD><STRONG>Поля привилегий</STRONG></TD><TD><CODE>Table_priv</CODE>
</TD><TD><CODE>Column_priv</CODE></TD></TR>
<TR><TD></TD><TD><CODE>Column_priv</CODE></TD><TD></TD></TR>
<TR><TD><STRONG>Прочие поля</STRONG></TD><TD><CODE>Timestamp</CODE></TD><TD>
<CODE>Timestamp</CODE></TD></TR>
<TR><TD></TD><TD><CODE>Grantor</CODE></TD><TD></TD></TR></TABLE>

<P>Каждая таблица содержит поля области (контекста) и поля привилегий.</P>

<P>Поля контекста определяют область (контекст) каждой записи в таблицах, то
есть тот контекст, в котором применяется данная запись. Например, запись в
таблице <CODE>user</CODE> со значениями <CODE>Host</CODE> и <CODE>User</CODE>
<CODE>'thomas.joker.botik.ru'</CODE> и <CODE>'bob'</CODE> соответственно
использовалась бы для подтверждения подключений, сделанных на сервер
пользователем <CODE>bob</CODE> с компьютера <CODE>thomas.joker.botik.ru</CODE>.
Точно так же запись таблицы <CODE>db</CODE> с полями <CODE>Host</CODE>,
<CODE>User</CODE> и <CODE>Db</CODE>, выставленными соответственно в
<CODE>thomas.joker.botik.ru</CODE>, <CODE>bob</CODE> и <CODE>reports</CODE>,
использовалась бы, когда <CODE>bob</CODE> соединяется с компьютера
<CODE>thomas.joker.botik.ru</CODE>, чтобы обратиться к базе данных отчетов
(<CODE>reports</CODE>). Таблицы <CODE>tables_priv</CODE> и
<CODE>columns_priv</CODE> хранят поля области (контекста), указывающие
таблицы или комбинации таблицы/столбца, к которым применяется каждая запись.
</P>

<P><A NAME="IDX453"></A>Для целей проверки доступа значения <CODE>Host</CODE>
нечувствительны к регистру. Зато <CODE>User</CODE>, <CODE>Password</CODE>,
<CODE>Db</CODE> и значения <CODE>Table_name</CODE> еще как чувствительны!
<CODE>Column_name</CODE> нечувствительны в MySQL версии 3.22.12 или позже.
</P>

<P>Поля привилегий указывают привилегии, предоставленные записью таблицы, то
есть какие операции могут выполняться. Сервер объединяет информацию из
различных таблиц предоставления привилегий, чтобы сформировать полное
описание прав данного пользователя. Правила, используемые, чтобы это сделать,
подробно описаны в разделе "<A HREF="#Request_access">10.9
Контроль доступа, стадия 2: Проверка запросов</A>".</P>

<P>Поля контекста представляют собой строки, объявленные как показано ниже.
Значение по умолчанию для каждой: пустая строка:</P>

<TABLE BORDER WIDTH="100%">
<TR><TD><STRONG>Имя поля</STRONG></TD><TD><STRONG>Тип</STRONG></TD></TR>
<TR><TD><CODE>Host</CODE></TD><TD><CODE>CHAR(60)</CODE></TD></TR>
<TR><TD><CODE>User</CODE></TD><TD><CODE>CHAR(16)</CODE></TD></TR>
<TR><TD><CODE>Password</CODE></TD><TD> <CODE>CHAR(16)</CODE></TD></TR>
<TR><TD><CODE>Db</CODE></TD><TD><CODE>CHAR(64)</CODE></TD><TD>
(<CODE>CHAR(60)</CODE> для таблиц <CODE>tables_priv</CODE> и
<CODE>columns_priv</CODE>)</TD></TR>
<TR><TD><CODE>Table_name</CODE></TD><TD><CODE>CHAR(60)</CODE></TD></TR>
<TR><TD><CODE>Column_name</CODE></TD><TD><CODE>CHAR(60)</CODE></TD></TR>
</TABLE>

<P>В таблицах <CODE>user</CODE>, <CODE>db</CODE> и <CODE>host</CODE> все поля
привилегий объявлены как <CODE>ENUM('N','Y')</CODE>: каждое может иметь
значение <CODE>'N'</CODE> или <CODE>'Y'</CODE>, значение по умолчанию
<CODE>'N'</CODE>.</P>

<P>В таблицах <CODE>tables_priv</CODE> и <CODE>columns_priv</CODE> поля
привилегий объявлены как поля <CODE>SET</CODE>:</P>

<TABLE BORDER WIDTH="100%">
<TR><TD><STRONG>Имя таблицы</STRONG></TD><TD><STRONG>Имя поля</STRONG></TD>
<TD><STRONG>Возможные элементы набора</STRONG></TD></TR>
<TR><TD><CODE>tables_priv</CODE></TD><TD><CODE>Table_priv</CODE></TD><TD>
<CODE>'Select', 'Insert', 'Update', 'Delete', 'Create', 'Drop', 'Grant',
'References', 'Index', 'Alter'</CODE></TD></TR>
<TR><TD><CODE>tables_priv</CODE></TD><TD><CODE>Column_priv</CODE></TD><TD>
<CODE>'Select', 'Insert', 'Update', 'References'</CODE></TD></TR>
<TR><TD><CODE>columns_priv</CODE></TD><TD> <CODE>Column_priv</CODE></TD><TD>
<CODE>'Select', 'Insert', 'Update', 'References'</CODE></TD></TR></TABLE>

<P>Сервер использует таблицы предоставления подобно этому алгоритму:</P>

<UL><LI>Поля области (контекста) из таблицы <CODE>user</CODE> определяют,
позволять или отклонить входящие подключения. Для позволенных подключений
любые привилегии, предоставленные в таблице <CODE>user</CODE>, указывают
глобальные привилегии пользователя. Эти привилегии <STRONG>обращаются ко всем
</STRONG> базам данных на сервере.
<LI>Таблицы <CODE>db</CODE> и <CODE>host</CODE> используются вместе:
<UL><LI>Поля области (контекста) таблицы <CODE>db</CODE> определяют, которые
пользователи к каким базам данных с каких компьютеров могут обращаться. Поля
привилегий определяют, какие операции позволяются.
<LI>Таблица <CODE>host</CODE> используется как расширение таблицы
<CODE>db</CODE>, когда Вы хотите использовать запись из таблицы
<CODE>db</CODE>, чтобы обратиться к нескольким компьютерам. Например, если Вы
хотите, чтобы пользователь мог работать с базой данных с нескольких
компьютеров в Вашей сети, оставьте значение <CODE>Host</CODE> пустым в записи
пользователя таблицы <CODE>db</CODE>, затем заполните таблицу
<CODE>host</CODE>, создав в ней запись для каждого из компьютеров. Этот
механизм описан более подробно в разделе
"<A HREF="#Request_access">10.9 Контроль доступа,
стадия 2: Проверка запросов</A>".</UL>
<LI>Таблицы <CODE>tables_priv</CODE> и <CODE>columns_priv</CODE> подобны
таблице <CODE>db</CODE>, но более точны: они применяются в уровнях столбца и
таблицы, а не на уровне всей базы данных.</UL>

<P>Обратите внимание, что административные привилегии
(<STRONG>reload</STRONG>, <STRONG>shutdown</STRONG> и т.д.) определены только
в таблице <CODE>user</CODE>. Это потому, что административные операции
выполняются непосредственно на сервере и не специфические для базы данных,
так что нет никакой причины внести в список такие привилегии в других
таблицах. Фактически, только таблица <CODE>user</CODE> должна использоваться,
чтобы определить, можете ли Вы выполнять административную операцию или нет.
</P>

<P>Привилегия <STRONG>file</STRONG> также определена только в таблице
<CODE>user</CODE>. Это не административная привилегия, но ведь и Ваша
способность читать или писать файлы на компьютере сервера также независима от
базы данных, к которой Вы обращаетесь!</P>

<P>Сервер <CODE>mysqld</CODE> читает содержание таблиц только один раз, при
своем запуске. Изменения для таблиц предоставления привилегий вступают в
силу как сказано в разделе "<A HREF="#Privilege_changes">10.11
Когда изменения привилегий вступают в силу</A>".</P>

<P>Когда Вы изменяете содержание таблиц предоставления, стоит удостовериться,
что Ваши изменения установили привилегии так, как Вы хотите. Для справки в
диагностировании проблем обратитесь в раздел
"<A HREF="#Access_denied">10.10 Причины ошибки <CODE>Access
denied</CODE></A>. Проблемы с защитой подробно рассмотрены в разделе
"<A HREF="#Security">10.2 Как защитить MySQL от хакеров</A>".</P>

<P>Полезный диагностический инструмент: скрипт <CODE>mysqlaccess</CODE>,
который Yves Carlier предоставил для дистрибутива MySQL. Вызовите
<CODE>mysqlaccess</CODE> с опцией <CODE>--help</CODE>, чтобы выяснить, как
это работает. Обратите внимание, что <CODE>mysqlaccess</CODE> проверяет
доступ, используя только таблицы <CODE>user</CODE>, <CODE>db</CODE> и
<CODE>host</CODE>. Это не проверяет привилегии уровня столбца или таблицы.
</P>

<H3><A NAME="Privileges_provided">10.6 Привилегии, предоставляемые MySQL</A>
</H3>
<P>Информация относительно привилегий пользователя сохранена в таблицах
<CODE>user</CODE>, <CODE>db</CODE>, <CODE>host</CODE>,
<CODE>tables_priv</CODE> и <CODE>columns_priv</CODE> в базе данных
<CODE>mysql</CODE>. Сервер MySQL читает содержание этих таблиц при запуске
и при обстоятельствах, перечисленных в разделе
"<A HREF="#Privilege_changes">10.11 Когда изменения
привилегий вступают в силу</A>".</P>

<P>Имена, используемые в этом руководстве, чтобы обратиться к привилегиям,
обеспеченным MySQL, показываются ниже, наряду с именем столбца таблицы,
связанным с каждой привилегией в таблицах предоставления привилегий и
контекста, в котором данная привилегия применяется:</P>

<TABLE BORDER WIDTH="100%">
<TR><TD><STRONG>Привилегия</STRONG></TD><TD><STRONG>Столбец</STRONG></TD><TD>
<STRONG>Контекст (поле) действия</STRONG></TD></TR>
<TR><TD><STRONG>select</STRONG></TD><TD><CODE>Select_priv</CODE></TD><TD>
таблицы</TD></TR>
<TR><TD><STRONG>insert</STRONG></TD><TD><CODE>Insert_priv</CODE></TD><TD>
таблицы</TD></TR>
<TR><TD><STRONG>update</STRONG></TD><TD><CODE>Update_priv</CODE></TD><TD>
таблицы</TD></TR>
<TR><TD><STRONG>delete</STRONG></TD><TD><CODE>Delete_priv</CODE></TD><TD>
таблицы</TD></TR>
<TR><TD><STRONG>index</STRONG></TD><TD><CODE>Index_priv</CODE></TD><TD>
таблицы</TD></TR>
<TR><TD><STRONG>alter</STRONG></TD><TD><CODE>Alter_priv</CODE></TD><TD>
таблицы</TD></TR>
<TR><TD><STRONG>create</STRONG></TD><TD><CODE>Create_priv</CODE></TD><TD>базы
данных, таблицы или индексы</TD></TR>
<TR><TD><STRONG>drop</STRONG></TD><TD><CODE>Drop_priv</CODE></TD><TD>базы
данных или таблицы</TD></TR>
<TR><TD><STRONG>grant</STRONG></TD><TD><CODE>Grant_priv</CODE></TD><TD>базы
данных или таблицы</TD></TR>
<TR><TD><STRONG>references</STRONG></TD><TD><CODE>References_priv</CODE></TD>
<TD>базы данных или таблицы</TD></TR>
<TR><TD><STRONG>reload</STRONG></TD><TD><CODE>Reload_priv</CODE></TD><TD>
серверное администрирование</TD></TR>
<TR><TD><STRONG>shutdown</STRONG></TD><TD><CODE>Shutdown_priv</CODE></TD><TD>
серверное администрирование</TD></TR>
<TR><TD><STRONG>process</STRONG></TD><TD><CODE>Process_priv</CODE></TD><TD>
серверное администрирование</TD></TR>
<TR><TD><STRONG>file</STRONG></TD><TD><CODE>File_priv</CODE></TD><TD>доступ к
файлам на сервере</TD></TR></TABLE>

<P>Привилегии <STRONG>select</STRONG>, <STRONG>insert</STRONG>,
<STRONG>update</STRONG> и <STRONG>delete</STRONG> позволяют Вам выполнять
операции на строках в существующих таблицах в базе данных.</P>

<P>Инструкции <CODE>SELECT</CODE> требуют привилегии <STRONG>select</STRONG>
только, если они фактически восстанавливают строки из таблицы. Вы можете
выполнять некоторые инструкции <CODE>SELECT</CODE> даже без разрешения
обратиться к любой из баз данных на сервере. Например, Вы могли бы
использовать клиента <CODE>mysql</CODE> как простой калькулятор:</P>
<PRE>
mysql&#62; SELECT 1+1;
mysql&#62; SELECT PI()*2;
</PRE>

<P>Привилегия <STRONG>index</STRONG> позволяет создавать или удалять индексы.
</P>

<P>Привилегия <STRONG>alter</STRONG> позволяет использовать <CODE>ALTER
TABLE</CODE>.</P>

<P>Привилегии <STRONG>create</STRONG> и <STRONG>drop</STRONG> позволяют
создавать новые базы данных и таблицы или удалять существующие.</P>

<P>Обратите внимание, что, если Вы предоставляете привилегию
<STRONG>drop</STRONG> для базы данных <CODE>mysql</CODE> пользователю, он
сможет удалить всю базу данных, в которой сохранены привилегии доступа MySQL!
</P>

<P>Привилегия <STRONG>grant</STRONG> позволяет Вам давать другим
пользователям те привилегии, которыми Вы непосредственно обладаете.</P>

<P>Привилегия <STRONG>file</STRONG> дает Вам разрешение читать и писать файлы
на сервере, используя инструкции <CODE>LOAD DATA INFILE</CODE> и <CODE>SELECT
... INTO OUTFILE</CODE>. Любой пользователь, кому эта привилегия
предоставляется, может читать или писать любой файл, который доступен на
чтение или запись серверу MySQL.</P>

<P>Оставшиеся привилегии используются для административных операций, которые
выполняются, используя программу <CODE>mysqladmin</CODE>. Таблица ниже
показывает, какие команды <CODE>mysqladmin</CODE> соответствуют привилегиям:
</P>

<TABLE BORDER WIDTH="100%">
<TR><TD><STRONG>Привилегия</STRONG></TD><TD><STRONG>Команды, разрешенные
держателям данной привилегии</STRONG></TD></TR>
<TR><TD><STRONG>reload</STRONG></TD><TD><CODE>reload</CODE>,
<CODE>refresh</CODE>, <CODE>flush-privileges</CODE>,
<CODE>flush-hosts</CODE>, <CODE>flush-logs</CODE> и
<CODE>flush-tables</CODE></TD></TR>
<TR><TD><STRONG>shutdown</STRONG></TD><TD><CODE>shutdown</CODE></TD></TR>
<TR><TD><STRONG>process</STRONG></TD><TD><CODE>processlist</CODE>,
<CODE>kill</CODE></TD></TR></TABLE>

<P>Команда <CODE>reload</CODE> сообщает, что сервер должен заново прочитать
таблицы предоставления привилегий. Команда <CODE>refresh</CODE> сбрасывает на
диск все таблицы, закрывает и заново открывает журналы. Привилегия
<CODE>flush-privileges</CODE> является синонимом для <CODE>reload</CODE>.
Другие команды <CODE>flush-*</CODE> выполняют функции, подобные
<CODE>refresh</CODE>, но в более ограниченном контексте, и могут быть
предпочтительны в некоторых ситуациях. Например, если Вы хотите только
сбросить на диск журналы, команда <CODE>flush-logs</CODE> представляет собой
лучший выбор, чем <CODE>refresh</CODE>.</P>

<P>Команда <CODE>shutdown</CODE> выключает сервер.</P>

<P>Команда <CODE>processlist</CODE> отображает информацию относительно
процессов, выполняющихся внутри сервера. Команда <CODE>kill</CODE> уничтожает
потоки сервера. Вы всегда можете отображать или уничтожать Ваши собственные
процессы, но Вы нуждаетесь в привилегии <STRONG>process</STRONG>, чтобы
отображать или уничтожать процессы,
инициализированные другими пользователями.</P>

<P>Некоторые предосторожности при предоставлении привилегий:</P>

<UL><LI>Привилегия <STRONG>grant</STRONG> позволяет пользователям отдавать их
привилегии другим пользователям. Два пользователя с различными привилегиями и
с привилегией <STRONG>grant</STRONG> способны объединить свои привилегии!
<LI>Привилегия <STRONG>alter</STRONG> может использоваться, чтобы развалить
систему привилегий, переименовывая таблицы.
<LI>Привилегия <STRONG>file</STRONG> может быть злоупотреблена, чтобы читать
любой доступный всем на чтение файл на сервере в таблицу базы данных, к
содержанию которой можно затем обращаться, используя <CODE>SELECT</CODE>.
Это включает содержание всех баз данных на сервере!
<LI>Привилегия <STRONG>shutdown</STRONG> может быть злоупотреблена, чтобы
лишить других пользователей доступа простым выключением сервера.
<LI>Привилегия <STRONG>process</STRONG>, чтобы рассмотреть текст выполняемых
в настоящее время запросов, включая запросы, которые устанавливают или
изменяют пароли пользователей.
<LI>Привилегии на базе данных <CODE>mysql</CODE> могут использоваться, чтобы
изменить пароли и другую информацию привилегий доступа. Пароли сохранены
зашифрованными, так что злонамеренный пользователь не сможет просто читать
их, чтобы узнать простой текстовый пароль. Если пользователь может обращаться
к столбцу пароля в <CODE>mysql.user</CODE>, он может использовать это, чтобы
зарегистрировать нового пользователя на сервере MySQL.</UL>

<P>Имеются некоторые вещи, которые Вы не можете делать с
системой привилегий MySQL:</P>
<UL><LI>Вы не можете явно определять, что данный пользователь должен быть
лишен доступа. То есть Вы не можете явно задать пользователя и затем
отказать от подключения.
<LI>Вы не можете определять, что пользователь имеет привилегии, чтобы
создавать или удалять таблицы в базе данных, но не создавать или удалять
базу данных непосредственно.</UL>

<H3><A NAME="Connecting">10.7 Связь с сервером MySQL</A></H3>
<P>Клиент MySQL требует, чтобы Вы определили параметры подключения, когда Вы
хотите обратиться к серверу MySQL: компьютер, с которым надо связаться, Ваше
имя пользователя и пароль. Например, клиент <CODE>mysql</CODE> может быть
запущен примерно так (факультативные параметры заключены в <SAMP>`['</SAMP> и
<SAMP>`]'</SAMP>):</P>
<PRE>
shell&#62; mysql [-h host_name] [-u user_name] [-pyour_pass]
</PRE>

<P>Альтернативные формы параметров <CODE>-h</CODE>, <CODE>-u</CODE> и
<CODE>-p</CODE>: <CODE>--host=host_name</CODE>,
<CODE>--user=user_name</CODE> и <CODE>--password=your_pass</CODE>. Обратите
внимание, что не должно быть <EM>никаких пробелов вообще</EM> между
<CODE>-p</CODE> или <CODE>--password=</CODE> и паролем.</P>

<P><STRONG>ОБРАТИТЕ ВНИМАНИЕ:</STRONG> Определение пароля в командной строке
далеко не безопасно! Любой пользователь в Вашей системе может выяснить Ваш
пароль командой, наподобие <CODE>ps auxww</CODE>.

<P><CODE>mysql</CODE> использует значения по умолчанию для параметров
подключения, которые отсутствуют в командной строке:</P>

<UL><LI>Имя хоста по умолчанию: <CODE>localhost</CODE>.
<LI>Заданное по умолчанию имя пользователя: Ваше Unix-имя входа в систему.
<LI>Никакой пароль не задан, если отсутствует <CODE>-p</CODE>.</UL>

<P>Таким образом, для Unix-пользователя <CODE>joe</CODE> эквивалентно:</P>
<PRE>
shell&#62; mysql -h localhost -u joe
shell&#62; mysql -h localhost
shell&#62; mysql -u joe
shell&#62; mysql
</PRE>

<P>Другая MySQL-клиентура ведет себя аналогично.</P>

<P>На Unix-системах Вы можете определять различные значения по умолчанию,
которые нужно использовать, когда Вы делаете подключение, так, чтобы не надо
было вводить их в командную строку, каждый раз, когда Вы вызываете программу.
Это может быть выполнено двумя разными способами:</P>

<UL><LI><A NAME="IDX459"></A>Вы можете определять параметры подключения в
разделе <CODE>[client]</CODE> файла конфигурации <TT>.my.cnf</TT> в Вашем
основном (домашнем) каталоге системы. Релевантный раздел файла мог бы
выглядеть следующим образом:
<PRE>
[client]
host=host_name
user=user_name
password=your_pass
</PRE>

<LI><A NAME="IDX460"></A><A NAME="IDX461"></A><A NAME="IDX462"></A>
<A NAME="IDX463"></A><A NAME="IDX464"></A><A NAME="IDX465"></A>Вы можете
определять параметры подключения, используя системные переменные. Компьютер
назначения может быть определен для <CODE>mysql</CODE> в переменной
<CODE>MYSQL_HOST</CODE>. Имя пользователя MySQL может быть определено,
используя <CODE>USER</CODE> (это только для Windows). Пароль может быть
определен, используя <CODE>MYSQL_PWD</CODE> (но это опасно! Подробности по
этому вопросу чуть ниже).

<H3><A NAME="Connection_access">10.8
Контроль доступа, стадия 1: Проверка соединения</A></H3>
<P>Когда Вы пытаетесь соединиться с сервером MySQL, он принимает или
отклоняет подключение, исходя из Вашей идентификации и того, можете ли Вы
подтвердить ее паролем. Если нет, сервер отвергает доступ полностью. Иначе
сервер принимает подключение, затем вводит Стадию 2 и ждет запросы.</P>

<P>Идентификация основана на двух частях информации:</P>

<UL><LI>Компьютер, с которого Вы соединяетесь
<LI>Ваше имя пользователя MySQL</UL>

<P>Проверка выполняется, используя три поля области (контекста) таблицы
<CODE>user</CODE> (<CODE>Host</CODE>, <CODE>User</CODE> и
<CODE>Password</CODE>). Сервер принимает подключение только, если запись
таблицы <CODE>user</CODE> соответствует Вашему hostname и имени пользователя,
и Вы вводите правильный пароль.</P>

<P>Значения в полях области (контекста) таблицы <CODE>user</CODE> могут быть
определены следующим образом:</P>

<UL><LI>Значение <CODE>Host</CODE> может быть hostname, IP-адресом или
<CODE>localhost</CODE>, чтобы указать локальный компьютер.
<LI><A NAME="IDX470"></A>Вы можете использовать групповые символы
<SAMP>`%'</SAMP> и <SAMP>`_'</SAMP> в поле <CODE>Host</CODE>.
<LI>Значение <CODE>'%'</CODE> поля <CODE>Host</CODE> соответствует любому
имени хоста (hostname).
<LI>Пустое значение <CODE>Host</CODE> означает, что привилегия должна быть
получена методом операции логического AND с записью в таблице
<CODE>host</CODE>, которая соответствует данному имени. Вы можете найти
большее количество информации относительно этого в следующей главе.
<A NAME="IDX471"></A><LI>Начиная с MySQL Version 3.23, для значений
<CODE>Host</CODE>, определенных как IP, Вы можете определять netmask,
указывая, сколько бит адреса использовать для сетевого адреса. Например:
<PRE>
GRANT ALL PRIVILEGES on db.* to david@'192.58.197.0/255.255.255.0';
</PRE>

Это позволит каждому желающему соединяться с IP, где следующее истинно:
<PRE>
user_ip &#38; netmask = host_ip.
</PRE>

В вышеупомянутом примере все IP в интервале 192.58.197.0-192.58.197.255 могут
соединяться с сервером MySQL.

<LI><A NAME="IDX472"></A>Групповые символы не позволяются в поле
<CODE>User</CODE>, но Вы можете определять пустое значение, которое
соответствует любому имени. Если запись таблицы <CODE>user</CODE>, которое
соответствует входящему подключению, имеет пустое имя пользователя, такой
пользователь является анонимным (то есть, пользователем без имени), а не тем
пользователем, имя которого по умолчанию указывает клиент. Это означает, что
пустое имя пользователя применяется для всей дальнейшей проверки доступа (то
есть в течение Стадии 2).
<LI>Поле <CODE>Password</CODE> может быть пусто. Это не означает, что любой
пароль подойдет, это означает, что  пользователь должен соединиться без того,
чтобы определить пароль.</UL>

<P><A NAME="IDX473"></A>Непустые значения <CODE>Password</CODE> представляют
зашифрованные пароли. MySQL не сохраняет пароли в форме открытого текста.
Пароли шифруются функцией <CODE>PASSWORD()</CODE>. Зашифрованный пароль затем
используется, когда клиент/сервер проверяет, является ли пароль правильным
(это будет выполнено без передачи зашифрованного пароля по сети). Обращаю
внимание, что с точки зрения MySQL зашифрованный пароль представляет собой
РЕАЛЬНЫЙ пароль, так что Вы не должны давать доступ к нему кому попало! В
частности, не давайте нормальный доступ для чтения пользователям к таблицам
в базе данных <CODE>mysql</CODE>!</P>

<P>Примеры ниже показывают, как различные комбинации значений
<CODE>Host</CODE> и <CODE>User</CODE> в записях таблицы <CODE>user</CODE>
обращаются к входящим подключениям:</P>

<TABLE BORDER WIDTH="100%">
<TR><TD><CODE>Host</CODE> <STRONG>значение</STRONG></TD><TD><CODE>User</CODE>
<STRONG>значение</STRONG></TD><TD><STRONG>Подключения, согласованные записью
</STRONG></TD></TR>
<TR><TD><CODE>'thomas.joker.botik.ru'</CODE></TD><TD><CODE>'lnz'</CODE></TD><TD>
<CODE>lnz</CODE>, связавшийся с машины <CODE>thomas.joker.botik.ru</CODE></TD></TR>
<TR><TD><CODE>'thomas.joker.botik.ru'</CODE></TD><TD><CODE>''</CODE></TD><TD>Любой
пользователь, связавшийся с машины <CODE>thomas.joker.botik.ru</CODE></TD></TR>
<TR><TD><CODE>'%'</CODE></TD><TD><CODE>'lnz'</CODE></TD><TD>
<CODE>lnz</CODE>, связавшийся с любой машины</TD></TR>
<TR><TD><CODE>'%'</CODE></TD><TD><CODE>''</CODE></TD><TD>Любой пользователь,
связавшийся с любой машины</TD></TR>
<TR><TD><CODE>'%.joker.botik.ru'</CODE></TD><TD><CODE>'lnz'</CODE></TD><TD><CODE>
lnz</CODE>, связавшийся с любой машины в домене <CODE>joker.botik.ru</CODE></TD>
</TR>
<TR><TD><CODE>'x.y.%'</CODE></TD><TD><CODE>'lnz'</CODE></TD><TD><CODE>lnz
</CODE>, связавшийся с <CODE>x.y.net</CODE>, <CODE>x.y.com</CODE>,
<CODE>x.y.edu</CODE> и т.д.</TD></TR>
<TR><TD><CODE>'144.155.166.177'</CODE></TD><TD><CODE>'lnz'</CODE></TD><TD>
<CODE>lnz</CODE>, связавшийся с машины с IP-адресом
<CODE>144.155.166.177</CODE></TD></TR>
<TR><TD><CODE>'144.155.166.%'</CODE></TD><TD><CODE>'lnz'</CODE></TD><TD>
<CODE>lnz</CODE>, связавшийся с любой машины в сети <CODE>144.155.166</CODE>
коасса C</TD></TR>
<TR><TD><CODE>'144.155.166.0/255.255.255.0'</CODE></TD><TD><CODE>'lnz'
</CODE></TD><TD>Аналогично предыдущему примеру</TD></TR></TABLE>

<P>Поскольку Вы можете использовать символы подстановки в IP-адресах в поле
<CODE>Host</CODE> (например, <CODE>144.155.166.%</CODE>, чтобы
соответствовать каждому компьютеру в подсети), есть возможность, что кто-то
может попробовать эксплуатировать это свойство, именуя свой компьютер
<CODE>144.155.166.somewhere.com</CODE>. Чтобы мешать таким попыткам, MySQL
отвергает соответствие имен хостов, которые начинаются с цифр и точки. Таким
образом, если Вы имеете компьютер с именем наподобие
<CODE>3.6.foo.com</CODE>, его имя никогда не будет соответствовать столбцу
<CODE>Host</CODE> таблиц. Только IP-адрес может соответствовать символам
подстановки в IP-адресе.</P>

<P>Входящее подключение может быть согласовано более, чем с одной записью в
таблице <CODE>user</CODE>. Например, подключение пользователя
<CODE>lnz</CODE> с машины <CODE>thomas.joker.botik.ru</CODE> согласовано
несколькими записями, показанными выше. Как сервер выбирает, которую запись
использовать в данной ситуации? Он решает этот вопрос, сортируя таблицу
<CODE>user</CODE> после ее чтения при запуске. Затем записи просматриваются в
отсортированном порядке. Используется первое совпадение.</P>

<P>Сортировка таблицы <CODE>user</CODE> работает следующим образом.
Предположим, что таблица <CODE>user</CODE> выглядит следующим образом:</P>
<PRE>
+-----------+---------+-
| Host      | User    | ...
+-----------+---------+-
| %         | root    | ...
| %         | alexmv  | ...
| localhost | root    | ...
| localhost |         | ...
+-----------+---------+-
</PRE>

<P>Когда сервер читает таблицу, он располагает записи с наиболее
специфическими значениями <CODE>Host</CODE> вначале (<CODE>'%'</CODE> в
столбце <CODE>Host</CODE> означает любой компьютер, а, стало быть, наименее
специфический). Записи с одинаковыми значениями <CODE>Host</CODE>
упорядочиваются с наиболее специфическими значениями <CODE>User</CODE>
(пустое значение <CODE>User</CODE> означает любого пользователя, и наименее
специфическое). Возникающая в результате сортировки таблица <CODE>user</CODE>
выглядит следующим образом:</P>
<PRE>
+-----------+---------+-
| Host      | User    | ...
+-----------+---------+-
| localhost | root    | ...
| localhost |         | ...
| %         | alexmv  | ...
| %         | root    | ...
+-----------+---------+-
</PRE>

<P><A NAME="IDX474"></A><A NAME="IDX475"></A><A NAME="IDX476"></A>Когда
предпринято подключение, сервер просматривает отсортированные записи и
использует первое найденное соответствие. Для подключения пользователя
<CODE>alexmv</CODE> с машины <CODE>localhost</CODE> записи со значением
<CODE>localhost</CODE> в столбце <CODE>Host</CODE> окажутся первыми. Из них
подходит запись с пустым именем пользователя. Запись
<CODE>'%'/alexmv</CODE> тоже подходит, но она не первая.</P>

<P>Имеется другой пример. Предположите, что таблица <CODE>user</CODE>
выглядит следующим образом:</P>
<PRE>
+-----------------------+---------+-
| Host                  | User    | ...
+-----------------------+---------+-
| %                     | alexmv  | ...
| thomas.joker.botik.ru |         | ...
+-----------------------+---------+-
</PRE>

<P>Отсортированная таблица будет выглядеть так:</P>
<PRE>
+-----------------------+---------+-
| Host                  | User    | ...
+-----------------------+---------+-
| thomas.joker.botik.ru |         | ...
| %                     | alexmv  | ...
+-----------------------+---------+-
</PRE>

<P>Подключение пользователя <CODE>alexmv</CODE> с машины
<CODE>thomas.joker.botik.ru</CODE> согласовано первой записью в то время, как
подключение <CODE>alexmv</CODE> с машины <CODE>rustex.botik.ru</CODE>
соответствует второй записи.</P>

<P>Общее неправильное мнение состоит в том, что первыми будут использованы
записи, в которых имя пользователя указано явно. Это не так! Только что было
показано, что запись, использованная первой, имени пользователя в явном виде
не имела вовсе.</P>

<P>Если Вы имеете проблемы при соединении с сервером, распечатайте таблицу
<CODE>user</CODE> и отсортируйте ее вручную, чтобы видеть, где первое
соответствие будет сделано.</P>

<H3><A NAME="Request_access">10.9
Контроль доступа, стадия 2: Проверка запросов</A></H3>
<P>Как только Вы устанавливаете подключение, сервер вводит Стадию 2. Для
каждого запроса, который входит на подключении, сервер проверяет, имеете ли
Вы достаточные привилегии, чтобы выполнить его, основываясь на типе операции.
Эти привилегии могут исходить из любой из таблиц: <CODE>user</CODE>,
<CODE>db</CODE>, <CODE>host</CODE>, <CODE>tables_priv</CODE> или
<CODE>columns_priv</CODE>. Таблицы предоставления привилегий управляются с
помощью команд <CODE>GRANT</CODE> и <CODE>REVOKE</CODE>. Подробности в
разделе "<A HREF="#GRANT">10.1 Синтаксис <CODE>GRANT</CODE> и
<CODE>REVOKE</CODE></A>".</P>

<P>Таблица <CODE>user</CODE> предоставляет привилегии, которые назначены Вам
на глобальном основании, и это применяется независимо от того, какова текущая
база данных. Например, если таблица <CODE>user</CODE> предоставляет Вам
привилегию <STRONG>delete</STRONG>, Вы можете удалять строки из любой базы
данных на сервере! Другими словами, привилегии таблицы <CODE>user</CODE>
являются глобальными. Мудро предоставить привилегии в таблице
<CODE>user</CODE> только суперпользователям типа администраторов базы данных
или сервера в целом. Для других пользователей Вы должны оставить привилегии в
таблице <CODE>user</CODE> в значении <CODE>'N'</CODE> и давать их только при
использовании таблиц <CODE>db</CODE> и <CODE>host</CODE>.</P>

<P><A NAME="IDX477"></A><A NAME="IDX478"></A><A NAME="IDX479"></A>Таблицы
<CODE>db</CODE> и <CODE>host</CODE> предоставляют специфические для базы
данных привилегии. Значения в полях области могут быть определены так:</P>

<UL><LI>Групповые символы <SAMP>`%'</SAMP> и <SAMP>`_'</SAMP> могут
использоваться в полях <CODE>Host</CODE> и <CODE>Db</CODE> любой таблицы.
<LI>Значение <CODE>'%'</CODE> в поле <CODE>Host</CODE> таблицы
<CODE>db</CODE> означает любой компьютер. Пустое значение <CODE>Host</CODE>
в таблице <CODE>db</CODE> предписывает брать информацию из таблицы
<CODE>host</CODE>.
<LI><CODE>'%'</CODE> или пустое значение <CODE>Host</CODE> в таблице
<CODE>host</CODE> означает любой компьютер.
<LI> <CODE>'%'</CODE> или пустое значение <CODE>Db</CODE> в любой таблице
означает любую базу данных.
<LI>Пустое значение <CODE>User</CODE> в любой таблице
соответствует анонимному пользователю.</UL>

<P><A NAME="IDX480"></A><A NAME="IDX481"></A><A NAME="IDX482"></A>
<A NAME="IDX483"></A>Таблицы <CODE>db</CODE> и <CODE>host</CODE> читаются и
сортируются при запуске сервера по тем же правилам, что и таблица
<CODE>user</CODE>.</P>

<P><A NAME="IDX484"></A><A NAME="IDX485"></A>Таблицы <CODE>tables_priv</CODE>
и <CODE>columns_priv</CODE> предоставляют специфические для таблицы и столбца
привилегии. Значения в полях области (контекста) могут быть определены так:
</P>

<UL><LI>Групповые символы <SAMP>`%'</SAMP> и <SAMP>`_'</SAMP> могут
использоваться в поле <CODE>Host</CODE> любой таблицы.
<LI><CODE>'%'</CODE> или пустое значение <CODE>Host</CODE> в любой таблице
означает любой компьютер.
<LI>Поля <CODE>Db</CODE>, <CODE>Table_name</CODE> и <CODE>Column_name</CODE>
не могут содержать групповые символы или быть пустыми в любой таблице.</UL>

<P>Таблицы <CODE>tables_priv</CODE> и <CODE>columns_priv</CODE> сортируются
по полям <CODE>Host</CODE>, <CODE>Db</CODE> и <CODE>User</CODE>. Это подобно
сортировке таблицы <CODE>db</CODE>, хотя сортировка более простая потому, что
только поле <CODE>Host</CODE> может содержать групповые символы.</P>

<P>Процесс проверки запроса описан ниже.</P>

<P>Для административных запросов (<STRONG>shutdown</STRONG>,
<STRONG>reload</STRONG> и т.д.), сервер проверяет только запись таблицы
<CODE>user</CODE> потому, что это единственная таблица, которая определяет
административные привилегии. Доступ предоставляется, если запись позволяет
запрошенную операцию. Например, если Вы хотите выполнить <CODE>mysqladmin
shutdown</CODE>, но Ваша запись в таблице <CODE>user</CODE> не предоставляет
Вам привилегию <STRONG>shutdown</STRONG>, доступ будет отклонен без всякой
проверки таблиц <CODE>db</CODE> или <CODE>host</CODE>.</P>

<P>Для связанных с базой данных запросов (<STRONG>insert</STRONG>,
<STRONG>update</STRONG> и т.д.), сервер сначала проверит глобальные
привилегии (суперпользователя) по записям в таблице <CODE>user</CODE>. Если
запись позволяет запрошенную операцию, доступ предоставляется. Если
глобальные привилегии в таблице <CODE>user</CODE> недостаточны, сервер
определяет специфические для базы данных привилегии пользователя, проверяя
таблицы <CODE>db</CODE> и <CODE>host</CODE>:</P>

<OL><LI>Сервер смотрит в таблице <CODE>db</CODE> соответствия полей
<CODE>Host</CODE>, <CODE>Db</CODE> и <CODE>User</CODE>. Поля
<CODE>Host</CODE> и <CODE>User</CODE> должны соответствовать hostname
соединяющегося клиентского компьютера и MySQL-имени пользователя. Поле
<CODE>Db</CODE> должно соответствовать базе данных, к которой пользователь
хочет обращаться. Если не имеется никакой записи для <CODE>Host</CODE> и
<CODE>User</CODE>, доступ будет отклонен.
<LI>Если имеется соответствие записи в таблице <CODE>db</CODE> и ее поле
<CODE>Host</CODE>  не пустое, то данная запись определяет специфические для
базы данных привилегии пользователя.
<LI>Если в соответствующей записи таблицы <CODE>db</CODE> поле
<CODE>Host</CODE> является пустым, это выражает, что таблица
<CODE>host</CODE> перечисляет, какие именно компьютеры имеют доступ к базе
данных. В этом случае дальнейшая поисковая работа ведется в таблице
<CODE>host</CODE>, чтобы найти соответствие полей <CODE>Host</CODE> и
<CODE>Db</CODE>. Если соответствий в таблице <CODE>host</CODE> нет, доступ
будет отклонен. Если имеется соответствие, специфические для базы данных
привилегии пользователя будут вычислены как пересечение (<EM>но не
объединение!</EM>) привилегий в таблицах <CODE>db</CODE> и <CODE>host</CODE>,
то есть, привилегий, которые являются <CODE>'Y'</CODE>, в обеих записях.</OL>

<P>После определения специфических для базы данных привилегий,
предоставленных записями таблиц <CODE>db</CODE> и <CODE>host</CODE>, сервер
добавляет их к глобальным привилегиям, предоставленным таблицей
<CODE>user</CODE>. Если результат позволяет запрошенную операцию, доступ
предоставляется. Иначе сервер проверяет пользовательские привилегии таблицы и
столбца в таблицах <CODE>tables_priv</CODE> и <CODE>columns_priv</CODE>
соответственно, добавляя их к привилегиям пользователя.</P>

<P>Выражаясь в терминах двоичной логики, предшествующее описание того, как
привилегии пользователя будут вычислены, может быть получено так:</P>
<PRE>
global privileges
OR (database privileges AND host privileges)
OR table privileges OR column privileges
</PRE>

<P>Не очень ясно, почему, если первоначально найдены глобальные привилегии
пользователя в таблице <CODE>user</CODE>, недостаточные для запрошенной
операции, сервер добавляет их к привилегиям для базы данных, таблицы и
специфического столбца. Причина в том, что запрос может требовать больше, чем
один тип привилегии. Например, если Вы выполняете инструкцию
<CODE>INSERT ...  SELECT</CODE>, Вы нуждаетесь в привилегиях
<STRONG>insert</STRONG> и <STRONG>select</STRONG>. Ваши привилегии могут быть
такими, что запись таблицы <CODE>user</CODE> предоставляет одну из них, а
запись таблицы <CODE>db</CODE> разрешает другую. В этом случае Вы имеете
необходимые привилегии, чтобы выполнить запрос, но сервер должен просмотреть
все таблицы, чтобы разобраться в ситуации: привилегии, предоставленные
записями в обеих таблицах, должны быть объединены вместе.</P>

<P><A NAME="IDX486"></A><A NAME="IDX487"></A></P>
<P>Таблица <CODE>host</CODE> может использоваться, чтобы поддерживать список
безопасных машин и серверов.</P>

<P>В TcX таблица <CODE>host</CODE> хранит список всех машин в локальной сети.
Им предоставляют все привилегии.</P>

<P>Вы можете также использовать таблицу <CODE>host</CODE>, чтобы указать
компьютеры, которые не безопасны. Предположите, что Вы имеете машину
<CODE>public.your.domain</CODE>, которая размещена в общем домене, который Вы
не рассматриваете как безопасный. Вы можете позволять доступ всем компьютерам
в Вашей сети за исключением этой системы, используя записи в таблице
<CODE>host</CODE>:</P>
<PRE>
+--------------------+----+-
| Host               | Db | ...
+--------------------+----+-
| public.your.domain | %  | ... (все привилегии установлены в 'N')
| %.your.domain      | %  | ... (все привилегии установлены в 'Y')
+--------------------+----+-
</PRE>

<P><A NAME="IDX488"></A><A NAME="IDX489"></A><A NAME="IDX490"></A>
<A NAME="IDX491"></A></P>
<P>Естественно, Вы должны всегда проверять Ваши записи в таблицах
предоставления привилегий (например, используя <CODE>mysqlaccess</CODE>),
чтобы удостовериться, что Ваши привилегии доступа фактически установлены так,
как Вы ожидаете.</P>

<H3><A NAME="Access_denied">10.10 Причины ошибки <CODE>Access denied</CODE>
</A></H3>
<P>Если Вы сталкиваетесь с ошибкой <CODE>Access denied</CODE>, когда пробуете
соединиться с сервером MySQL, посмотрите список ниже. Там приведены наиболее
часто встречающиеся проблемы. Большинство проблем тоносится к администратору,
и их решение находится вне прав доступа обычного пользователя. Так что, если
описанное ниже не помогает, обратитесь к администратору сервера.</P>

<UL><LI>Если Вы получаете такую ошибку:
<PRE>
shell&#62; mysqladmin -u username -pxxxx ver
Access denied for user: 'username@localhost' (Using password: YES)
</PRE>

Это означает, что Вы используете неправильный пароль. Подробности в разделе
"<A HREF="#Passwords">10.12 Установка паролей</A>".

Если Вы получаете вышеупомянутую ошибку, даже если Вы не определили пароль,
это означает, что есть неправильный пароль в файле <CODE>my.ini</CODE>.
Вы можете отказаться от использования файлов опций с помощью параметра
командной строки <CODE>--no-defaults</CODE>:
<PRE>
shell&#62; mysqladmin --no-defaults -u username ver
</PRE>

<LI>Если Ваши привилегии изменяются в середине сеанса, может быть,
суперпользователь изменил их. Перезагрузка таблиц предоставления воздействует
на новые подключения пользователя, но это также воздействует и на
существующие подключения, как обозначено в разделе
"<A HREF="#Privilege_changes">10.11 Когда изменения привилегий
вступают в силу</A>".

<LI>Если Вы не можете получать Ваш пароль, чтобы работать, помните, что Вы
должны использовать функцию <CODE>PASSWORD()</CODE>, если Вы устанавливаете
пароль инструкцией <CODE>INSERT</CODE>, <CODE>UPDATE</CODE> или <CODE>SET
PASSWORD</CODE>. Функция <CODE>PASSWORD()</CODE> не нужна, если Вы
определяете пароль, используя инструкцию <CODE>GRANT ... INDENTIFIED
BY</CODE> или вызов команды <CODE>mysqladmin password</CODE>. Подробности в
разделе "<A HREF="#Passwords">10.12 Установка паролей</A>".

<LI><CODE>localhost</CODE> представляет собой синоним для Вашего локального
hostname, а также заданный по умолчанию компьютер, с которым клиент пробует
соединяться, если Вы не определяете никакого компьютер явно. Однако,
подключения с <CODE>localhost</CODE> не работают, если Вы работаете на
системе, которая использует MIT-pthreads (подключения <CODE>localhost</CODE>
сделаны, используя Unix-сокеты, которые не поддержаны MIT-pthreads). Чтобы
избежать этой проблемы на таких системах, Вы должны использовать опцию
<CODE>--host</CODE>, чтобы назвать компьютер сервера явно. Это будет делать
TCP/IP-подключение (не через сокеты!) к серверу <CODE>mysqld</CODE>. В этом
случае Вы должны иметь Ваш реальный hostname в записях таблицы
<CODE>user</CODE> на компьютере сервера (даже если Вы запускаете клиент и
сервер на одной физической машине).

<LI>Если Вы получаете ошибку <CODE>Access denied</CODE> при попытке
соединиться с базой данных с помощью вызова
<CODE>mysql -u user_name db_name</CODE>, Вы можете иметь проблему с таблицей
<CODE>user</CODE>. Обратитесь к администратору.

<LI>Обычно Вы должны иметь одну запись в таблице <CODE>user</CODE>, которая
точно соответствует hostname и имени пользователя, которые были даны в
сообщении об ошибках. Например, если Вы получаете сообщение об ошибках,
которое содержит строку <CODE>Using password: NO</CODE>, это означает, что Вы
пробовали войти в систему без пароля.

<LI>Если Вы получаете сообщение об ошибках, где hostname не показывается, или
где вместо hostname выводится IP-адрес, даже если Вы пробуете соединяться
именно с реальным hostname:
<PRE>
shell&#62; mysqladmin -u root -pxxxx -h some-hostname ver
Access denied for user: 'root' (Using password: YES)
</PRE>

Это означает, что MySQL получил некоторую ошибку при попытке преобразования
между IP и hostname. Если Ваш клиент и сервер исполняются на одной машине,
свяжитесь с <CODE>localhost</CODE>.

<LI>Если <CODE>mysql -u user_name test</CODE> корректно работает, а вот
<CODE>mysql -u user_name other_db_name</CODE> работать и не думает, Вы не
имеете записи для <CODE>other_db_name</CODE>, перечисленной в таблице
<CODE>db</CODE>, обратитесь к администратору.

<LI>Если <CODE>mysql -u user_name db_name</CODE> корректно работает, когда
выполнена на машине сервера, но
<CODE>mysql -u host_name -u user_name db_name</CODE> не работает, когда
выполнена на другой машине, Вы имеете машину пользователя, не перечисленную в
таблицах <CODE>user</CODE> или <CODE>db</CODE>.

<LI>Если Вы получаете следующую ошибку, Вы можете иметь проблему с таблицами
<CODE>db</CODE> или <CODE>host</CODE>:
<PRE>
Access to database denied
</PRE>

Если запись из таблицы <CODE>db</CODE> имеет пустое значение в столбце
<CODE>Host</CODE> удостоверьтесь, что имеется одна или большее количество
соответствующих записей в таблице <CODE>host</CODE>, определяющих, к которым
компьютерам применяется запись таблицы <CODE>db</CODE>. Если Вы получаете
ошибку при использование команд SQL <CODE>SELECT ... INTO OUTFILE</CODE> или
<CODE>LOAD DATA INFILE</CODE>, Ваша запись в таблице <CODE>user</CODE>,
вероятно, не имеет привилегию <STRONG>file</STRONG>.

<LI><A NAME="IDX493"></A><A NAME="IDX494"></A><A NAME="IDX495"></A>
Не забудьте, что программы пользователя используют параметры подключения,
определенные в файлах конфигурации или системных переменных. Подробнее об
этом можно прочитать в разделе "<A HREF="appl2.htm#Environment_variables">
Приложение 2. Переменные окружения</A>". Если пользователь посылает
неправильные заданные по умолчанию параметры подключения, когда Вы не
определяете их в командной строке, проверьте Вашу среду и файл
<TT>.my.cnf</TT> в Вашем основном каталоге. Вы могли бы также проверять
системные файлы конфигурации MySQL, хотя гораздо менее вероятно, что
параметры подключения пользователя будут определены именно там. Если Вы
получаете ошибку <CODE>Access denied</CODE>, когда Вы выполняете клиента без
параметров вообще, удостоверьтесь, что Вы не определили старый пароль в любом
из файлов опций!

<LI>Если Вы имеете проблемы доступа с Perl, PHP, Python или программой ODBC,
попробуйте соединяться с сервером командой
<CODE>mysql -u user_name db_name</CODE> или
<CODE>mysql -u user_name -pyour_pass db_name</CODE>. Если Вы способны
подключить использование <CODE>mysql</CODE>, имеется проблема с Вашей
программой, а не с привилегиями доступа. Обратите внимание, что нет пробелов
между <CODE>-p</CODE> и паролем. Вы можете также использовать синтаксис
<CODE>--password=your_pass</CODE>, чтобы определить пароль. Если Вы
используете единственную опцию <CODE>-p</CODE>, MySQL запросит Вас
относительно ввода пароля.

<LI>Если Вы имеете любые другие проблемы с таблицами предоставления
привилегий MySQL и чувствуете, что Вы должны сообщить проблему в список
рассылки, всегда обеспечивайте дамп таблиц предоставления привилегий MySQL.
Вы можете создать дамп таблицы командой <CODE>mysqldump mysql</CODE>.
Как всегда регистрируйте Вашу проблему при помощи скрипта
<CODE>mysqlbug</CODE>. Подробности в разделе
"<A HREF="appl3.htm#Bug_reports">Как сообщать о сбоях и проблемах</A>".</UL>

<H3><A NAME="Privilege_changes">10.11 Когда привилегии вступают в силу</A>
</H3>
<P>При запуске <CODE>mysqld</CODE> все содержание таблиц предоставления
привилегий читается в память и становится действующим.</P>

<P>Модификации к таблицам предоставления, которые Вы выполняете используя
<CODE>GRANT</CODE>, <CODE>REVOKE</CODE> или <CODE>SET PASSWORD</CODE>
вступают в силу немедленно.</P>

<P>Если Вы изменяете таблицы предоставления вручную (используя операторы
<CODE>INSERT</CODE>, <CODE>UPDATE</CODE>), Вы должны выполнить инструкцию
<CODE>FLUSH PRIVILEGES</CODE> или запустить
<CODE>mysqladmin flush-privileges</CODE>, или <CODE>mysqladmin reload</CODE>,
чтобы сообщить, что сервер должен перезагрузил таблицы предоставления. Иначе
Ваши изменения не будут иметь никакого эффекта, пока Вы не перезапустите
сервер. Если Вы изменяете таблицы предоставления вручную, но забываете
перезагружать привилегии, Вы будете часто задаваться вопросом, почему Ваши
изменения не делают вообще ничего!</P>

<P>Когда сервер обращает внимания, что таблицы предоставления были изменены,
на существующие подключения пользователей это воздействуют следующим образом:
</P>

<UL><LI>Изменения привилегий столбцов и таблиц воздействуют, начиная со
следующего запроса пользователя.

<LI>Изменения привилегии базы данных воздействуют в следующем вызове команды
<CODE>USE db_name</CODE>.</UL>

<P>Изменения глобальных привилегий и пароля воздействуют, когда пользователь
соединится в следующий раз.</P>

<H3><A NAME="Passwords">10.12 Установка паролей</A></H3>
<P>В большинстве случаев Вы должны использовать <CODE>GRANT</CODE>, чтобы
установить Ваших пользователей и их пароли, так что следующее касается только
пользоваателей профессионального уровня.</P>

<P>Примеры в предшествующих разделах иллюстрируют важный принцип: когда Вы
сохраняете непустой пароль, используя инструкции <CODE>INSERT</CODE> или
<CODE>UPDATE</CODE>, Вы должны использовать функцию <CODE>PASSWORD()</CODE>
для его шифрования. Это потому, что таблица <CODE>user</CODE> хранит пароли в
зашифрованной форме, а не как открытый текст. Если Вы забываете этот факт,
Вы, вероятно, будет пытаться устанавливать пароли подобно этому примеру:</P>
<PRE>
shell&#62; mysql -u root mysql
mysql&#62; INSERT INTO user (Host,User,Password)
                  VALUES('%','alexmv','biscuit');
mysql&#62; FLUSH PRIVILEGES;
</PRE>

<P>Результат: открытый текст <CODE>'biscuit'</CODE> будет сохранен как пароль
в таблице <CODE>user</CODE>. Когда пользователь <CODE>alexmv</CODE>
попытается подключиться к серверу, клиент <CODE>mysql</CODE> шифрует его
пароль с помощью вызова функции <CODE>PASSWORD()</CODE>, генерирует вектор
аутентификации, основанный на <STRONG>зашифрованном</STRONG> пароле и
произвольном числе, полученном с сервера, и посылает результат сервера. Он
использует значение <CODE>password</CODE> в таблице <CODE>user</CODE>
(а там <STRONG>не зашифрованное</STRONG> значение <CODE>biscuit</CODE>!),
чтобы выполнить те же самые вычисления, и сравнивает результаты. Разумеется,
они отличаются, и сервер отклоняет подключение (а Вы долго пытаетесь понять,
почему ничего не работает):</P>
<PRE>
shell&#62; mysql -u alexmv -pbiscuit test
Access denied
</PRE>

<P>Пароли должны быть зашифрованы, когда они вставлены в таблицу
<CODE>user</CODE>, так что инструкция <CODE>INSERT</CODE> должна быть
определена подобно этому:</P>
<PRE>
mysql&#62; INSERT INTO user (Host,User,Password)
                  VALUES('%','alexmv',PASSWORD('biscuit'));
</PRE>

<P>Вы должны также использовать функцию <CODE>PASSWORD()</CODE>, когда Вы
применяете инструкции <CODE>SET PASSWORD</CODE>:</P>
<PRE>
mysql&#62; SET PASSWORD FOR alexmv@"%" = PASSWORD('biscuit');
</PRE>

<P>Если Вы устанавливаете пароли, используя инструкции
<CODE>GRANT ... IDENTIFIED BY</CODE> или вызов команды <CODE>mysqladmin
password</CODE>, функция <CODE>PASSWORD()</CODE> уже не нужна: там она
вызывается автоматически, так что Вы должны определить пароль
<CODE>biscuit</CODE> примерно так (вот что мешало не путать людей, а сделать
единую процедуру настройки?!):</P>
<PRE>
mysql&#62; GRANT USAGE ON *.* TO alexmv@"%" IDENTIFIED BY 'biscuit';
</PRE>

<P>или примерно так:</P>
<PRE>
shell&#62; mysqladmin -u alexmv password biscuit
</PRE>

<P><STRONG>ОБРАТИТЕ ВНИМАНИЕ:</STRONG> <CODE>PASSWORD()</CODE> не выполняет
шифрование пароля так, как это делается в Unix.</P>

<H3><A NAME="Password_security">10.12.1 Хранение паролей в безопасности</A>
</H3>
<P>Нецелесообразно определять Ваш пароль так, что его могут увидеть другие
пользователи. Методы, которые Вы можете использовать, чтобы определить Ваш
пароль, когда Вы выполняете программы-клиенты, перечислены ниже, наряду с
оценкой рисков каждого метода:</P>

<UL><LI>Никогда не давайте нормальному пользователю доступ к таблице
<CODE>mysql.user</CODE>. Знание зашифрованного пароля для пользователя делает
возможным вход в систему под именем этого пользователя.

<LI>Используйте опции <CODE>-pyour_pass</CODE> или
<CODE>--password=your_pass</CODE> в командной строке. Это удобно, но опасно
потому, что Ваш пароль становится видимым программам состояния системы
(например, <CODE>ps</CODE>), которые могут вызываться другими пользователями,
чтобы отобразить командные строки. Клиенты MySQL обнуляют командные строки,
чтобы их не было видно в процессе выполнения, но имеется краткий интервал, в
течение которого значение является видимым.

<LI>Используйте опции <CODE>-p</CODE> или <CODE>--password</CODE> (без
определенного значения <CODE>your_pass</CODE>). В этом случае
программа-клиент запросит пароль с терминала:
<A NAME="IDX528"></A><A NAME="IDX529"></A>
<PRE>
shell&#62; mysql -u user_name -p
Enter password: ********
</PRE>

Символы <SAMP>*</SAMP> представляют Ваш пароль. Это более безопасно, чем
определить пароль прямо в командной строке потому, что это не видно другим
пользователям. Однако, этот метод ввода пароля подходит только для программ,
которые Вы выполняете в интерактивном режиме. Если Вы хотите вызывать клиента
из скрипта, который выполняется не в интерактивном режиме, не имеется никакой
возможности ввести пароль с терминала. На некоторых системах Вы можете даже
обнаружить, что первая строка Вашего скрипта читается и неправильно
интерпретируется как Ваш пароль!

<LI><A NAME="IDX530"></A>Сохраните Ваш пароль в файле конфигурации. Например,
Вы можете перечислить пароль в разделе <CODE>[client]</CODE> файла
<TT>.my.cnf</TT> в Вашем основном каталоге:
<PRE>
[client]
password=your_pass
</PRE>

Если Вы сохраняете Ваш пароль в файле <TT>.my.cnf</TT>, не должен быть
доступен на чтение (тем более на запись) никому, кроме Вас. Удостоверьтесь,
что режим доступа файла <CODE>400</CODE> или <CODE>600</CODE>.

<LI>Вы можете сохранять Ваш пароль в системной переменной
<CODE>MYSQL_PWD</CODE>, но этот метод должен рассматриваться как чрезвычайно
опасный и не должен использоваться. Некоторые версии <CODE>ps</CODE> включают
опцию, чтобы отобразить среду управления процессами. Ваш пароль будет видим
всем желающим использовать такую команду. Даже на системах без такой версии
<CODE>ps</CODE> неблагоразумно считать, что не имеется никакого другого
метода наблюдать среды процесса.</UL>

<P>В целом, самые безопасные методы состоят в том, чтобы иметь запрос
программы-клиента для пароля или определять пароль в правильно защищенном
файле личных настроек <TT>.my.cnf</TT>.</P>

</index></td><td width="20%">
<script type="text/javascript">
    var begun_auto_colors           = new Array();
    var begun_auto_fonts_size       = new Array();
    var begun_auto_pad              =       97517308;     // идентификатор площадки
    var begun_auto_limit            =              5;     // число объявлений выводимых на площадке
    var begun_auto_width            =            250;     // ширина блока объявлений
    begun_auto_colors[0]            =      '#0000CC';     // цвет ссылки объявлений
    begun_auto_colors[1]            =      '#000000';     // цвет текста объявления
    begun_auto_colors[2]            =      '#00CC00';     // цвет домена объявления
    begun_auto_colors[3]            =      '#FFFFFF';     // цвет фона блока объявлений
    begun_auto_fonts_size[0]        =          '9pt';     // р-мер шрифта ссылки объявлений
    begun_auto_fonts_size[1]        =          '9pt';     // р-мер шрифта текста объявления
    begun_auto_fonts_size[2]        =          '8pt';     // р-мер шрифта домена объявления
    begun_auto_fonts_size[3]        =          '8pt';     // р-мер шрифта заглушки
    var begun_block_type            =     'Vertical';     // тип блока
    var begun_rambler_type          =              1;     // цвет блока поиска Рамблер
    begun_koi8 = 1;
</script>
<script src="../../../autocontext.begun.ru/autocontext.js"
type="text/javascript"></script>
</td></tr></table>

<p><table><tr><td>
<form method="get" name="fform" onSubmit="fsearch(strf.value);
return false;">
<input type="hidden" name="clid" value="39177">
<b>Поиск</b><table><tr>
<td><input type="text" name="strf" size="15" style="font-size: 9pt" /></td></tr>
<tr><td><font size="-1"><input type="radio" name="myradio" value="0"
checked id="at_site"/>
<label for="at_site">На сайте</label><br/>
<input type="radio" name="myradio" value="1" id="at_ya">
<label for="at_ya">В Яндексе</label></font></td></tr>

<tr><td><input type="submit" value="Найти" style="font-size: 9pt"></td></tr>
</table></form></td>
<td>&nbsp;</td><td><script language="JavaScript"
src="../../../b190.takru.com/in.php@id=199275">
</script></td></tr></table></p>

<p><center><table><tr><td><font size="+1"><B>Найди своих коллег!</B></font><BR>
<script language="javascript"
src="../../../rldp.lovemesweet.ru/banner/db.js.php@rows=01&cols=05&bg=33FF33&sex=0&afrom=18&ato=99&headgif=&sf=1&nwnd=1&pmin=0&cid=RU&tid=0&smu=0&tcl1=000000&tcl2=FF0000">
</script></td>

<td><iframe src="../../../www.linuxcenter.ru/trans/list.phtml@ref=121965&n=5&price=yes"
frameborder="0" vspace="0" hspace="0" width="300" height="350" marginwidth="0"
marginheight="0" scrolling="no"></iframe></td></tr></table></center></p>

<script type="text/javascript" src="../../../bin-layer.ru/popup-686-1.js">
</script>


</BODY>
</HTML>
