<HTML>
<HEAD>
  <TITLE>MyDAO: библиотека-оболочка для C++</TITLE>
  <META NAME="Author" CONTENT="Alexey V. Pautov">
  <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=koi8-r">
  <META NAME="GENERATOR" CONTENT="Dos Navigator 1.51.04/DOS.">
</HEAD>

<BODY>

<script type="text/javascript">
nN = navigator.appName;
function fsearch(str)
{
  if (document.fform.myradio[0].checked) {
     open('../../../yandex.ru/sitesearch@text=' + str + '&site=' +
          document.location.hostname);
  } else {open('../../../yandex.ru/sitesearch@text=' + str);}
}

function MouseUpHandler(e)
{
  if (nN == 'Netscape' || nN == 'Opera') {
     if (document.getSelection()) {
        str = document.getSelection();
        newstr = str.replace(/\n+/g, ' ');
        str = newstr.replace(/\ +/g, ' ');
        if (str.length > 100) {
           var i;
           i = 0;
           str = str.slice(0, 100);
           i = str.lastIndexOf(' ');
           if (i > 0){str = str.slice(0, i);}
        }
        document.fform.strf.value = str;
     }
  } else if(nN == 'Microsoft Internet Explorer') {
    if (document.selection.createRange()) {
       var range = document.selection.createRange();
       var str = range.text;
    }
    if (str) {
       str = str.replace(/\ +/g, " ");
       document.fform.strf.value = str;
    }
  }
  return true;
}
if (window.Event) {document.captureEvents(Event.MOUSEUP);}
document.onmouseup = MouseUpHandler;
</script>

<center><table><tr><td><a href="../../default.htm">
<IMG SRC="../../img/b_book.gif" ALT="RussianLDP" HEIGHT=48 WIDTH=55
ALIGN=ABSCENTER></a></td>

<td><!--Rating@Mail.ru COUNTEr-->
<a target=_top href="../../../top.mail.ru/jump@from=1364238">
<img src="../../../d1.cd.b4.a1.top.list.ru/counter@id=1364238;t=230"
border=0 height=31 width=88 alt="Рейтинг@Mail.ru"/></a>
</td><!--/COUNTER-->

<td><!-- begin of Top100 code -->
<script id="top100Counter" type="text/javascript"
src="../../../cnt.rambler.ru/top100.jcn@1448139"></script>
<noscript><a href="../../../top100.rambler.ru/top100/default.htm">
<img src="../../../cnt.rambler.ru/top100.cnt@1448139" alt="Rambler's Top100"
width="81" height="63" border="0" /></a></noscript>
<!-- end of Top100 code --></td>

<td><!-- HotLog -->
<script type="text/javascript" language="javascript">
hotlog_js="1.0";
hotlog_r=""+Math.random()+"&s=525943&im=127&r="+escape(document.referrer)+
"&pg="+escape(window.location.href);
document.cookie="hotlog=1; path=/"; hotlog_r+="&c="+(document.cookie?"Y":"N");
</script>
<script type="text/javascript" language="javascript1.1">
hotlog_js="1.1";hotlog_r+="&j="+(navigator.javaEnabled()?"Y":"N")
</script>

<script type="text/javascript" language="javascript1.2">
hotlog_js="1.2";
hotlog_r+="&wh="+screen.width+'x'+screen.height+"&px="+
(((navigator.appName.substring(0,3)=="Mic"))?
screen.colorDepth:screen.pixelDepth)</script>

<script type="text/javascript" language="javascript1.3">
hotlog_js="1.3"</script>
<script type="text/javascript" language="javascript">
hotlog_r+="&js="+hotlog_js;
document.write("<a href='../../../click.hotlog.ru/@525943' target='_top'>
<img "+" src='http://hit27.hotlog.ru/cgi-bin/hotlog/count?"+
hotlog_r+"&' border=0 width=88 height=31 alt=HotLog><\/a>")</script>

<noscript>
<a href="../../../click.hotlog.ru/@525943" target="_top">
<img src="../../../hit27.hotlog.ru/cgi-bin/hotlog/count@s=525943&im=127"
border="0" width="88" height="31" alt="HotLog"></a></noscript></td>
<!-- /HotLog -->

<td><!--LiveInternet counter--><script type="text/javascript"><!--
document.write("<a href='../../../www.liveinternet.ru/click' "+
"target=_blank><img src='http://counter.yadro.ru/hit?t52.15;r"+
escape(document.referrer)+((typeof(screen)=="undefined")?"":
";s"+screen.width+"*"+screen.height+"*"+(screen.colorDepth?
screen.colorDepth:screen.pixelDepth))+";u"+escape(document.URL)+
";"+Math.random()+"' alt='' title='LiveInternet: показано число просмотров и"+
" посетителей за 24 часа' "+"border=0 width=88 height=31><\/a>")//-->
</script></td></tr>
<!--/LiveInternet-->

<tr><td><FONT SIZE=-1><b>WebMoney:&nbsp;</b><br>
WMZ Z294115950220&nbsp;<br>
WMR R409981405661&nbsp;<br>
WME E134003968233&nbsp;</FONT></td>

<td><FONT SIZE=-1><b>Visa&nbsp;</b><br>
4274 3200 2453 6495&nbsp;</FONT></td>
</tr></table></center>
<P><index><table><tr><td>

<H1>3.10 MyDAO: библиотека-оболочка для C++</H1>
<P>Версия v0.1 (19-Feb-2000). Автор: Satish (spitfire@pn3.vsnl.net.in).
Лицензия: Feel free to use/copy/modify/add bugs/find bugs, but keep
the author informed.

<H2>Введение</H2>
<P>Это C++ библиотека для сервера MySQL. Разработчик данного пакета искал
библиотеку C++, которая может создавать и работать с Data Access Objects. Он
натолкнулся на программное обеспечение, написанное Roland Hanel (MySQL C++) и
Ed Carp (MyC). Но MyC написан на чистом C и не может создавать объект в
истинном смысле. Также это не может создавать и работать с несколькими
наборами результатов. На основе этих пакетов была написан пакет MyDAO ver 0.1.

<H2>Руководство программиста</H2>
<P>dbconnect class: Один объект подключения должен быть создан. Это
ответственно за соединение с сервером MySQL и открытие базы данных. Свойства:
<UL><LI>bool Connected;<BR>
Connected равно true, если подключение к серверу MySQL работает.

<LI>MYSQL *DBase;<BR>
DBase является указателем на структуру MYSQL. Это требуется, чтобы открыть
набор результатов.</UL>

<P>Методы:
<UL><LI>void dbconnect::Connect(char *host, char *port, char *uname,
char*pwd);<BR>
Пытается соединиться с сервером MySQL, используя указанные параметры хоста,
порта, имени пользователя и пароля. Если подключение успешно установлено,
свойство Connected будет true.

<LI>void dbconnect::Disconnect();<BR>
Разъединяет текущее подключение с сервером MySQL.

<LI>bool dbconnect::OpenDB(char *db);<BR>
Открывает базу данных db. Если все в порядке, вернет true.</UL>

<P>Пример:
<PRE>
dbconnect MyConnect;
char host[]="localhost";
char port[]="3306";
char name[]="satish";
char pwd[]="";
char db[]="orders";

MyConnect.Connect(host, port, name, pwd);
if (MyConnect.Connected) cout &#60;&#60; "Connected" &#60;&#60; endl;
else
{
  cout &#60;&#60; "Connection failed" &#60;&#60; endl;
  return;
}
if (!MyConnect.OpenDB(db)) {
   cout &#60;&#60; "Can not open selected database" &#60;&#60; endl;
   return;
}
else
{
  cout &#60;&#60; "Opened datbase: " &#60;&#60; db &#60;&#60; endl;
  //   open recorset(s)...
  //   Manipulate data...
}
MyConnect.Disconnect();
</PRE>

<P>recordset class: Любое количество наборов результатов может быть создано
из этого класса. Он имеет много свойств для простого манипулирования данными.

<P>Свойства:
<UL><LI>char RecSource[MAX_RECSRC_LEN];<BR>
Источник записей, из которых данные должны обрабатываться. Это должна быть
SQL-инструкция SELECT, возвращающая записи.

<LI>unsigned long int RecordCount;<BR>
Число строк в открытом наборе результатов.

<LI>unsigned long int AffectedRows;<BR>
Может использоваться только с Update, AddNew или Delete. Число строк
фактически обработанных сервером.

<LI>bool EOR;<BR>
Конец набора результатов. True, если Вы двигаетесь в последнюю строку.

<LI>bool BOR;<BR>
Начало набора результатов. True, если Вы двигаетесь первую строку. Замечание:
EOR и BOR вместе будут равны true, если RecordCount=0.</UL>

<P>Методы:
<UL><LI>void recordset::OpenRecordset(MYSQL *Structmysql, char *sql);<BR>
Открывает набор результатов основанный на SQL-инструкции select.

<LI>void recordset::CloseRecordset();<BR>
Закрывает набор результатов. Он должен быть закрыт, чтобы освободить память,
используемую им.

<LI>void recordset::MoveNext();<BR>
Перемещается в следующую строку набора результатов. Если уже достигнута
последняя строка, в ней и останется.

<LI>void recordset::MovePrevious();<BR>
Перемещается в предыдущую строку набора результатов. Если уже достигнута
первая строка, в ней и останется.

<LI>void recordset::MoveFirst();<BR>
Перемещается в первую строку набора результатов.

<LI>void recordset::MoveLast();<BR>
Перемещается в последнюю строку набора результатов.

<LI>char* recordset::GetField(char *FName);<BR>
Возвращает содержание поля FName.

<LI>void recordset::SetField(char *FName, char *Value);<BR>
Устанавливает содержание поля FName в значение Value. Изменения будут
отброшены, если после установки значения не используется метод Update/AddNew.

<LI>void recordset::Edit();<BR>
Должен использоваться перед методами SetField и Update, иначе все
изменения будет отброшены.

<LI>void recordset::AddNew();<BR>
Используется, чтобы добавить новую строку в набор результатов. Для работы
этого метода набор результатов должен быть основан на таблице. Метод Update
должен использоваться после установки всех значений поля. Определение WHERE
не должно использоваться в методе Update, если оно уже используется с методом
AddNew. Свойство AffectedRows выдаст число добавленных строк.

<LI>void rercordset::Update(char *Where);<BR>
Используется, чтобы редактировать или добавить строку вместе с методами
Edit/AddNew. Определение WHERE не должно использоваться с AddNew.

<LI>void recordset::Delete(char *Where);<BR>
Применяется, чтобы удалить строки из набора результатов.

<LI>void recordset::Refresh();<BR>
Изменения, сделанные методом Update, невидимы, если метод Refresh не
используется. Обновите набор результатов немедленно после Update.

<LI>char* recordset::GetFieldN(int FNum);<BR>
Аналогично GetField, но вместо имени поля используется его код (номер).

<LI>void recordset::SetFieldN(int FNum, char *Value)<BR>
Аналогично SetField, но вместо имени поля используется его код (номер).</UL>

<P>Пример 1:
<PRE>
//   Продолжение примера из dbconnect.
//   Откроем таблицу заказчиков (customers) и распечатаем
//   все записи из нее.
recordset MySet;
char sql[]="SELECT * FROM customers";

MySet.OpenRecordset(MyConnect.DBase, sql);
if (MySet.EOR && MySet.BOR){
   cout &#60;&#60; "No records found" &#60;&#60; endl;
   return;
}
else
{
  // Show number of records
  cout &#60;&#60; "No. of records: " &#60;&#60; MySet.RecordCount &#60;&#60; endl;
  // Show all records
  while (!MySet.EOR)
  {
    cout &#60;&#60; MySet.GetField("or_id") &#60;&#60; "\t";
    cout &#60;&#60; MySet.GetField("customers") &#60;&#60; "\t";
    cout &#60;&#60; MySet.GetField("city") &#60;&#60; endl;
    MySet.MoveNext();
  }
}
</PRE>

<P>Пример 2:
<PRE>
//   Добавление новой строки в таблицу заказчиков.
MySet.AddNew();
MySet.SetField("cs_id", "7");
MySet.SetField("name", "Satish");
MySet.SetField("city", "Pune");
MySet.Update("");               // where не используется!
MySet.Refresh();                // Сделаем изменения видимыми.
</PRE>

<P>Пример 3:
<PRE>
//   Изменение имени заказчика.
MySet.Edit();
MySet.SetField("cs_id", "7");
MySet.SetField("name", "Suresh");
MySet.SetField("city", "Pune");
MySet.Update("or_id=7");        // where здесь необходимо использовать.
MySet.Refresh();                // Сделаем изменения видимыми.
</PRE>

<P>Пример 4:
<PRE>
//   Удаление записи.
MySet.Delete("name='Suresh'");
MySet.Refresh();                // Сделаем изменения видимыми.
</PRE>

<P>Пример 5:
<PRE>
//   Закроем набор результатов после употребления. Это ОБЯЗАТЕЛЬНО!
MySet.CloseRecordset();
</PRE>

<P>Что еще надо сделать:
<UL><LI>Лучший контроль ошибок
<LI>Методы поиска информации (FindFirst, FindNext, FindPrevious, FindLast)
<LI>Сделать графическое представление набора результатов</UL>

</index></td><td width="20%">
<script type="text/javascript">
    var begun_auto_colors           = new Array();
    var begun_auto_fonts_size       = new Array();
    var begun_auto_pad              =       97517308;     // идентификатор площадки
    var begun_auto_limit            =              5;     // число объявлений выводимых на площадке
    var begun_auto_width            =            250;     // ширина блока объявлений
    begun_auto_colors[0]            =      '#0000CC';     // цвет ссылки объявлений
    begun_auto_colors[1]            =      '#000000';     // цвет текста объявления
    begun_auto_colors[2]            =      '#00CC00';     // цвет домена объявления
    begun_auto_colors[3]            =      '#FFFFFF';     // цвет фона блока объявлений
    begun_auto_fonts_size[0]        =          '9pt';     // р-мер шрифта ссылки объявлений
    begun_auto_fonts_size[1]        =          '9pt';     // р-мер шрифта текста объявления
    begun_auto_fonts_size[2]        =          '8pt';     // р-мер шрифта домена объявления
    begun_auto_fonts_size[3]        =          '8pt';     // р-мер шрифта заглушки
    var begun_block_type            =     'Vertical';     // тип блока
    var begun_rambler_type          =              1;     // цвет блока поиска Рамблер
    begun_koi8 = 1;
</script>
<script src="../../../autocontext.begun.ru/autocontext.js"
type="text/javascript"></script>
</td></tr></table>

<p><table><tr><td>
<form method="get" name="fform" onSubmit="fsearch(strf.value);
return false;">
<input type="hidden" name="clid" value="39177">
<b>Поиск</b><table><tr>
<td><input type="text" name="strf" size="15" style="font-size: 9pt" /></td></tr>
<tr><td><font size="-1"><input type="radio" name="myradio" value="0"
checked id="at_site"/>
<label for="at_site">На сайте</label><br/>
<input type="radio" name="myradio" value="1" id="at_ya">
<label for="at_ya">В Яндексе</label></font></td></tr>

<tr><td><input type="submit" value="Найти" style="font-size: 9pt"></td></tr>
</table></form></td>
<td>&nbsp;</td><td><script language="JavaScript"
src="../../../b190.takru.com/in.php@id=199275">
</script></td></tr></table></p>

<p><center><table><tr><td><font size="+1"><B>Найди своих коллег!</B></font><BR>
<script language="javascript"
src="../../../rldp.lovemesweet.ru/banner/db.js.php@rows=01&cols=05&bg=33FF33&sex=0&afrom=18&ato=99&headgif=&sf=1&nwnd=1&pmin=0&cid=RU&tid=0&smu=0&tcl1=000000&tcl2=FF0000">
</script></td>

<td><iframe src="../../../www.linuxcenter.ru/trans/list.phtml@ref=121965&n=5&price=yes"
frameborder="0" vspace="0" hspace="0" width="300" height="350" marginwidth="0"
marginheight="0" scrolling="no"></iframe></td></tr></table></center></p>

<script type="text/javascript" src="../../../bin-layer.ru/popup-686-1.js">
</script>


</BODY>
</HTML>
