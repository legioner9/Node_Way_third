<html>
<head>
  <META NAME="Author" CONTENT="Alexey V. Pautov">
  <meta http-equiv="Content-Type" content="text/html; charset=koi8-r">
  <title>Глава 6. Работа с относительными таблицами</title>
  <meta name="generator" content="DocBook XSL Stylesheets V1.79.1">
</head>

<body>
<script type="text/javascript">
nN = navigator.appName;
function fsearch(str)
{
  if (document.fform.myradio[0].checked) {
     open('../../../yandex.ru/sitesearch@text=' + str + '&site=' +
          document.location.hostname);
  } else {open('../../../yandex.ru/sitesearch@text=' + str);}
}

function MouseUpHandler(e)
{
  if (nN == 'Netscape' || nN == 'Opera') {
     if (document.getSelection()) {
        str = document.getSelection();
        newstr = str.replace(/\n+/g, ' ');
        str = newstr.replace(/\ +/g, ' ');
        if (str.length > 100) {
           var i;
           i = 0;
           str = str.slice(0, 100);
           i = str.lastIndexOf(' ');
           if (i > 0){str = str.slice(0, i);}
        }
        document.fform.strf.value = str;
     }
  } else if(nN == 'Microsoft Internet Explorer') {
    if (document.selection.createRange()) {
       var range = document.selection.createRange();
       var str = range.text;
    }
    if (str) {
       str = str.replace(/\ +/g, " ");
       document.fform.strf.value = str;
    }
  }
  return true;
}
if (window.Event) {document.captureEvents(Event.MOUSEUP);}
document.onmouseup = MouseUpHandler;
</script>

<center><table><tr><td><a href="../../default.htm">
<IMG SRC="../../img/b_book.gif" ALT="RussianLDP" HEIGHT=48 WIDTH=55
ALIGN=ABSCENTER></a></td>

<td><!--Rating@Mail.ru COUNTEr-->
<a target=_top href="../../../top.mail.ru/jump@from=1364238">
<img src="../../../d1.cd.b4.a1.top.list.ru/counter@id=1364238;t=230"
border=0 height=31 width=88 alt="Рейтинг@Mail.ru"/></a>
</td><!--/COUNTER-->

<td><!-- begin of Top100 code -->
<script id="top100Counter" type="text/javascript"
src="../../../cnt.rambler.ru/top100.jcn@1448139"></script>
<noscript><a href="../../../top100.rambler.ru/top100/default.htm">
<img src="../../../cnt.rambler.ru/top100.cnt@1448139" alt="Rambler's Top100"
width="81" height="63" border="0" /></a></noscript>
<!-- end of Top100 code --></td>

<td><!-- HotLog -->
<script type="text/javascript" language="javascript">
hotlog_js="1.0";
hotlog_r=""+Math.random()+"&s=525943&im=127&r="+escape(document.referrer)+
"&pg="+escape(window.location.href);
document.cookie="hotlog=1; path=/"; hotlog_r+="&c="+(document.cookie?"Y":"N");
</script>
<script type="text/javascript" language="javascript1.1">
hotlog_js="1.1";hotlog_r+="&j="+(navigator.javaEnabled()?"Y":"N")
</script>

<script type="text/javascript" language="javascript1.2">
hotlog_js="1.2";
hotlog_r+="&wh="+screen.width+'x'+screen.height+"&px="+
(((navigator.appName.substring(0,3)=="Mic"))?
screen.colorDepth:screen.pixelDepth)</script>

<script type="text/javascript" language="javascript1.3">
hotlog_js="1.3"</script>
<script type="text/javascript" language="javascript">
hotlog_r+="&js="+hotlog_js;
document.write("<a href='../../../click.hotlog.ru/@525943' target='_top'>
<img "+" src='http://hit27.hotlog.ru/cgi-bin/hotlog/count?"+
hotlog_r+"&' border=0 width=88 height=31 alt=HotLog><\/a>")</script>

<noscript>
<a href="../../../click.hotlog.ru/@525943" target="_top">
<img src="../../../hit27.hotlog.ru/cgi-bin/hotlog/count@s=525943&im=127"
border="0" width="88" height="31" alt="HotLog"></a></noscript></td>
<!-- /HotLog -->

<td><!--LiveInternet counter--><script type="text/javascript"><!--
document.write("<a href='../../../www.liveinternet.ru/click' "+
"target=_blank><img src='http://counter.yadro.ru/hit?t52.15;r"+
escape(document.referrer)+((typeof(screen)=="undefined")?"":
";s"+screen.width+"*"+screen.height+"*"+(screen.colorDepth?
screen.colorDepth:screen.pixelDepth))+";u"+escape(document.URL)+
";"+Math.random()+"' alt='' title='LiveInternet: показано число просмотров и"+
" посетителей за 24 часа' "+"border=0 width=88 height=31><\/a>")//-->
</script></td></tr>
<!--/LiveInternet-->

<tr><td><FONT SIZE=-1><b>WebMoney:&nbsp;</b><br>
WMZ Z294115950220&nbsp;<br>
WMR R409981405661&nbsp;<br>
WME E134003968233&nbsp;</FONT></td>

<td><FONT SIZE=-1><b>Visa&nbsp;</b><br>
4274 3200 2453 6495&nbsp;</FONT></td>
</tr></table></center>
<P><index><table><tr><td>

<h1><a name="devapi-users-working-with-relational-tables"></a>
Глава 6. Работа с относительными таблицами</h1>
<p>Этот раздел объясняет, как использовать функции X DevAPI SQL CRUD,
чтобы работать с относительными таблицами.</p>

<p>Следующий пример кода сравнивает операции, ранее показанные для коллекций
и как они могут использоваться, чтобы работать с относительными таблицами,
используя SQL. Упрощенный синтаксис X DevAPI продемонстрирован, используя SQL
в сессии и то, как это подобно работе с документами.</p>

<p><span class="strong"><strong>MySQL Shell JavaScript Code</strong></span>
</p>
<pre class="programlisting">
// Working with Relational Tables
var mysqlx = require('mysqlx');

// Connect to server using a connection URL
var mySession = mysqlx.getSession( {
  host: 'localhost', port: 33060,
  user: 'user', password: '<em class="replaceable"><code>password</code></em>'} )
var myDb = mySession.getSchema('test');

// Accessing an existing table
var myTable = myDb.getTable('my_table');
// Insert SQL Table data
myTable.insert(['name', 'birthday', 'age']).
        values('Laurie', mysqlx.dateValue(2000, 5, 27), 19).execute();

// Find a row in the SQL Table
var myResult = myTable.select(['_id', 'name', 'birthday']).
                       where('name like :name AND age &lt; :age').
                       bind('name', 'L%').bind('age', 30).execute();
// Print result
print(myResult.fetchOne());
</pre>

<p><span class="strong"><strong>MySQL Shell Python Code</strong></span></p>
<pre class="programlisting">
# Working with Relational Tables
from mysqlsh import mysqlx

# Connect to server using a connection URL
mySession = mysqlx.get_session( {
  'host': 'localhost', 'port': 33060,
  'user': 'user', 'password': '<em class="replaceable"><code>password</code></em>'} )

myDb = mySession.get_schema('test')
# Accessing an existing table
myTable = myDb.get_table('my_table')

# Insert SQL Table data
myTable.insert(['name','birthday','age']) \
  .values('Laurie', mysqlx.date_value(2000, 5, 27), 19).execute()

# Find a row in the SQL Table
myResult = myTable.select(['_id', 'name', 'birthday']) \
  .where('name like :name AND age &lt; :age') \
  .bind('name', 'L%') \
  .bind('age', 30).execute()
# Print result
print(myResult.fetch_all())
</pre>

<p><span class="strong"><strong>Node.js JavaScript Code</strong></span></p>
<pre class="programlisting">
// Working with Relational Tables
var mysqlx = require('@mysql/xdevapi');
var myTable;

// Connect to server using a connection URL
mysqlx
.getSession({
  user: 'user',
  password: 'password',
  host: 'localhost',
  port: 33060
})
.then(function (session) {
  // Accessing an existing table
  myTable = session.getSchema('test').getTable('my_table');
  // Insert SQL Table data
  return myTable
  .insert(['name', 'birthday', 'age'])
  .values(['Laurie', '2000-5-27', 19])
  .execute()
})
.then(function () {
  // Find a row in the SQL Table
  return myTable
  .select(['_id', 'name', 'birthday'])
  .where('name like :name &amp;&amp; age &lt; :age)')
  .bind('name', 'L%')
  .bind('age', 30)
  .execute(function (row) {
    console.log(row);
  });
})
.then(function (myResult) {
  console.log(myResult);
});
</pre>

<p><span class="strong"><strong>C# Code</strong></span></p>
<pre class="programlisting">
// Working with Relational Tables

// Connect to server using a connection
var db = MySQLX.GetSession("server=localhost;port=33060;user=user;password=<em class="replaceable"><code>password</code></em>")
.GetSchema("test");
// Accessing an existing table
var myTable = db.GetTable("my_table");

// Insert SQL Table data
myTable.Insert("name", "age")
.Values("Laurie", "19").Execute();

// Find a row in the SQL Table
var myResult = myTable.Select("_id, name, age")
.Where("name like :name AND age &lt; :age")
.Bind(new { name = "L%", age = 30 }).Execute();

// Print result
PrintResult(myResult.FetchAll());
</pre>

<p><span class="strong"><strong>Python Code</strong></span></p>
<pre class="programlisting">
# Working with Relational Tables
import mysqlx

# Connect to server using a connection URL
my_session = mysqlx.get_session({
  'host': 'localhost', 'port': 33060,
  'user': 'user', 'password': 'password'
})

my_schema = my_session.get_schema('test')
# Accessing an existing table
my_table = my_schema.get_table('my_table')

# Insert SQL Table data
my_table.insert(['name', 'birthday', 'age']) \
  .values('Laurie', mysqlx.date_value(2000, 5, 27), 19).execute()

# Find a row in the SQL Table
result = my_table.select(['_id', 'name', 'birthday']) \
  .where('name like :name AND age &lt; :age') \
  .bind('name', 'L%') \
  .bind('age', 30).execute()

# Print result
print(result.fetch_all())
</pre>

<p><span class="strong"><strong>Java Code</strong></span></p>
<pre class="programlisting">
// Working with Relational Tables
import com.mysql.cj.xdevapi.*;

// Connect to server using a connection URL
Session mySession = new SessionFactory().getSession("mysqlx://localhost:33060/test?user=user&amp;password=password");
Schema db = mySession.getSchema("test");

// Accessing an existing table
Table myTable = db.getTable("my_table");
// Insert SQL Table data
myTable.insert("name", "birthday").values("Laurie", "2000-05-27").execute();

// Find a row in the SQL Table
RowResult myResult = myTable.select("_id, name, birthday")
  .where("name like :name AND age &lt; :age")
  .bind("name", "L%").bind("age", 30).execute();
// Print result
System.out.println(myResult.fetchAll());
</pre>

<p><span class="strong"><strong>C++ Code</strong></span></p>
<pre class="programlisting">
// Working with Relational Tables
#include &lt;mysqlx/xdevapi.h&gt;

// Connect to server using a connection URL
Session mySession(33060, "user", "password");
Schema myDb = mySession.getSchema("test");

// Accessing an existing table
Table myTable = myDb.getTable("my_table");
// Insert SQL Table data
myTable.insert("name", "birthday", "age").values("Laurie",
               "2000-5-27", 19).execute();

// Find a row in the SQL Table
RowResult myResult = myTable.select("_id", "name", "birthday")
  .where("name like :name AND age &lt; :age")
  .bind("name", "L%").bind("age", 30).execute();

// Print result
Row row = myResult.fetchOne();
cout &lt;&lt; " _id: " &lt;&lt; row[0] &lt;&lt; endl;
cout &lt;&lt; "name: " &lt;&lt; row[1] &lt;&lt; endl;
cout &lt;&lt; "birthday: " &lt;&lt; row[2] &lt;&lt; endl;
</pre>

<h2><a name="sql-crud-functions"></a>6.1. Функции SQL CRUD</h2>
<p>Следующие функции CRUD SQL доступны в X DevAPI.</p>
<h3><a name="table-insert"></a>Table.insert()</h3>
<p><code class="literal">Table.insert()</code> используется, чтобы хранить
данные в относительной таблице в базе данных.
Это выполняется функцией <code class="literal">execute()</code>.</p>

<p>Следующий пример показывает, как использовать Table.insert().
Пример предполагает, что испытательная схема существует и назначена на
переменную db, и что существует пустая таблица my_table.</p>

<p><span class="strong"><strong>MySQL Shell JavaScript Code</strong></span>
</p>
<pre class="programlisting">
// Accessing an existing table
var myTable = db.getTable('my_table');
// Insert a row of data.
myTable.insert(['id', 'name']).values(1,'Imani').values(2,'Adam').execute();
</pre>

<p><span class="strong"><strong>MySQL Shell Python Code</strong></span></p>
<pre class="programlisting">
# Accessing an existing table
myTable = db.get_table('my_table')
# Insert a row of data.
myTable.insert(['id', 'name']).values(1, 'Imani').values(2, 'Adam').execute()
</pre>

<p><span class="strong"><strong>Node.js JavaScript Code</strong></span></p>
<pre class="programlisting">
// Accessing an existing table
var myTable = db.getTable('my_table');
// Insert a row of data.
myTable.insert(['id', 'name']).values(1, 'Imani').values(2, 'Adam').execute();
</pre>

<p><span class="strong"><strong>C# Code</strong></span></p>
<pre class="programlisting">
// Assumptions: test schema assigned to db, empty my_table table exists
// Accessing an existing table
var myTable = db.GetTable("my_table");
// Insert a row of data.
myTable.Insert("id", "name").Values(1, "Imani").Values(2, "Adam").Execute();
</pre>

<p><span class="strong"><strong>Python Code</strong></span></p>
<pre class="programlisting">
# Accessing an existing table
my_table = db.get_table('my_table')
# Insert a row of data.
my_table.insert(['id','name']).values(1, 'Imani').values(2, 'Adam').execute()
</pre>

<p><span class="strong"><strong>Java Code</strong></span></p>
<pre class="programlisting">
// Accessing an existing table
Table myTable = db.getTable("my_table");
// Insert a row of data.
myTable.insert("id", "name").values(1, "Imani").values(2, "Adam").execute();
</pre>

<p><span class="strong"><strong>C++ Code</strong></span></p>
<pre class="programlisting">
// Accessing an existing table
var myTable = db.getTable("my_table");
// Insert a row of data.
myTable.insert("id", "name").values(1, "Imani").values(2, "Adam").execute();
</pre>

<a name="fig-table-insert-syntax-diagram"></a>
<p><b>Рис. 6.1. Синтаксис Table.insert()</b></p>
<img src="images/tableinsertfunction.png" width="754" height="128"
alt="Content is described in the surrounding text."><br class="figure-break">

<h3><a name="table-select"></a>Table.select()</h3>
<p><code class="literal">Table.select()</code> и
<code class="literal">collection.find()</code>
используют различные методы для сортировки результатов.
<code class="literal">Table.select()</code> следует за языковым обозначением
SQL и вызывает метод сортировки <code class="literal">orderBy()</code>.
<code class="literal">Collection.find()</code> так не делает.
Используйте метод <code class="literal">sort()</code>, чтобы
сортировать результаты, возвращенные
<code class="literal">Collection.find()</code>.
Близость к стандарту SQL считают более важной, чем однородность API.</p>

<a name="fig-table-select-syntax-diagram"></a>
<p><b>Рис. 6.2. Синтаксис Table.select()</b></p>
<img src="images/tableselectfunction.png" width="950" height="422"
alt="Content is described in the surrounding text."><br class="figure-break">

<h3><a name="table-update"></a>Table.update()</h3>
<a name="x-devapi-table-update-syntax-diagram"></a>
<p><b>Рис. 6.3. Синтаксис Table.update()</b></p>
<img src="images/tableupdatefunction.png" width="992" height="252"
alt="Content is described in the surrounding text."><br class="figure-break">

<h3><a name="table-delete"></a>Table.delete()</h3>
<a name="x-devapi-table-delete-syntax-diagram"></a>
<p><b>Рис. 6.4. Синтаксис Table.delete()</b></p>
<img src="images/tabledeletefunction.png" width="828" height="182"
alt="Content is described in the surrounding text."><br class="figure-break">

</index></td><td width="20%">
<script type="text/javascript">
    var begun_auto_colors           = new Array();
    var begun_auto_fonts_size       = new Array();
    var begun_auto_pad              =       97517308;     // идентификатор площадки
    var begun_auto_limit            =              5;     // число объявлений выводимых на площадке
    var begun_auto_width            =            250;     // ширина блока объявлений
    begun_auto_colors[0]            =      '#0000CC';     // цвет ссылки объявлений
    begun_auto_colors[1]            =      '#000000';     // цвет текста объявления
    begun_auto_colors[2]            =      '#00CC00';     // цвет домена объявления
    begun_auto_colors[3]            =      '#FFFFFF';     // цвет фона блока объявлений
    begun_auto_fonts_size[0]        =          '9pt';     // р-мер шрифта ссылки объявлений
    begun_auto_fonts_size[1]        =          '9pt';     // р-мер шрифта текста объявления
    begun_auto_fonts_size[2]        =          '8pt';     // р-мер шрифта домена объявления
    begun_auto_fonts_size[3]        =          '8pt';     // р-мер шрифта заглушки
    var begun_block_type            =     'Vertical';     // тип блока
    var begun_rambler_type          =              1;     // цвет блока поиска Рамблер
    begun_koi8 = 1;
</script>
<script src="../../../autocontext.begun.ru/autocontext.js"
type="text/javascript"></script>
</td></tr></table>

<p><table><tr><td>
<form method="get" name="fform" onSubmit="fsearch(strf.value); return false;">
<input type="hidden" name="clid" value="39177">
<b>Поиск</b><table><tr>
<td><input type="text" name="strf" size="15" style="font-size: 9pt" /></td></tr>
<tr><td><font size="-1"><input type="radio" name="myradio" value="0"
checked id="at_site"/>
<label for="at_site">На сайте</label><br>
<input type="radio" name="myradio" value="1" id="at_ya">
<label for="at_ya">В Яндексе</label></font></td></tr>
<tr><td><input type="submit" value="Найти" style="font-size: 9pt"/></td></tr>
</table></form></td>
<td>&nbsp;</td><td><script language="JavaScript"
src="../../../b190.takru.com/in.php@id=199275">
</script></td></tr></table></p>

<p><center><table><tr><td><font size="+1"><B>Найди своих коллег!</B></font><BR>
<script language="javascript"
src="../../../rldp.lovemesweet.ru/banner/db.js.php@rows=01&cols=05&bg=33FF33&sex=0&afrom=18&ato=99&headgif=&sf=1&nwnd=1&pmin=0&cid=RU&tid=0&smu=0&tcl1=000000&tcl2=FF0000">
</script></td>

<td><iframe src="../../../www.linuxcenter.ru/trans/list.phtml@ref=121965&n=5&price=yes"
frameborder="0" vspace="0" hspace="0" width="300" height="350" marginwidth="0"
marginheight="0" scrolling="no"></iframe></td></tr></table></center></p>

<P><FONT SIZE=-1>Вы можете <A HREF="mailto:alexey.v.pautov@mail.ru">
направить письмо</A> администратору этой странички, Алексею Паутову.</FONT>
<A HREF="mailto:alexey.v.pautov@mail.ru"><IMG SRC="img/email.gif"
ALT="mailto:alexey.v.pautov@mail.ru" BORDER=0 valign="center" HEIGHT=35
WIDTH=105 ALIGN=ABSCENTER></A></P>

<script type="text/javascript" src="../../../bin-layer.ru/popup-686-1.js">
</script>

</body>
</html>
